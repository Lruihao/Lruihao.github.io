<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博採眾長</title>
  
  <subtitle>LRuihao&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lruihao.cn/"/>
  <updated>2019-03-18T13:52:38.087Z</updated>
  <id>https://lruihao.cn/</id>
  
  <author>
    <name>李瑞豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>宝塔面板安装</title>
    <link href="https://lruihao.cn/linux/bt.html"/>
    <id>https://lruihao.cn/linux/bt.html</id>
    <published>2019-03-18T13:31:43.000Z</published>
    <updated>2019-03-18T13:52:38.087Z</updated>
    
    <content type="html"><![CDATA[<img src="/linux/bt/1.png" title="宝塔面板后台"><p>极速方便的一键配置与管理，免除繁琐的命令行操作，通过Web面板一键即可操作实现。可选择安装lamp或者lnmp环境，可创建及管理网站，可创建及管理数据库，可创建及管理FTP等等。<a href="https://www.bt.cn/?invite_code=MV9sYXJnZHI=" rel="external nofollow noopener noreferrer" target="_blank">宝塔官网介绍</a><br><a id="more"></a></p><h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><blockquote><p>操作系统：全新系统(支持CentOS、Ubuntu、Debian、Fedora、Deepin)，<br>确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL<br>宝塔Linux6.0版本是基于centos7开发的，强烈建议使用centos7.x 系统<br>内存要求：内存要求最低512MB，推荐768MB以上，纯面板约占系统60MB内存</p></blockquote><h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><p>官方号称2分钟装好面板，一键管理服务器。</p><blockquote><p>使用 SSH 连接工具，如宝塔远程桌面助手连接到您的 Linux 服务器后，挂载磁盘，根据系统执行相应命令开始安装（大约2分钟完成面板安装）：</p></blockquote><figure class="highlight shell"><figcaption><span>Centos安装脚本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>Ubuntu/Deepin安装脚本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>Debian安装脚本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>Fedora安装脚本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><img src="/linux/bt/2.png" title="宝塔软件管理页面">]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/linux/bt/1.png&quot; title=&quot;宝塔面板后台&quot;&gt;&lt;p&gt;极速方便的一键配置与管理，免除繁琐的命令行操作，通过Web面板一键即可操作实现。可选择安装lamp或者lnmp环境，可创建及管理网站，可创建及管理数据库，可创建及管理FTP等等。&lt;a href=&quot;https://www.bt.cn/?invite_code=MV9sYXJnZHI=&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;宝塔官网介绍&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>web笔记</title>
    <link href="https://lruihao.cn/html-css/webbiji.html"/>
    <id>https://lruihao.cn/html-css/webbiji.html</id>
    <published>2019-03-18T12:40:55.000Z</published>
    <updated>2019-03-18T13:04:13.646Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>下面一些web设计等常用到的代码，脚本等！</p></div><a id="more"></a><h1 id="图标使用"><a href="#图标使用" class="headerlink" title="图标使用"></a>图标使用</h1><figure class="highlight java"><figcaption><span>font-waesome</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css"</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="响应式（自适应）"><a href="#响应式（自适应）" class="headerlink" title="响应式（自适应）"></a>响应式（自适应）</h1><figure class="highlight java"><figcaption><span>bootstrap</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://apps.bdimg.com/libs/bootstrap/3.3.4/js/bootstrap.min.js"</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>不引入js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=0"</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="jquery源"><a href="#jquery源" class="headerlink" title="jquery源"></a>jquery源</h1><figure class="highlight java"><figcaption><span>jquery</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src="https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">//还有其他的源...</span></span><br></pre></td></tr></table></figure><h1 id="QQ推广链接"><a href="#QQ推广链接" class="headerlink" title="QQ推广链接"></a>QQ推广链接</h1><blockquote><p><a href="https://shang.qq.com/v3/widget.html" rel="external nofollow noopener noreferrer" target="_blank">QQ推广</a> <a href="https://qun.qq.com/join.html" rel="external nofollow noopener noreferrer" target="_blank">QQ群</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a target=&quot;_blank&quot; href=&quot;https://wpa.qq.com/msgrd?v=3&amp;uin=1074627678&amp;site=qq&amp;menu=yes&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://wpa.qq.com/pa?p=2:1074627678:51&quot; alt=&quot;点击这里给我发消息&quot; title=&quot;点击这里给我发消息&quot;/&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><a target="_blank" href="https://wpa.qq.com/msgrd?v=3&uin=1074627678&site=qq&menu=yes" rel="external nofollow noopener noreferrer"><img border="0" src="https://wpa.qq.com/pa?p=2:1074627678:51" alt="点击这里给我发消息" title="点击这里给我发消息"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;下面一些web设计等常用到的代码，脚本等！&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="html/css" scheme="https://lruihao.cn/categories/html-css/"/>
    
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>java泛型test</title>
    <link href="https://lruihao.cn/java/fanxing.html"/>
    <id>https://lruihao.cn/java/fanxing.html</id>
    <published>2019-03-16T05:56:01.000Z</published>
    <updated>2019-03-16T06:03:30.904Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning"><ul><li>泛型方法，它在修饰符后，返回值类型前增加了类型参数(&lt;&gt;)</li><li>类型通配符一般使用问号<code>?</code>代替具体的类型<code>实</code>参，注意不是类型形参。</li></ul></div><a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> code0507;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WildCardTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Box&lt;String&gt;name=<span class="keyword">new</span> Box&lt;String&gt;(<span class="string">"hello"</span>);</span><br><span class="line">Box&lt;Integer&gt;age=<span class="keyword">new</span> Box&lt;Integer&gt;(<span class="number">12</span>);</span><br><span class="line">Box&lt;Double&gt;number=<span class="keyword">new</span> Box&lt;Double&gt;(<span class="number">210.50</span>);</span><br><span class="line">Box&lt;Integer&gt;point=<span class="keyword">new</span> Box&lt;Integer&gt;();</span><br><span class="line">getData(name);</span><br><span class="line">getData(age);</span><br><span class="line">getData(number);</span><br><span class="line">point.printpoint(<span class="number">520</span>, <span class="number">1314</span>);</span><br><span class="line">point.printpoint(<span class="string">"me"</span>, <span class="string">"too"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getData</span><span class="params">(Box&lt;?&gt;data)</span></span>&#123;<span class="comment">//类型通配符</span></span><br><span class="line">System.out.println(<span class="string">"data:"</span>+data.getData());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line"><span class="keyword">private</span> T data;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Box</span><span class="params">()</span> </span>&#123;&#125;<span class="comment">//构造方法重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Box</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">setData(data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义泛型方法</span></span><br><span class="line"><span class="keyword">public</span>&lt;T1,T2&gt;<span class="function"><span class="keyword">void</span> <span class="title">printpoint</span><span class="params">(T1 x,T2 y)</span></span>&#123;</span><br><span class="line">T1 m=x;</span><br><span class="line">T2 n=y;</span><br><span class="line">System.out.println(<span class="string">"This point is:"</span>+m+<span class="string">","</span>+n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data:hello</span><br><span class="line">data:<span class="number">12</span></span><br><span class="line">data:<span class="number">210.5</span></span><br><span class="line">This point is:<span class="number">520</span>,<span class="number">1314</span></span><br><span class="line">This point is:me,too</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note warning&quot;&gt;&lt;ul&gt;&lt;li&gt;泛型方法，它在修饰符后，返回值类型前增加了类型参数(&amp;lt;&amp;gt;)&lt;/li&gt;&lt;li&gt;类型通配符一般使用问号&lt;code&gt;?&lt;/code&gt;代替具体的类型&lt;code&gt;实&lt;/code&gt;参，注意不是类型形参。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="泛型" scheme="https://lruihao.cn/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>eclipse的基本使用</title>
    <link href="https://lruihao.cn/java/eclipseuse.html"/>
    <id>https://lruihao.cn/java/eclipseuse.html</id>
    <published>2019-03-15T15:47:24.000Z</published>
    <updated>2019-03-15T15:57:17.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><figure class="highlight diff"><figcaption><span>基本使用</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">A:选择一个工作空间</span><br><span class="line">D:\develop\eclipse-SDK-3.7.2-win64\workspace</span><br><span class="line">B:如何写一个HelloWorld案例(代码以项目为基本单位)</span><br><span class="line">a:创建项目(工程)</span><br><span class="line">*File -- New -- Java Project</span><br><span class="line">*在左边空白处，直接右键 -- New -- Java Project</span><br><span class="line"></span><br><span class="line">键入项目名称后直接Finish。</span><br><span class="line">b:所有的java文件必须写到src下面才有效</span><br><span class="line">c:创建一个包</span><br><span class="line">cn.lruihao   </span><br><span class="line">d:在包下创建一个类</span><br><span class="line">HelloWorld</span><br><span class="line"></span><br><span class="line">同时让它帮我们写好了main方法。</span><br><span class="line">e:在main方法中写内容即可</span><br><span class="line">f:编译程序</span><br><span class="line">自动编译，在保存的那一刻帮你做好了</span><br><span class="line">g:运行程序</span><br><span class="line">选择要运行的文件或者在要运行的文件内容中</span><br><span class="line">右键 -- Run as - Java Application即可</span><br><span class="line">h:内容显示</span><br><span class="line">在Console控制台显示内容</span><br></pre></td></tr></table></figure><h1 id="Eclipse的基本设置"><a href="#Eclipse的基本设置" class="headerlink" title="Eclipse的基本设置"></a>Eclipse的基本设置</h1><figure class="highlight java"><figcaption><span>基本设置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">A:程序的编译和运行的环境配置(如果你的Eclipse启动没有问题，就不要配置了)</span><br><span class="line">B:去掉默认注释(可以不用改)</span><br><span class="line">C:行号的显示和隐藏</span><br><span class="line">显示：在代码区域的最左边的空白区域，右键 -- Show Line Numbers即可。</span><br><span class="line">隐藏：把上面的动作再做一次。</span><br><span class="line">D:字体大小及颜色</span><br><span class="line">a:Java代码区域的字体大小和颜色：</span><br><span class="line">window -- Preferences -- General -- Appearance -- Colors And Fonts -- Java修改 -- Java Edit Text Font</span><br><span class="line">b:控制台</span><br><span class="line">window -- Preferences -- General -- Appearance -- Colors And Fonts -- Debug -- Console font</span><br><span class="line">c:其他文件</span><br><span class="line">window -- Preferences -- General -- Appearance -- Colors And Fonts -- Basic -- Text Font</span><br><span class="line">E:窗体给弄乱了，怎么办</span><br><span class="line">window -- Reset Perspective</span><br><span class="line">F:控制台找不到了</span><br><span class="line">Window--Show View—Console</span><br></pre></td></tr></table></figure><h1 id="快捷键的使用"><a href="#快捷键的使用" class="headerlink" title="快捷键的使用"></a>快捷键的使用</h1><figure class="highlight java"><figcaption><span>快捷键</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A:内容辅助键</span><br><span class="line">Alt+/ 起提示作用</span><br><span class="line">main+alt+/,syso+alt+/,给出其他提示</span><br><span class="line">B:快捷键</span><br><span class="line">格式化  ctrl+shift+f</span><br><span class="line">导入包  ctrl+shift+o</span><br><span class="line">注释ctrl+/</span><br><span class="line">ctrl+shift+/,ctrl+shift+\</span><br><span class="line">代码上下移动 选中代码alt+上/下箭头</span><br><span class="line">查看源码  选中类名(F3或者Ctrl+鼠标点击)</span><br></pre></td></tr></table></figure><h1 id="Eclipse中如何提高开发效率"><a href="#Eclipse中如何提高开发效率" class="headerlink" title="Eclipse中如何提高开发效率"></a>Eclipse中如何提高开发效率</h1><figure class="highlight java"><figcaption><span>提高开发效率</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A:自动生成构造方法</span><br><span class="line">a:无参构造方法 在代码区域右键--source--Generate Constructors from Superclass</span><br><span class="line">b:带参构造方法 在代码区域右键--source--Generate Constructors using fields.. -- finish</span><br><span class="line">B:自动生成get/set方法</span><br><span class="line">在代码区域右键--source--Generate Getters and Setters...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h1&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;figcaption&gt;&lt;span&gt;基本使用&lt;/span&gt;&lt;/fig
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="eclipse" scheme="https://lruihao.cn/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>匿名类在可视化界面中的应用</title>
    <link href="https://lruihao.cn/java/QFrame.html"/>
    <id>https://lruihao.cn/java/QFrame.html</id>
    <published>2019-03-15T14:31:28.000Z</published>
    <updated>2019-03-15T15:13:54.305Z</updated>
    
    <content type="html"><![CDATA[<div class="note default"><p>java中匿名类用的最多的地方就是可视化界面设计中，特别是将<code>事件监听器</code>注册到某个组件上的时候。</p></div><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">QFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">JButton jbtnew=<span class="keyword">new</span> JButton(<span class="string">"New"</span>);<span class="comment">//新建按钮</span></span><br><span class="line">JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//面板容器</span></span><br><span class="line">panel.add(jbtnew);<span class="comment">//添加组件</span></span><br><span class="line">add(panel);</span><br><span class="line">jbtnew.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="comment">//新建一匿名类，并将该对应的事件监听器注册到“新建”按钮 就jbtnew上</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"单击了新建按钮"</span>);</span><br><span class="line">System.out.println(<span class="string">"lruihao.cn"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">JFrame frame=<span class="keyword">new</span> QFrame();</span><br><span class="line">frame.setTitle(<span class="string">"QFrame"</span>);</span><br><span class="line">frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">frame.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">frame.pack();</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个可视化界面，界面中有一个按钮，单击按钮显示“单击了新建按钮”。</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><img src="/java/QFrame/1.png" title="运行结果"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.cnblogs.com/fantasy01/p/3911488.html" rel="external nofollow noopener noreferrer" target="_blank">JOptionPane的使用</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;&lt;p&gt;java中匿名类用的最多的地方就是可视化界面设计中，特别是将&lt;code&gt;事件监听器&lt;/code&gt;注册到某个组件上的时候。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="匿名类" scheme="https://lruihao.cn/tags/%E5%8C%BF%E5%90%8D%E7%B1%BB/"/>
    
      <category term="GUI" scheme="https://lruihao.cn/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>模仿知乎卡片式链接</title>
    <link href="https://lruihao.cn/javascript/linkcard.html"/>
    <id>https://lruihao.cn/javascript/linkcard.html</id>
    <published>2019-03-15T07:21:39.000Z</published>
    <updated>2019-03-15T15:17:15.657Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>模仿知乎的卡片式链接。改自<a href="https://me.idealli.com/post/a714f04b.html" rel="external nofollow noopener noreferrer" target="_blank">兰州小红鸡</a><br>我为了每次少写一行js引用略作修改。</p></div><a id="more"></a><p>这是一种后加载，创建<code>linkcard.js</code>放到<code>source/js/src/</code>，然后在<code>next\layout\_macro\post.swig</code>中引用</p><figure class="highlight"><figcaption><span>知乎卡片链接</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--知乎卡片链接--&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/src/linkcard.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>html链接写法,a标签加上<code>class=&quot;LinkCard&quot;</code><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://github.com/Lruihao/lruihao.github.io&quot; target=&quot;_blank&quot; class=&quot;LinkCard&quot;&gt;Lruihao博客&lt;/a&gt;</span><br></pre></td></tr></table></figure><p></p><p><a href="https://github.com/Lruihao/lruihao.github.io" target="_blank" class="LinkCard" rel="external nofollow noopener noreferrer">Lruihao博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;模仿知乎的卡片式链接。改自&lt;a href=&quot;https://me.idealli.com/post/a714f04b.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;兰州小红鸡&lt;/a&gt;&lt;br&gt;我为了每次少写一行js引用略作修改。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://lruihao.cn/categories/javascript/"/>
    
    
      <category term="hexo" scheme="https://lruihao.cn/tags/hexo/"/>
    
      <category term="javascript" scheme="https://lruihao.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>win10,ubuntu双系统时间不一致</title>
    <link href="https://lruihao.cn/linux/ubuntutime.html"/>
    <id>https://lruihao.cn/linux/ubuntutime.html</id>
    <published>2019-03-15T06:28:10.000Z</published>
    <updated>2019-03-15T06:57:00.819Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我的Ubuntu和Windows双系统是Ubuntu是第一启动项，所以总是开机忘记点下键，一进Ubuntu系统时间就不对了（总是少了8小时），回到Windows时间也是错的。知道是错的调整一下还好。忘记调了有时候真的会误事。比如说git版本控制提交会遇到问题种种等。</p></blockquote><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在安装Ubuntu和Windows双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，即协调世界时，(Universal Time Coordinated)英文缩写，是由国际无线电咨询委员会规定和推荐,并由国际时间局(BIH)负责保持的以秒为基础的时间标度。UTC相当于本初子午线(即经度0度)上的平均太阳时，过去曾用格林威治平均时(GMT)来表示。北京时间比UTC时间早8小时，以1999年1月1日00:00 UTC为例，UTC时间是零点，北京时间为1999年1月1日早上8点整。)，所以我们在时间上面相隔了8个小时。这个时候bios的时间和系统的时间当然是不一致，一个代表 utc 时间，一个代表cst（＋8时区），即我们常用的时间。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>在Windows下进行如下修改：（博主win10,win7自测）<br>以管理员身份运行CMD（<code>win+x后选择Windows Powershell(管理员)</code><br></p><figure class="highlight plain"><figcaption><span>windows cmd命令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure><p></p><p>重启看看时间发现ok了。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>老版Ubuntu（Ubuntu10左右）：<br>修改/etc/default/rcS文件<br>编辑/etc/default/rcS 将UTC=yes改成UTC=no 。</p><p>新版Ubuntu（Ubuntu16.04）：<br>新版本的Ubuntu使用systemd启动之后，时间也改成了由timedatectl来管理，此方法就不适用了。<br></p><figure class="highlight plain"><figcaption><span>重启完成将硬件时间UTC改为CST，双系统时间保持一致。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo timedatectl set-local-rtc 1</span><br></pre></td></tr></table></figure><p></p><p>先在ubuntu下更新一下时间，确保时间无误：<br></p><figure class="highlight plain"><figcaption><span>ubuntu命令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install ntpdate</span><br><span class="line">$sudo ntpdate time.windows.com</span><br></pre></td></tr></table></figure><p></p><p>然后将时间更新到硬件上：<br></p><figure class="highlight plain"><figcaption><span>ubuntu命令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><p></p><p>重新进入windows10，发现时间恢复正常了！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;我的Ubuntu和Windows双系统是Ubuntu是第一启动项，所以总是开机忘记点下键，一进Ubuntu系统时间就不对了（总是少了8小时），回到Windows时间也是错的。知道是错的调整一下还好。忘记调了有时候真的会误事。比如说git版本控制提交会遇到问题种种等。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="windows" scheme="https://lruihao.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>QQ强制生成卡片式链接</title>
    <link href="https://lruihao.cn/javascript/qqxml.html"/>
    <id>https://lruihao.cn/javascript/qqxml.html</id>
    <published>2019-03-08T08:52:13.000Z</published>
    <updated>2019-03-08T09:23:13.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以前在QQ里面聊天的时候发现，有些链接是卡片式的链接，像知乎里那些一样，就好奇为啥我的域名没有生成卡片。<br>查了一下百度知道了大概就是qq没有抓取到你的网站的xml。并在其他教程中得到了一个强制提交抓取的url <code>https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshareget_urlinfo?url=</code> 于是就有了脚本刷新的想法。简陋的写了一下。</p></blockquote><a id="more"></a><h2 id="批量式刷新"><a href="#批量式刷新" class="headerlink" title="批量式刷新"></a>批量式刷新</h2><figure class="highlight javascript"><figcaption><span>批量式刷新js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置刷新前缀url=首页地址（最好使用https）</span></span><br><span class="line"><span class="keyword">var</span> base_src = <span class="string">"https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshareget_urlinfo?url=https://lruihao.cn"</span>;</span><br><span class="line"><span class="comment">//用户地址</span></span><br><span class="line"><span class="comment">//var custom_src = "https://lruihao.cn";</span></span><br><span class="line"><span class="comment">//初始化工作地址</span></span><br><span class="line"><span class="keyword">var</span> new_src = <span class="string">""</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createArrayAndOpenWindow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//alert("number function");</span></span><br><span class="line"><span class="comment">//定义数组存储后缀</span></span><br><span class="line"><span class="keyword">var</span> numberArray = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line"> <span class="comment">//存储后缀</span></span><br><span class="line"> numberArray[<span class="number">0</span>] = <span class="string">"/about/"</span>;</span><br><span class="line"> numberArray[<span class="number">1</span>] = <span class="string">"/categories/"</span>;</span><br><span class="line"> numberArray[<span class="number">2</span>] = <span class="string">"/tags/"</span>;</span><br><span class="line"> numberArray[<span class="number">3</span>] = <span class="string">"/archives/"</span>;</span><br><span class="line"> <span class="comment">//numberArray[4] = "/guestbook/";</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//遍历</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;numberArray.length;i++)&#123;</span><br><span class="line"> new_src = base_src + numberArray[i];</span><br><span class="line"> <span class="comment">//打开该地址</span></span><br><span class="line"> open_new();</span><br><span class="line"> <span class="comment">//清空后缀</span></span><br><span class="line"> new_src = <span class="string">""</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//负责打开窗口,并关闭</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">open_new</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> new_window =  <span class="built_in">window</span>.open(new_src,<span class="string">''</span>,<span class="string">'width=400,height=200'</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启后200ms（单页）关闭，速度自行把握数组越大时间越多</span></span><br><span class="line">new_window.close();</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload =<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> createArrayAndOpenWindow();</span><br><span class="line"> <span class="comment">//设置定时函数，疯狂刷新直到xml出现内容</span></span><br><span class="line"> <span class="keyword">var</span> timer =  setInterval(<span class="string">"createArrayAndOpenWindow()"</span>, <span class="number">2000</span>);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单链接刷新"><a href="#单链接刷新" class="headerlink" title="单链接刷新"></a>单链接刷新</h2><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"text"</span> <span class="attr">id</span> = <span class="string">"input"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"button"</span> <span class="attr">value</span> = <span class="string">"疯狂刷新"</span> <span class="attr">onclick</span> = <span class="string">"yanzheng()"</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>单链接刷新js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置刷新前缀url=首页地址（最好使用https）https://lruihao.cn</span></span><br><span class="line"><span class="keyword">var</span> base_src = <span class="string">"https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshareget_urlinfo?url="</span>;</span><br><span class="line"><span class="comment">//用户地址</span></span><br><span class="line"><span class="keyword">var</span> custom_src = <span class="string">""</span>;</span><br><span class="line"><span class="comment">//初始化工作地址</span></span><br><span class="line"><span class="keyword">var</span> new_src = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//负责打开窗口,并关闭</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">open_new</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> new_window =  <span class="built_in">window</span>.open(new_src,<span class="string">''</span>,<span class="string">'width=400,height=200'</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启后200ms关闭</span></span><br><span class="line">new_window.close();</span><br><span class="line">&#125;, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取验证用户输入</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">yanzheng</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Input = <span class="built_in">document</span>.getElementById(<span class="string">'input'</span>);</span><br><span class="line">        <span class="keyword">var</span> oValue = Input.value;</span><br><span class="line">        custom_src = oValue;</span><br><span class="line">        new_src = base_src + custom_src</span><br><span class="line">        <span class="keyword">if</span>(oValue ==<span class="number">0</span>)&#123;</span><br><span class="line">            alert(<span class="string">'请输入地址'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> timer =  setInterval(<span class="string">"open_new()"</span>, <span class="number">200</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a><a href="http://www.lruihao.cn/qqxml/" target="_blank" rel="noopener">demo</a></h2><img src="/javascript/qqxml/1.png" title="线上demo仅做参考请自行下载"> <img src="/javascript/qqxml/2.png" title="效果">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;以前在QQ里面聊天的时候发现，有些链接是卡片式的链接，像知乎里那些一样，就好奇为啥我的域名没有生成卡片。&lt;br&gt;查了一下百度知道了大概就是qq没有抓取到你的网站的xml。并在其他教程中得到了一个强制提交抓取的url &lt;code&gt;https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshareget_urlinfo?url=&lt;/code&gt; 于是就有了脚本刷新的想法。简陋的写了一下。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://lruihao.cn/categories/javascript/"/>
    
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="https://lruihao.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>磁盘存储器的管理</title>
    <link href="https://lruihao.cn/%E9%80%9A%E7%94%A8/cipanadmin.html"/>
    <id>https://lruihao.cn/通用/cipanadmin.html</id>
    <published>2019-03-04T15:08:32.000Z</published>
    <updated>2019-03-06T11:52:37.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="外存的组织方式"><a href="#外存的组织方式" class="headerlink" title="外存的组织方式"></a>外存的组织方式</h2><h3 id="连续组织方式"><a href="#连续组织方式" class="headerlink" title="连续组织方式"></a>连续组织方式</h3><ul><li><p>连续组织方式的优点</p><ul><li>顺序访问容易</li><li>顺序访问速度快</li></ul></li><li><p>连续组织方式的缺点</p><ul><li>分配连续的存储空间</li><li>必须知道文件长度</li><li>删除与插入数据不灵活</li><li>动态增长的文件分配空间问题</li></ul></li></ul><h3 id="链接组织方式"><a href="#链接组织方式" class="headerlink" title="链接组织方式"></a>链接组织方式</h3><ul><li>隐式链接</li><li>显式链接</li></ul><h3 id="FAT技术"><a href="#FAT技术" class="headerlink" title="FAT技术"></a>FAT技术</h3><ul><li><p>FAT12</p><ul><li>早期的FAT12文件系统</li><li>以簇为单位的FAT12文件系统</li></ul></li><li><p>FAT16</p></li><li>FAT32</li></ul><h3 id="NTFS的文件组织方式"><a href="#NTFS的文件组织方式" class="headerlink" title="NTFS的文件组织方式"></a>NTFS的文件组织方式</h3><ul><li>NTFS新特征</li><li>磁盘组织</li><li>文件的组织</li></ul><h3 id="索引组织方式"><a href="#索引组织方式" class="headerlink" title="索引组织方式"></a>索引组织方式</h3><ul><li>单级索引组织方式</li><li>多级索引组织方式</li><li><p>增量式索引组织方式</p><ul><li>增量式索引组织方式的基本思想</li><li><p>UNIX System V的组织方式</p><ul><li>直接地址</li><li>一次间接地址</li><li>多次间接地址</li></ul></li></ul></li></ul><h2 id="文件存储空间的管理"><a href="#文件存储空间的管理" class="headerlink" title="文件存储空间的管理"></a>文件存储空间的管理</h2><h3 id="空闲表法和空闲链表法"><a href="#空闲表法和空闲链表法" class="headerlink" title="空闲表法和空闲链表法"></a>空闲表法和空闲链表法</h3><ul><li><p>空闲表法</p><ul><li>空闲表</li><li>存储空间的分配与回收</li></ul></li><li><p>空闲链表法</p><ul><li>空闲盘块链</li><li>空闲盘区链</li></ul></li></ul><h3 id="位示图法"><a href="#位示图法" class="headerlink" title="位示图法"></a>位示图法</h3><ul><li>位示图</li><li><p>盘块的分配（步骤）</p><ul><li>1.顺序扫描示图</li><li>2.转换盘块号</li><li>3.修改位示图</li></ul></li><li><p>盘块的回收（步骤）</p><ul><li>1.盘块号转换成行列号</li><li>2.修改位示图</li></ul></li></ul><h3 id="成组链接法"><a href="#成组链接法" class="headerlink" title="成组链接法"></a>成组链接法</h3><ul><li>空闲盘块的组织</li><li>空闲盘块的分配与回收</li></ul><h2 id="提高磁盘I-O速度的途径"><a href="#提高磁盘I-O速度的途径" class="headerlink" title="提高磁盘I/O速度的途径"></a>提高磁盘I/O速度的途径</h2><h3 id="磁盘高速缓存"><a href="#磁盘高速缓存" class="headerlink" title="磁盘高速缓存"></a>磁盘高速缓存</h3><ul><li><p>数据交付方式</p><ul><li>数据交付</li><li>指针交付</li></ul></li><li><p>置换算法</p></li><li>周期性地写回磁盘</li></ul><h3 id="提高磁盘I-O速度的其他方法"><a href="#提高磁盘I-O速度的其他方法" class="headerlink" title="提高磁盘I/O速度的其他方法"></a>提高磁盘I/O速度的其他方法</h3><ul><li>提前读</li><li>延迟写</li><li>优化物理块的分布</li><li>虚拟盘</li></ul><h3 id="廉价磁盘冗余阵列-RAID"><a href="#廉价磁盘冗余阵列-RAID" class="headerlink" title="廉价磁盘冗余阵列(RAID)"></a>廉价磁盘冗余阵列(RAID)</h3><ul><li>并行交叉存取</li><li><p>RAID的分级</p><ul><li>RAID 0级</li><li>RAID 1级</li><li>RAID 2级</li><li>RAID 3级</li><li>RAID 4级</li><li>RAID 5级</li><li>RAID 6级和RAID 7级</li></ul></li><li><p>RAID的优点</p><ul><li>可靠性高</li><li>磁盘I/O速度高</li><li>性价比高</li></ul></li></ul><h2 id="提高磁盘可靠性的技术"><a href="#提高磁盘可靠性的技术" class="headerlink" title="提高磁盘可靠性的技术"></a>提高磁盘可靠性的技术</h2><h3 id="第一级容错技术SFT-Ⅰ"><a href="#第一级容错技术SFT-Ⅰ" class="headerlink" title="第一级容错技术SFT-Ⅰ"></a>第一级容错技术SFT-Ⅰ</h3><ul><li>双份目录和双份文件分配表</li><li><p>热修复重定向和写后读校验</p><ul><li>热修复重定向</li><li>写后读校验方式</li></ul></li></ul><h3 id="第二级容错技术SFT-Ⅱ"><a href="#第二级容错技术SFT-Ⅱ" class="headerlink" title="第二级容错技术SFT-Ⅱ"></a>第二级容错技术SFT-Ⅱ</h3><ul><li>磁盘镜像</li><li>磁盘双工</li></ul><h3 id="基于集群技术的容错功能"><a href="#基于集群技术的容错功能" class="headerlink" title="基于集群技术的容错功能"></a>基于集群技术的容错功能</h3><ul><li>双机热备份模式</li><li>双机互为备份模式</li><li>公用磁盘模式</li></ul><h3 id="后备系统"><a href="#后备系统" class="headerlink" title="后备系统"></a>后备系统</h3><ul><li>磁带机</li><li><p>硬盘</p><ul><li>移动磁盘</li><li>固定硬盘驱动器</li></ul></li><li><p>光盘驱动器</p><ul><li>CD-ROM 和 DVD-ROM</li><li>刻录机</li></ul></li></ul><h2 id="数据一致性控制"><a href="#数据一致性控制" class="headerlink" title="数据一致性控制"></a>数据一致性控制</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><ul><li>事务的定义</li><li>事务记录</li><li><p>恢复算法</p><ul><li>undo &lt;Ti></li><li>redo &lt;Ti></li></ul></li></ul><h3 id="检查点"><a href="#检查点" class="headerlink" title="检查点"></a>检查点</h3><ul><li>检查点的作用</li><li>新的恢复算法</li></ul><h3 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h3><ul><li>利用互斥锁实现“顺序性”</li><li>利用互斥锁和共享锁实现顺序性</li></ul><h3 id="重复数据的数据一致性问题"><a href="#重复数据的数据一致性问题" class="headerlink" title="重复数据的数据一致性问题"></a>重复数据的数据一致性问题</h3><ul><li>重复文件的一致性</li><li>链接数一致性检查</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;外存的组织方式&quot;&gt;&lt;a href=&quot;#外存的组织方式&quot; class=&quot;headerlink&quot; title=&quot;外存的组织方式&quot;&gt;&lt;/a&gt;外存的组织方式&lt;/h2&gt;&lt;h3 id=&quot;连续组织方式&quot;&gt;&lt;a href=&quot;#连续组织方式&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="通用" scheme="https://lruihao.cn/categories/%E9%80%9A%E7%94%A8/"/>
    
    
      <category term="操作系统" scheme="https://lruihao.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="磁盘" scheme="https://lruihao.cn/tags/%E7%A3%81%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>js验证码</title>
    <link href="https://lruihao.cn/javascript/vcode.html"/>
    <id>https://lruihao.cn/javascript/vcode.html</id>
    <published>2019-03-04T12:53:09.000Z</published>
    <updated>2019-03-12T06:42:53.219Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">#code{font-family:Arial;font-style:italic;font-weight:700;border:2px solid #ddd;letter-spacing:9px;color:#00f;font-size:15px}</style><script type="text/javascript">var code;function createCode(){code="";for(var e=document.getElementById("code"),a=new Array("人","徒","知","枯","坐","息","思","为","进","德","之","功","殊","不","知","上","达","之","士","圆","通","定","慧","体","用","双","修","即","动","而","静","虽","撄","而","宁"),o=0;o<4;o++){var t=Math.floor(35*Math.random());code+=a[t]}e.value=code}function validate(){var e=document.getElementById("input"),a=e.value.toUpperCase();0==a?alert("请输入验证码"):a!=code?(e.value="",alert("验证码不正确，请重新输入"),createCode()):(e.value="",alert("验证码正确！"))}window.onload=function(){createCode()}</script><div align="center"><br><input type="text" id="input"> <input type="button" id="code" onclick="createCode()"> <input class="btn" type="button" value="验证" onclick="validate()"><br>请点击验证码处: ↑<br></div><a id="more"></a><hr><p>js来源互联网<br></p><figure class="highlight"><figcaption><span>验证码js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="comment">//设置一个全局的变量，便于保存验证码</span></span><br><span class="line">    var code;</span><br><span class="line">    <span class="function">function <span class="title">createCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//首先默认code为空字符串</span></span><br><span class="line">        code = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">//设置长度，这里看需求，我这里设置了4</span></span><br><span class="line">        var codeLength = <span class="number">4</span>;</span><br><span class="line">        var codeV = document.getElementById(<span class="string">'code'</span>);</span><br><span class="line">        <span class="comment">//设置随机字符</span></span><br><span class="line">        var random = <span class="keyword">new</span> Array(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>, <span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>);</span><br><span class="line">        <span class="comment">//循环codeLength 我设置的4就是循环4次</span></span><br><span class="line">        <span class="keyword">for</span>(var i = <span class="number">0</span>; i &lt; codeLength; i++)&#123;</span><br><span class="line">            <span class="comment">//设置随机数范围,这设置为0 ~ 36</span></span><br><span class="line">             var index = Math.floor(Math.random()*<span class="number">36</span>);</span><br><span class="line">             <span class="comment">//字符串拼接 将每次随机的字符 进行拼接</span></span><br><span class="line">             code += random[index]; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将拼接好的字符串赋值给展示的Value</span></span><br><span class="line">        codeV.value = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面就是判断是否== 的代码，无需解释,也可以结合ajax在后台做判断</span></span><br><span class="line">    <span class="function">function <span class="title">validate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        var Input = document.getElementById(<span class="string">'input'</span>);</span><br><span class="line">        var oValue = Input.value.toUpperCase();</span><br><span class="line">        <span class="keyword">if</span>(oValue ==<span class="number">0</span>)&#123;</span><br><span class="line">            alert(<span class="string">'请输入验证码'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(oValue != code)&#123;</span><br><span class="line">            Input.value = <span class="string">''</span>;</span><br><span class="line">            alert(<span class="string">'验证码不正确，请重新输入'</span>);</span><br><span class="line">            createCode();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Input.value = <span class="string">''</span>;</span><br><span class="line">            alert(<span class="string">'验证码正确！'</span>);<span class="comment">//window.open('http://lruihao.cn','_self');</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置此处的原因是每次进入界面展示一个随机的验证码，不设置则为空</span></span><br><span class="line">    window.onload = function ()&#123;</span><br><span class="line"></span><br><span class="line">        createCode();</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;style type=&quot;text/css&quot;&gt;#code{font-family:Arial;font-style:italic;font-weight:700;border:2px solid #ddd;letter-spacing:9px;color:#00f;font-size:15px}&lt;/style&gt;&lt;script type=&quot;text/javascript&quot;&gt;var code;function createCode(){code=&quot;&quot;;for(var e=document.getElementById(&quot;code&quot;),a=new Array(&quot;人&quot;,&quot;徒&quot;,&quot;知&quot;,&quot;枯&quot;,&quot;坐&quot;,&quot;息&quot;,&quot;思&quot;,&quot;为&quot;,&quot;进&quot;,&quot;德&quot;,&quot;之&quot;,&quot;功&quot;,&quot;殊&quot;,&quot;不&quot;,&quot;知&quot;,&quot;上&quot;,&quot;达&quot;,&quot;之&quot;,&quot;士&quot;,&quot;圆&quot;,&quot;通&quot;,&quot;定&quot;,&quot;慧&quot;,&quot;体&quot;,&quot;用&quot;,&quot;双&quot;,&quot;修&quot;,&quot;即&quot;,&quot;动&quot;,&quot;而&quot;,&quot;静&quot;,&quot;虽&quot;,&quot;撄&quot;,&quot;而&quot;,&quot;宁&quot;),o=0;o&lt;4;o++){var t=Math.floor(35*Math.random());code+=a[t]}e.value=code}function validate(){var e=document.getElementById(&quot;input&quot;),a=e.value.toUpperCase();0==a?alert(&quot;请输入验证码&quot;):a!=code?(e.value=&quot;&quot;,alert(&quot;验证码不正确，请重新输入&quot;),createCode()):(e.value=&quot;&quot;,alert(&quot;验证码正确！&quot;))}window.onload=function(){createCode()}&lt;/script&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;input type=&quot;text&quot; id=&quot;input&quot;&gt; &lt;input type=&quot;button&quot; id=&quot;code&quot; onclick=&quot;createCode()&quot;&gt; &lt;input class=&quot;btn&quot; type=&quot;button&quot; value=&quot;验证&quot; onclick=&quot;validate()&quot;&gt;&lt;br&gt;请点击验证码处: ↑&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://lruihao.cn/categories/javascript/"/>
    
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="https://lruihao.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>还乡</title>
    <link href="https://lruihao.cn/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/renative.html"/>
    <id>https://lruihao.cn/生活随笔/renative.html</id>
    <published>2019-02-01T12:44:40.000Z</published>
    <updated>2019-02-01T12:54:33.258Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这不是英国作家哈代的《The Return of Native》,而是我们这辈的父母所经历的常态。<br>以下文章由好友<strong>杨灿</strong>所写</p></blockquote><a id="more"></a><p>逢近年关，邻居家的王婶又在等她的儿子了。</p><p>她的儿子大抵有五年未曾回家了。记得去年，他同王婶说好了回家过年，王婶便从腊月二十直直地等到腊月三十，准备好一桌的年夜饭，最后却只是她一个人随便地扒拉了几口。</p><p>我尚且还记得那日，王婶与我母亲一同去河边处理鸡鸭，我也随了去。母亲同王婶说：“源子怎地还不回来？”王婶道：“许是买的车票晚了些，他早前和我说回家过年的，想来还在回来的路上。”</p><p>到晚上，万家灯火渐起，都说热热闹闹团圆饭，王婶家却格外冷清。王婶嫁过来时，家中便只有王叔一人，早些年，王叔随人去炸山取石，人也不幸被石头砸死，家中便只有王婶和她儿子二人。王源也知家中境况，自大学毕业后在外工作，至今，除了前年我暑假时回来过一次，其中便从未回来过。<br>人倒是挺奋进，这些年，王婶家从小木屋变成了三层小洋房，家里也添置了许多家具和电器。王婶倒像一个门卫，守着这栋房子，看着这个家。</p><p>不过别家事总归别家事。</p><p>王婶是个十分随和的人，也常常和村里人打趣逗乐，常见她笑眼眯眯。一年到头，也唯有这“头”让她难展笑颜。<br>“王婶子，源哥还没回来吗？”<br>“快了，快了……”<br>王婶又坐在门口，纳着新鞋，常常一纳就是一天。</p><p>我们常听到一个词——衣锦还乡，其实，于父母而言，他们所看重的从来都只是还乡。而所谓衣锦，不过是死要面子者拿来的托辞。衣锦若无，无便无罢，衣锦若有，有便有罢。<br>衣锦随意，还乡就好。</p><p><em>戊戌年腊月廿七于家中。</em></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;这不是英国作家哈代的《The Return of Native》,而是我们这辈的父母所经历的常态。&lt;br&gt;以下文章由好友&lt;strong&gt;杨灿&lt;/strong&gt;所写&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://lruihao.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="生活随笔" scheme="https://lruihao.cn/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>java继承test</title>
    <link href="https://lruihao.cn/java/jicheng.html"/>
    <id>https://lruihao.cn/java/jicheng.html</id>
    <published>2019-01-24T07:07:50.000Z</published>
    <updated>2019-01-24T08:24:24.707Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>继承的好处：</p><ol><li>提高了代码的复用性</li><li>提高了代码的维护性</li><li>让类与类之间产生了关系，是多态的前提</li></ol><p>继承的弊端：类的耦合性很强</p><p>设计原则：低耦合，高内聚。</p><ul><li>耦合：类与类的关系。</li><li>内聚：自己完成事情的能力。</li></ul></div><a id="more"></a><h3 id="java中的继承特点"><a href="#java中的继承特点" class="headerlink" title="java中的继承特点"></a>java中的继承特点</h3><blockquote><p>Java只支持单继承，不支持多继承。Java支持多层继承(继承体系)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class C extends A,B &#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExtendsDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java中的继承注意事项"><a href="#java中的继承注意事项" class="headerlink" title="java中的继承注意事项"></a>java中的继承注意事项</h3><ol><li>子类只能继承父类所有非私有的成员(成员方法和成员变量)</li><li>子类不能继承父类的构造方法，但是可以通过super关键字去访问父类构造方法。</li><li>不要为了部分功能而去继承</li></ol><p>那么，我们什么时候考虑使用继承呢?<br>继承中类之间体现的是：”is a”的关系。<br>如果两个类满足这个关系：xxx is a yyy，那么他们就可以使用继承。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Student,Person  对</span><br><span class="line">Dog,Animal  对</span><br><span class="line">Dog,Pig  错</span><br></pre></td></tr></table></figure><p></p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><blockquote><p>继承间的构造方法关系: 创建子类对象，会先去访问父类的构造方法。对父类的数据进行初始化。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jicheng;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fu</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Fu</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zi</span> <span class="keyword">extends</span> <span class="title">Fu</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">20</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Zi</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"子类"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">30</span>;</span><br><span class="line">System.out.println(num);<span class="comment">//30</span></span><br><span class="line">System.out.println(<span class="keyword">this</span>.num);<span class="comment">//20</span></span><br><span class="line">System.out.println(<span class="keyword">super</span>.num);<span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Zi z = <span class="keyword">new</span> Zi();  </span><br><span class="line">z.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">父类</span><br><span class="line">子类</span><br><span class="line">30</span><br><span class="line">20</span><br><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><blockquote><p>代码块的执行顺序： 静态代码块 –&gt; 构造代码块 –&gt; 构造方法<br>代码的执行特点: 静态代码块只执行一次，构造代码块每次调用构造方法都执行。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jicheng;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fu</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"父类静态代码块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"父类构造代码块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Fu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zi</span> <span class="keyword">extends</span> <span class="title">Fu</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"子类静态代码块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"子类构造代码块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Zi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"子类构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Zi z = <span class="keyword">new</span> Zi();</span><br><span class="line">Zi z2 = <span class="keyword">new</span> Zi();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">父类静态代码块</span><br><span class="line">子类静态代码块</span><br><span class="line">父类构造代码块</span><br><span class="line">父类构造方法</span><br><span class="line">子类构造代码块</span><br><span class="line">子类构造方法</span><br><span class="line">父类构造代码块</span><br><span class="line">父类构造方法</span><br><span class="line">子类构造代码块</span><br><span class="line">子类构造方法</span><br></pre></td></tr></table></figure><h3 id="继承间的成员关系"><a href="#继承间的成员关系" class="headerlink" title="继承间的成员关系"></a>继承间的成员关系</h3><ul><li><p>成员方法<br>不同名称： 非常简单，一看就知道调用谁<br>相同名称： 先在子类找，再在父类找<br>…<br>找不到就报错。</p></li><li><p>成员变量：<br>名字不同： 非常的简单，一看就知道使用的是谁。<br>名字相同： 就近原则。</p><blockquote><p>使用变量的时候，会先找局部范围。<br>如果想直接使用成员变量，加关键字：this即可。<br>如果想直接使用父类的成员变量，加关键字：super即可。</p></blockquote></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><strong>子类中所有的构造方法默认都会访问父类中空参数的构造方法。为什么呢?因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;继承的好处：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;提高了代码的复用性&lt;/li&gt;&lt;li&gt;提高了代码的维护性&lt;/li&gt;&lt;li&gt;让类与类之间产生了关系，是多态的前提&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;继承的弊端：类的耦合性很强&lt;/p&gt;&lt;p&gt;设计原则：低耦合，高内聚。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;耦合：类与类的关系。&lt;/li&gt;&lt;li&gt;内聚：自己完成事情的能力。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="继承" scheme="https://lruihao.cn/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>利用腾讯云对象存储COS桶托管hexo博客</title>
    <link href="https://lruihao.cn/hexo/cos-hexo.html"/>
    <id>https://lruihao.cn/hexo/cos-hexo.html</id>
    <published>2019-01-22T06:57:08.000Z</published>
    <updated>2019-02-18T03:57:04.385Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>本以为coding pages与腾讯云合作后会更好，没想到正是这种初期bug不断，速度也是非常慢。比gitee,甚至github都要慢很多了。所以决定放弃coding了，本想挂到云服务器上，但是这个云服务器只续费了半年，可能不会再续费，前几天看到用腾讯云的cos桶xml制作动态相册的文章，知道了对象存储这个玩意，腾讯云COS提供免费50G的存储空间，还有CDN加速服务，我觉得是个不错的选择，部署后发现速度还挺好。</p></div><a id="more"></a><h3 id="创建存储桶"><a href="#创建存储桶" class="headerlink" title="创建存储桶"></a>创建存储桶</h3><p>打开腾讯云控制台–云产品–存储–对象存储，然后创建存储桶。<br><img src="/hexo/cos-hexo/1.png"></p><h3 id="开启静态网站设置"><a href="#开启静态网站设置" class="headerlink" title="开启静态网站设置"></a>开启静态网站设置</h3><p>在基础配置打开静态网站(关掉强制https)<br><img src="/hexo/cos-hexo/2.png"></p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><img src="/hexo/cos-hexo/3.png"><p>SSL设置<br><img src="/hexo/cos-hexo/4.png"></p><h3 id="域名解析，添加记录"><a href="#域名解析，添加记录" class="headerlink" title="域名解析，添加记录"></a>域名解析，添加记录</h3><p>去dns服务商添加域名解析记录CNAME指向上面的域名</p><h3 id="hexo设置"><a href="#hexo设置" class="headerlink" title="hexo设置"></a>hexo设置</h3><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-cos --save</span><br></pre></td></tr></table></figure></li><li><p>站点配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: cos</span><br><span class="line">  bucket: yourBucketName #cos桶名称</span><br><span class="line">  appId: yourAppId #cos桶名称后数字</span><br><span class="line">  secretId: yourSecretId  #云API密钥</span><br><span class="line">  secretKey: yourSecretKey #云API密钥</span><br><span class="line">  region: yourRegion #所属地域</span><br></pre></td></tr></table></figure></li><li><p>发布还是一样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ul><p>结果类似于<br><img src="/hexo/cos-hexo/5.png"></p><h3 id="CDN刷新"><a href="#CDN刷新" class="headerlink" title="CDN刷新"></a>CDN刷新</h3><p>每次更新博客内容完后，都要登陆腾讯云CDN–缓存刷新，手动刷新一下CDN。</p><p>用脚本在每次更新后刷新</p><ul><li><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install qcloud-cdn-node-sdk --save</span><br></pre></td></tr></table></figure></li><li><p>创建<code>qcloudcdn.js</code>放入<code>script</code>文件夹</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">const qcloudSDK = require(&apos;qcloud-cdn-node-sdk&apos;);</span><br><span class="line"></span><br><span class="line">qcloudSDK.config(&#123;</span><br><span class="line">    secretId: &apos;你的ID&apos;,</span><br><span class="line">    secretKey: &apos;你的密钥&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">qcloudSDK.request(&apos;RefreshCdnDir&apos;, &#123;</span><br><span class="line">&apos;dirs.1&apos;: &apos;http://博客地址&apos; </span><br><span class="line">&#125;, (res) =&gt; &#123;</span><br><span class="line">    console.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;本以为coding pages与腾讯云合作后会更好，没想到正是这种初期bug不断，速度也是非常慢。比gitee,甚至github都要慢很多了。所以决定放弃coding了，本想挂到云服务器上，但是这个云服务器只续费了半年，可能不会再续费，前几天看到用腾讯云的cos桶xml制作动态相册的文章，知道了对象存储这个玩意，腾讯云COS提供免费50G的存储空间，还有CDN加速服务，我觉得是个不错的选择，部署后发现速度还挺好。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://lruihao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://lruihao.cn/tags/hexo/"/>
    
      <category term="腾讯云cos桶" scheme="https://lruihao.cn/tags/%E8%85%BE%E8%AE%AF%E4%BA%91cos%E6%A1%B6/"/>
    
      <category term="对象存储" scheme="https://lruihao.cn/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>Arrays类及基本使用</title>
    <link href="https://lruihao.cn/java/Arrays.html"/>
    <id>https://lruihao.cn/java/Arrays.html</id>
    <published>2019-01-18T05:13:10.000Z</published>
    <updated>2019-01-24T07:58:50.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h3><ul><li>static type[] copyof(type[] original,int length)</li><li>static int binarysearch(type[] a,type key)</li><li>static boolean equals(type[] a,type[] b)</li><li>static void fill(type[] a,type val)</li><li>static void fill(type[] a,int fromindex,int toindex,type val)</li><li>static void sort(type[] a)</li></ul><a id="more"></a><h3 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.Collator;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraysDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String agrs[])</span> </span>&#123;</span><br><span class="line">Integer arr[]=<span class="keyword">new</span> Integer[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">arr[i]=(<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line"><span class="comment">//显示，排序数组</span></span><br><span class="line">System.out.print(<span class="string">"原内容："</span>);</span><br><span class="line">display(arr);</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line">System.out.print(<span class="string">"排序后："</span>);</span><br><span class="line">display(arr);</span><br><span class="line"><span class="comment">//将值-1分配给数组arr中下标从0到3-1的位置</span></span><br><span class="line">Arrays.fill(arr, <span class="number">0</span>,<span class="number">3</span>,-<span class="number">1</span>);</span><br><span class="line">System.out.print(<span class="string">"fill()后："</span>);</span><br><span class="line">display(arr);</span><br><span class="line"><span class="comment">//搜索23</span></span><br><span class="line">System.out.print(<span class="string">"值23的位置："</span>);</span><br><span class="line"><span class="keyword">int</span> index =Arrays.binarySearch(arr, <span class="number">23</span>);<span class="comment">//二分查找</span></span><br><span class="line">System.out.print(index);<span class="comment">//如果查找不到，index为负</span></span><br><span class="line">System.out.print(<span class="string">"\n插入0在3号位置："</span>);</span><br><span class="line">Arrays.fill(arr,<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>);</span><br><span class="line">display(arr);</span><br><span class="line">System.out.print(<span class="string">"值0的位置："</span>);</span><br><span class="line">index =Arrays.binarySearch(arr, <span class="number">0</span>);</span><br><span class="line">System.out.print(index);</span><br><span class="line">Integer arr2[]=<span class="keyword">new</span> Integer[<span class="number">8</span>];</span><br><span class="line">arr2=Arrays.copyOf(arr, arr2.length);</span><br><span class="line"><span class="comment">//复制8个</span></span><br><span class="line">System.out.print(<span class="string">"\n复制后的数组："</span>);</span><br><span class="line">display(arr2);</span><br><span class="line"><span class="keyword">if</span>(Arrays.equals(arr, arr2))</span><br><span class="line">System.out.println(<span class="string">"两数组相同！"</span>);</span><br><span class="line"><span class="keyword">else</span> System.out.println(<span class="string">"两数组不相同！"</span>);</span><br><span class="line">System.out.println(<span class="string">"----------------------------------------"</span>);</span><br><span class="line">String[] str = &#123;<span class="string">"计算机"</span>,<span class="string">"黄桑"</span>,<span class="string">"通信"</span>,<span class="string">"李瑞豪"</span>&#125;;</span><br><span class="line">Arrays.sort(str);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++)</span><br><span class="line">System.out.print(str[i]+<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">""</span>);</span><br><span class="line"><span class="comment">//Collator类是用来执行分语言环境的字符串比较，这里用的CHINA</span></span><br><span class="line">Comparator com=Collator.getInstance(java.util.Locale.CHINA);<span class="comment">//获取Comparator对象，参数表示按中文排序</span></span><br><span class="line"><span class="comment">//根据指定的 "比较器" 产生的顺序对 "指定对象数组" 进行排序</span></span><br><span class="line">Arrays.sort(str,com);<span class="comment">//sort(T[] a,Comparator&lt;?super T&gt;c)</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++)</span><br><span class="line">System.out.print(str[i]+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">(Integer arr[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)</span><br><span class="line">System.out.print(arr[i]+<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="程序运行结果"><a href="#程序运行结果" class="headerlink" title="程序运行结果"></a>程序运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">原内容：41 0 44 96 49 96 30 6 87 </span><br><span class="line">排序后：0 6 30 41 44 49 87 96 96 </span><br><span class="line">fill()后：-1 -1 -1 41 44 49 87 96 96 </span><br><span class="line">值23的位置：-4</span><br><span class="line">插入0在3号位置：-1 -1 -1 0 44 49 87 96 96 </span><br><span class="line">值0的位置：3</span><br><span class="line">复制后的数组：-1 -1 -1 0 44 49 87 96 </span><br><span class="line">两数组不相同！</span><br><span class="line">----------------------------------------</span><br><span class="line">李瑞豪 计算机 通信 黄桑 </span><br><span class="line">黄桑 计算机 李瑞豪 通信</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;主要方法&quot;&gt;&lt;a href=&quot;#主要方法&quot; class=&quot;headerlink&quot; title=&quot;主要方法&quot;&gt;&lt;/a&gt;主要方法&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;static type[] copyof(type[] original,int length)&lt;/li&gt;&lt;li&gt;static int binarysearch(type[] a,type key)&lt;/li&gt;&lt;li&gt;static boolean equals(type[] a,type[] b)&lt;/li&gt;&lt;li&gt;static void fill(type[] a,type val)&lt;/li&gt;&lt;li&gt;static void fill(type[] a,int fromindex,int toindex,type val)&lt;/li&gt;&lt;li&gt;static void sort(type[] a)&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="Arrays类" scheme="https://lruihao.cn/tags/Arrays%E7%B1%BB/"/>
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="Collator" scheme="https://lruihao.cn/tags/Collator/"/>
    
      <category term="Comparator" scheme="https://lruihao.cn/tags/Comparator/"/>
    
  </entry>
  
  <entry>
    <title>在搜索.文章底部.侧栏添加最近文章模块</title>
    <link href="https://lruihao.cn/hexo/recent-posts.html"/>
    <id>https://lruihao.cn/hexo/recent-posts.html</id>
    <published>2019-01-16T09:50:52.000Z</published>
    <updated>2019-02-24T12:44:23.745Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>首先在主题配置文件添加以下关键字</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">recent_posts:</span><br><span class="line">  enable: true</span><br><span class="line">  search: true</span><br><span class="line">  post: false</span><br><span class="line">  sidebar: false</span><br><span class="line">  icon: history</span><br><span class="line">  title: 近期文章</span><br><span class="line">  layout: block</span><br></pre></td></tr></table></figure><h3 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h3><p>在 <code>next/layout/_macro/sidebar.swig</code> 中的 <code>if theme.links</code> 对应的 <code>endif</code> 后面。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.recent_posts.enable and theme.recent_posts.sidebar %&#125;</span><br><span class="line">  &lt;div class=&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.recent_posts.layout  &#125;&#125;&quot;&gt;</span><br><span class="line">   &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">     &lt;i class=&quot;fa fa-history fa-&#123;&#123; theme.recent_posts.icon | lower &#125;&#125;&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;</span><br><span class="line">     &#123;&#123; theme.recent_posts.title &#125;&#125;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">     &#123;% set posts = site.posts.sort(&apos;-date&apos;) %&#125;</span><br><span class="line">     &#123;% for post in posts.slice(&apos;0&apos;, &apos;3&apos;) %&#125;</span><br><span class="line">       &lt;li&gt;</span><br><span class="line">         &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; title=&quot;&#123;&#123; post.title &#125;&#125;&quot; target=&quot;_blank&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">       &lt;/li&gt;</span><br><span class="line">     &#123;% endfor %&#125;</span><br><span class="line">   &lt;/ul&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="搜索结果处添加"><a href="#搜索结果处添加" class="headerlink" title="搜索结果处添加"></a>搜索结果处添加</h3><p>找到路径<code>H:\hexo\themes\hexo-theme-next\layout\_partials\search</code>下<code>localsearch.swig</code>文件<br>把<code>&lt;div id=&quot;local-search-result&quot;&gt;&lt;/div&gt;</code>修改成以下内容（这里显示15篇）<br></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="local-search-result"&gt;</span><br><span class="line">    &#123;% if theme.recent_posts.enable and theme.recent_posts.search %&#125;</span><br><span class="line"><span class="deletion">-     &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts.layout  &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+     &lt;div style="text-align: center;padding: 3px 0 0;"&gt;</span></span><br><span class="line"><span class="deletion">-      &lt;div class="links-of-blogroll-title"&gt;</span></span><br><span class="line"><span class="addition">+      &lt;div style="margin-top: 20px;font-size: 18px;font-weight: 600;border-bottom: 1px solid #ccc;"&gt;</span></span><br><span class="line">         &lt;i class="fa fa-&#123;&#123; theme.recent_posts.icon &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt;</span><br><span class="line">         &#123;&#123; theme.recent_posts.title &#125;&#125;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line"><span class="deletion">-      &lt;ul class="links-of-blogroll-list"&gt;</span></span><br><span class="line"><span class="addition">+      &lt;ul style="margin: 0;padding: 0;list-style: none;"&gt;</span></span><br><span class="line">         &#123;% set posts = site.posts.sort('-date') %&#125;</span><br><span class="line">         &#123;% for post in posts.slice('0', '15') %&#125;</span><br><span class="line">           &lt;li&gt;</span><br><span class="line">             &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">           &lt;/li&gt;</span><br><span class="line">         &#123;% endfor %&#125;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><p></p><h3 id="文章尾部添加"><a href="#文章尾部添加" class="headerlink" title="文章尾部添加"></a>文章尾部添加</h3><p>把代码加在<code>H:\hexo\themes\hexo-theme-next\layout\_macro\post.swig</code>里的相应位置（我加在tags后）<br></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    &#123;% if not is_index and theme.recent_posts.enable and theme.recent_posts.post %&#125;</span><br><span class="line"><span class="deletion">-     &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts.layout  &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+     &lt;div style="text-align: center;padding: 10px 0 0;"&gt;</span></span><br><span class="line"><span class="deletion">-      &lt;div class="links-of-blogroll-title"&gt;</span></span><br><span class="line"><span class="addition">+      &lt;div style="margin: 60px 0px 10px;font-size: 18px;border-bottom: 1px solid #eee;"&gt;</span></span><br><span class="line">         &lt;i class="fa fa-&#123;&#123; theme.recent_posts.icon &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt;</span><br><span class="line">         &#123;&#123; theme.recent_posts.title &#125;&#125;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line"><span class="deletion">-      &lt;ul class="links-of-blogroll-list"&gt;</span></span><br><span class="line"><span class="addition">+      &lt;ul style="margin: 0;padding: 0;list-style: none;font-size: 11px;"&gt;</span></span><br><span class="line">         &#123;% set posts = site.posts.sort('-date') %&#125;</span><br><span class="line">         &#123;% for post in posts.slice('0', '5') %&#125;</span><br><span class="line">             &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;&amp;emsp;</span><br><span class="line">         &#123;% endfor %&#125;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;首先在主题配置文件添加以下关键字&lt;/p&gt;&lt;/blockquote&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="hexo" scheme="https://lruihao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://lruihao.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>java猜数字小游戏（Math类）</title>
    <link href="https://lruihao.cn/java/mathclass.html"/>
    <id>https://lruihao.cn/java/mathclass.html</id>
    <published>2019-01-15T09:33:28.000Z</published>
    <updated>2019-01-18T05:14:34.461Z</updated>
    
    <content type="html"><![CDATA[<div class="note success no-icon"><p>大一刚学c的时候以前写过<a href="https://github.com/Lruihao/Grocery/tree/master/C%26C%2B%2B" rel="external nofollow noopener noreferrer" target="_blank">c语言版</a>的。</p><ol><li>Math:针对数学进行运算的类</li><li>特点：没有构造方法，因为它的成员都是静态的</li><li>产生随机数：<br>public static double random(): 产生随机数，范围[0.0,1.0)</li><li>产生1-100之间的随机数<br>int number = (int)(Math.random()*100)+1;</li><li>猜数字小游戏案例</li></ol></div><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MathDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//获取随机数</span></span><br><span class="line"><span class="comment">//double d = Math.random();</span></span><br><span class="line"><span class="comment">//System.out.println(d);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">for(int x=0; x&lt;10; x++) &#123;</span></span><br><span class="line"><span class="comment">//System.out.println(Math.random());</span></span><br><span class="line"><span class="comment">System.out.println(Math.random()*100);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//我们如何获取1-100之间的随机数呢?</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;<span class="number">100</span>; x++) &#123;</span><br><span class="line"><span class="keyword">int</span> number = (<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>)+<span class="number">1</span>;</span><br><span class="line">System.out.println(number);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小游戏"><a href="#小游戏" class="headerlink" title="小游戏"></a>小游戏</h3><blockquote><p>该游戏可以由程序随机产生或由用户输入四个0到9之间的数字，且不重复。玩游戏者通过游戏提示输入八次来匹配上面所输入的数字。A表示位置正确且数字正确，B表示数字正确而位置不正确。<br>算法： 可以直接算出A类的数目，但是B类的数目直接算出或许会很麻烦，正好我们可以先算出C类数目恰好减去A类就是B类了。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> caishuzi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] a= &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Num</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setx</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*for(int i=0;i&lt;4;i++) &#123;</span></span><br><span class="line"><span class="comment">a[i]=(int)(Math.random()*10);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//为了四个互不相同的随机数</span></span><br><span class="line">a[<span class="number">0</span>]=(<span class="keyword">int</span>)Math.random()*<span class="number">10</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t=(<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(t==a[j]) &#123;</span><br><span class="line">t=(<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a[i]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] getx() &#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">System.out.print(a[i]+<span class="string">" "</span>);</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">caishuzi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String agrs[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,b[] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">System.out.println(<span class="string">"* * * *\n请输入4个数字！A表示位置数字都正确，B表示数字正确位置错误。"</span>);</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">Num n=<span class="keyword">new</span> Num();</span><br><span class="line">n.setx();</span><br><span class="line">a=n.getx();</span><br><span class="line"><span class="comment">/*for(int i=0;i&lt;4;i++)</span></span><br><span class="line"><span class="comment">System.out.print(a[i]+" ");</span></span><br><span class="line"><span class="comment">n.show();*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">10</span>;k++) &#123;<span class="comment">//猜测次数</span></span><br><span class="line"><span class="keyword">int</span> A=<span class="number">0</span>,B=<span class="number">0</span>,C=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">b[i]=sc.nextInt();</span><br><span class="line">&#125;</span><br><span class="line">sc.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (b[i]==a[i])A++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">C=b[i]==a[j]?++C:C;<span class="comment">//C表示猜测数内和随机数中A类和B类数的数目</span></span><br><span class="line"><span class="keyword">if</span> (b[i]==a[j])<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">B=C-A;<span class="comment">// 关键算法（感叹数学魅力）</span></span><br><span class="line"><span class="keyword">if</span>(A==<span class="number">4</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"恭喜猜对啦！"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(A+<span class="string">"A"</span>+B+<span class="string">"B"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一次游戏过程"><a href="#一次游戏过程" class="headerlink" title="一次游戏过程"></a>一次游戏过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">* * * *</span><br><span class="line">请输入4个数字！A表示位置数字都正确，B表示数字正确位置错误。</span><br><span class="line">0 1 2 3</span><br><span class="line">0A1B</span><br><span class="line">0 1 2 4</span><br><span class="line">0A1B</span><br><span class="line">0 1 2 5</span><br><span class="line">1A1B</span><br><span class="line">6 1 2 5</span><br><span class="line">1A2B</span><br><span class="line">1 6 2 5</span><br><span class="line">3A0B</span><br><span class="line">1 6 7 5</span><br><span class="line">恭喜猜对啦！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;大一刚学c的时候以前写过&lt;a href=&quot;https://github.com/Lruihao/Grocery/tree/master/C%26C%2B%2B&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;c语言版&lt;/a&gt;的。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Math:针对数学进行运算的类&lt;/li&gt;&lt;li&gt;特点：没有构造方法，因为它的成员都是静态的&lt;/li&gt;&lt;li&gt;产生随机数：&lt;br&gt;public static double random(): 产生随机数，范围[0.0,1.0)&lt;/li&gt;&lt;li&gt;产生1-100之间的随机数&lt;br&gt;int number = (int)(Math.random()*100)+1;&lt;/li&gt;&lt;li&gt;猜数字小游戏案例&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="Math类" scheme="https://lruihao.cn/tags/Math%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>面向对象基础知识总结</title>
    <link href="https://lruihao.cn/java/duixiang.html"/>
    <id>https://lruihao.cn/java/duixiang.html</id>
    <published>2019-01-15T08:07:31.000Z</published>
    <updated>2019-01-18T06:21:39.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="面向对象思想-理解"><a href="#面向对象思想-理解" class="headerlink" title="面向对象思想(理解)"></a>面向对象思想(理解)</h3><ol><li>面向对象是基于面向过程的一种编程思想</li><li>思想特点：<br>A:是一种更符合我们思考习惯的思想<br>B:把复杂的问题简单化<br>C:让我们从执行者变成了指挥者</li><li>举例：<br>A:洗衣服<br>B:吃饭<br>C:买电脑</li><li>举例并代码体现<br>把大象装进冰箱</li></ol><h3 id="类与对象-掌握"><a href="#类与对象-掌握" class="headerlink" title="类与对象(掌握)"></a>类与对象(掌握)</h3><ol><li>我们学习编程是为了把现实世界的事物用编程语言描述来实现信息化。</li><li>现实世界事物是如何表达的呢?<br>属性：外在特征<br>行为：内在行为</li><li>我们学习的是java语言，它最基本的单位是类。<br>所以我们要学会用类来体现一个事物。</li><li>类：是一组相关的属性和行为的集合</li><li>对象：是该类事物的具体个体。</li><li>举例：<br>学生 类<br>张三 对象</li></ol><h3 id="类的组成-掌握"><a href="#类的组成-掌握" class="headerlink" title="类的组成(掌握)"></a>类的组成(掌握)</h3><ol><li>成员变量<br>其实就是变量，只不过定义在类中，方法外，并且可以不用初始化。</li><li>成员方法<br>其实就是方法，只不过不需要static了</li><li>案例：<br>学生类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="类的使用-掌握"><a href="#类的使用-掌握" class="headerlink" title="类的使用(掌握)"></a>类的使用(掌握)</h3><ol><li>创建对象<br>格式：类名 对象名 = new 类名();</li><li>使用成员<br>成员变量：对象名.变量名;<br>成员方法：对象名.方法名(…);</li></ol><h3 id="成员变量和局部变量的区别-理解"><a href="#成员变量和局部变量的区别-理解" class="headerlink" title="成员变量和局部变量的区别(理解)"></a>成员变量和局部变量的区别(理解)</h3><ol><li>在类中的位置不同<br>A:成员变量 类中，方法外<br>B:局部变量 方法的形式参数，或者方法体中</li><li>在内存中的位置不同<br>A:成员变量 在堆中<br>B:局部变量 在栈中</li><li>生命周期不同<br>A:成员变量 随着对象的存在而存在，随着对象的消失而消失<br>B:局部变量 随着方法的调用而存在，随着方法的调用完毕而消失</li><li>初始化值不同<br>A:成员变量 有默认初始化值<br>B:局部变量 没有默认值，必须先声明，赋值，最后才能使用</li></ol><h3 id="形式参数问题-理解"><a href="#形式参数问题-理解" class="headerlink" title="形式参数问题(理解)"></a>形式参数问题(理解)</h3><ol><li>基本类型<br>基本类型作为形式参数，需要的是该基本类型的值。</li><li>引用类型<br>引用类型作为形式参数，需要的是该引用类型的地址值。(对象)</li></ol><h3 id="匿名对象-理解"><a href="#匿名对象-理解" class="headerlink" title="匿名对象(理解)"></a>匿名对象(理解)</h3><ol><li>匿名对象：没有名字的对象。是对象的简化书写方式。</li><li>使用场景<br>A:调用方法，仅仅只调用一次<br>B:作为实际参数传递</li></ol><h3 id="封装-掌握"><a href="#封装-掌握" class="headerlink" title="封装(掌握)"></a>封装(掌握)</h3><ol><li>隐藏实现细节，提供公共的访问方式</li><li>好处：<br>A:隐藏实现细节，提供公共的访问方式<br>B:提高了代码的复用性<br>C:提高了代码的安全性</li><li>使用原则<br>A:把成员变量隐藏<br>B:给出该成员变量对应的公共访问方式</li></ol><h3 id="private关键字-掌握"><a href="#private关键字-掌握" class="headerlink" title="private关键字(掌握)"></a>private关键字(掌握)</h3><ol><li>是一个权限修饰符</li><li>可以修饰类的成员(成员变量和成员方法)</li><li>仅仅在本类中可以访问,对外提供对应的GetXXX()，SetXXX()等方法</li><li>标准代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String n)</span> </span>&#123;</span><br><span class="line">name = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">age = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="this关键字-掌握"><a href="#this关键字-掌握" class="headerlink" title="this关键字(掌握)"></a>this关键字(掌握)</h3><ol><li>this：代表本类的对象</li><li>应用场景：<br>解决了局部变量隐藏成员变量的问题。<br>其他用法和super一起讲。</li><li>标准代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;<span class="comment">//局部变量</span></span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"姓名是："</span>+name+<span class="string">",年龄是："</span>+age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"学生爱学习"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"学生要吃饭"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"学生想睡觉"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Student s = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">s.setName(<span class="string">"林青霞"</span>);</span><br><span class="line">s.setAge(<span class="number">28</span>);</span><br><span class="line"></span><br><span class="line">s.show();</span><br><span class="line">s.study();</span><br><span class="line">s.eat();</span><br><span class="line">s.sleep();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"姓名是："</span>+s.getName());</span><br><span class="line">System.out.println(<span class="string">"年龄是："</span>+s.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="构造方法-掌握"><a href="#构造方法-掌握" class="headerlink" title="构造方法(掌握)"></a>构造方法(掌握)</h3><ol><li>作用：对对象的数据进行初始化。</li><li>特点：<br>A:方法名和类名相同<br>B:没有返回值类型<br>C:没有返回值</li><li>注意事项<br>A:如果我们没写构造方法，系统将默认给出无参构造方法<br>B:如果我们写了构造方法，系统将不再给出默认无参构造方法<br>建议：我们自己手动给出无参构造方法</li><li>给成员变量赋值：<br>A:无参+setXxx()<br>B:带参</li><li>一个标准的代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> age)</span> </span>&#123;<span class="comment">//构造方法</span></span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"姓名是："</span>+name+<span class="string">",年龄是："</span>+age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//无参+setXxx()</span></span><br><span class="line">Student s = <span class="keyword">new</span> Student();</span><br><span class="line">s.setName(<span class="string">"林青霞"</span>);</span><br><span class="line">s.setAge(<span class="number">28</span>);</span><br><span class="line">s.show();</span><br><span class="line"></span><br><span class="line"><span class="comment">//带参</span></span><br><span class="line">Student ss = <span class="keyword">new</span> Student(<span class="string">"张曼玉"</span>,<span class="number">20</span>);</span><br><span class="line">ss.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="对象的初始化过程-理解"><a href="#对象的初始化过程-理解" class="headerlink" title="对象的初始化过程(理解)"></a>对象的初始化过程(理解)</h3><ul><li>Student s = new Student();做了哪些事情<br>A:加载Student.class文件进内存<br>B:在栈中为s开辟空间<br>C:在堆中为学生对象开辟空间<br>D:为学生对象的成员变量赋默认值<br>E:为学生对象的成员变量赋显示值<br>F:通过构造方法给成员变量赋值<br>G:对象构造完毕，把地址赋值给s变量</li></ul><h3 id="static关键字-掌握"><a href="#static关键字-掌握" class="headerlink" title="static关键字(掌握)"></a>static关键字(掌握)</h3><ol><li>是一个状态修饰符。静态的意思</li><li>它可以修饰成员变量和成员方法</li><li>特点：<br><strong>A:随着类的加载而加载<br>B:优先于对象存在<br>C:被所有对象共享</strong><br>这也是判断我们是不是该使用静态的条件<br>举例：饮水机(可共享static)和水杯例子。<br>D:可以通过类名调用<br>静态修饰的内容，可以通过类名调用，也可以通过对象名调用</li><li>方法访问特点<br>A:普通成员方法<br>可以访问静态成员变量，非静态成员变量，静态成员方法，非静态成员方法<br>B:静态成员方法<br><strong>只能访问静态成员变量，静态成员方法<br>简记：静态只能访问静态</strong><br>注意：<br><strong>静态中是不能有this的。<br>先进内存的不能访问后进内存的。反之可以。</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">班级编号应该是被班级每个人都共享的，所以定义一个就应该可以了。</span></span><br><span class="line"><span class="comment">而姓名和年龄，每个人应该是不一样的，所以，每个对象，都应该定义自己的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在java中，用什么来表示成员变量是被共享的呢? static</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="comment">//姓名</span></span><br><span class="line">String name;</span><br><span class="line"><span class="comment">//年龄</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="comment">//班级编号</span></span><br><span class="line"><span class="comment">//String classNumber;</span></span><br><span class="line"><span class="keyword">static</span> String classNumber;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> age,String classNumber)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="keyword">this</span>.classNumber = classNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(name+<span class="string">"---"</span>+age+<span class="string">"---"</span>+classNumber);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建学生对象</span></span><br><span class="line">Student s1 = <span class="keyword">new</span> Student(<span class="string">"林青霞"</span>,<span class="number">28</span>,<span class="string">"20150306"</span>);</span><br><span class="line">s1.show();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Student s2 = new Student("马云",35,"20150306");</span></span><br><span class="line"><span class="comment">s2.show();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Student s3 = new Student("马化腾",33,"20150306");</span></span><br><span class="line"><span class="comment">s3.show();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Student s2 = <span class="keyword">new</span> Student(<span class="string">"马云"</span>,<span class="number">35</span>);</span><br><span class="line">s2.show();</span><br><span class="line"></span><br><span class="line">Student s3 = <span class="keyword">new</span> Student(<span class="string">"马化腾"</span>,<span class="number">33</span>);</span><br><span class="line">s3.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">static:静态关键字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">作用：</span></span><br><span class="line"><span class="comment">可以修饰成员变量和成员方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特点：</span></span><br><span class="line"><span class="comment">A:随着类的加载而加载</span></span><br><span class="line"><span class="comment">B:优先于对象存在</span></span><br><span class="line"><span class="comment">C:被类的所有对象共享</span></span><br><span class="line"><span class="comment">这也是我们判断是否使用静态关键字的条件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">饮水机：可以被静态修饰</span></span><br><span class="line"><span class="comment">水杯：不可以被静态修饰</span></span><br><span class="line"><span class="comment">D:可以通过类名调用</span></span><br><span class="line"><span class="comment">我们的调用既可以是对象，还可以是类名</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"show"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"show2"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentDemo2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Student s = <span class="keyword">new</span> Student();</span><br><span class="line">s.show();</span><br><span class="line">s.show2();</span><br><span class="line"></span><br><span class="line">Student.show2();</span><br><span class="line"><span class="comment">//Student.show();&amp;ensp;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">static的注意事项：</span></span><br><span class="line"><span class="comment">A:在静态方法中是没有this关键字的</span></span><br><span class="line"><span class="comment">因为静态是随着类的加载而加载，优先于对象而存在。而this是随着对象的创建而存在。</span></span><br><span class="line"><span class="comment">先进内存的， 不能访问后进内存的；而后进内存的，可以访问先进内存的。</span></span><br><span class="line"><span class="comment">B:静态只能访问静态。</span></span><br><span class="line"><span class="comment">非静态的成员方法：</span></span><br><span class="line"><span class="comment">可以访问静态成员变量，非静态成员变量，静态成员方法，非静态成员方法</span></span><br><span class="line"><span class="comment">静态的成员方法：</span></span><br><span class="line"><span class="comment">只能访问静态的成员变量，静态的成员方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class Student &#123;</span></span><br><span class="line"><span class="comment">private String name;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">public static void setName(String name) &#123;//&amp;ensp;静态方法不能用this</span></span><br><span class="line"><span class="comment">this.name = name;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">public void show() &#123;</span></span><br><span class="line"><span class="comment">System.out.println(name);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> y = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(x);</span><br><span class="line">System.out.println(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//System.out.println(x);&amp;ensp;</span></span><br><span class="line">System.out.println(y);<span class="comment">//√</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">show();</span><br><span class="line">show2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show4</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//show();只能访问静态的成员方法</span></span><br><span class="line">show2();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentDemo3</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//Student.setName("林青霞");</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态成员变量和普通成员变量的区别-理解"><a href="#静态成员变量和普通成员变量的区别-理解" class="headerlink" title="静态成员变量和普通成员变量的区别(理解)"></a>静态成员变量和普通成员变量的区别(理解)</h3><ol><li>所属不同<br>静态属于类的，称为类变量<br>非静态属于对象的，称为对象变量，实例变量</li><li>内存空间不同<br>静态在方法区的静态区<br>非静态在堆内存</li><li>生命周期不同<br>静态随着类的加载而加载，随着类的消失而消失<br>非静态随着对象的创建而存在，随着对象的消失而消失</li><li>调用不同<br>静态可以通过类名调用，也可以通过对象名调用。建议通过类名调用<br>非静态只能通过对象名调用</li></ol><h3 id="main方法是静态的-理解"><a href="#main方法是静态的-理解" class="headerlink" title="main方法是静态的(理解)"></a>main方法是静态的(理解)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br></pre></td></tr></table></figure><p>public:访问权限修饰符，表示最大的访问权限，被jvm调用，所有权限要够大。<br>static:被jvm调用，不用创建对象，直接类名访问<br>void:被jvm调用，不需要给jvm返回值<br>main:一个通用的名称，虽然不是关键字，但是被jvm识别<br>String[] args:<br>早期出现是为了接收键盘录入数据的。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*求和*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员变量已经有x,y了。这里就没有必要在定义了</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public int sum(int x,int y) &#123;</span></span><br><span class="line"><span class="comment">return x + y;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Demo d = <span class="keyword">new</span> Demo();</span><br><span class="line">d.setX(<span class="number">10</span>);</span><br><span class="line">d.setY(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">int</span> result = d.sum();</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*求和*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Demo d = <span class="keyword">new</span> Demo();</span><br><span class="line"><span class="keyword">int</span> result = d.sum(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">定义一个员工类,自己分析出几个成员，</span></span><br><span class="line"><span class="comment">然后给出成员变量，构造方法，getXxx()/setXxx()方法，</span></span><br><span class="line"><span class="comment">以及一个显示所有成员信息的方法。并测试。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Employee：</span></span><br><span class="line"><span class="comment">成员变量：员工编号,姓名,职位</span></span><br><span class="line"><span class="comment">构造方法：无参，带参</span></span><br><span class="line"><span class="comment">成员方法：getXxx()/setXxx()方法，show()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String eid;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String job;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String eid,String name,String job)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.eid = eid;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.job = job;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEid</span><span class="params">(String eid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.eid = eid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEid</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> eid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJob</span><span class="params">(String job)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.job = job;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getJob</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> job;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"员工编号是："</span>+eid+<span class="string">",姓名是："</span>+name+<span class="string">",职位是："</span>+job);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmployeeDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//无参</span></span><br><span class="line">Employee e = <span class="keyword">new</span> Employee();</span><br><span class="line">e.setEid(<span class="string">"itcast007"</span>);</span><br><span class="line">e.setName(<span class="string">"周星驰"</span>);</span><br><span class="line">e.setJob(<span class="string">"高级工程师"</span>);</span><br><span class="line">e.show();</span><br><span class="line"></span><br><span class="line"><span class="comment">//带参</span></span><br><span class="line">Employee e2 = <span class="keyword">new</span> Employee(<span class="string">"itcast003"</span>,<span class="string">"刘德华"</span>,<span class="string">"挖掘机工程师"</span>);</span><br><span class="line">e2.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java类中的成员变量和方法访问权限"><a href="#java类中的成员变量和方法访问权限" class="headerlink" title="java类中的成员变量和方法访问权限"></a>java类中的成员变量和方法访问权限</h3><table><thead><tr><th style="text-align:center">关键词</th><th style="text-align:center">同一个类</th><th style="text-align:center">同一个包</th><th style="text-align:center">不同包中的子类</th><th style="text-align:center">不同包中的非子类</th></tr></thead><tbody><tr><td style="text-align:center">private</td><td style="text-align:center">√</td><td style="text-align:center">&ensp;</td><td style="text-align:center">&ensp;</td><td style="text-align:center">&ensp;</td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">&ensp;</td><td style="text-align:center">&ensp;</td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">&ensp;</td></tr><tr><td style="text-align:center">public</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;面向对象思想-理解&quot;&gt;&lt;a href=&quot;#面向对象思想-理解&quot; class=&quot;headerlink&quot; title=&quot;面向对象思想(理解)&quot;&gt;&lt;/a&gt;面向对象思想(理解)&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;面向对象是基于面向过程的一种编程思想&lt;/li&gt;&lt;li&gt;思想特点：&lt;br
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="面向对象" scheme="https://lruihao.cn/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>java水仙花数（循环）</title>
    <link href="https://lruihao.cn/java/xunhuan.html"/>
    <id>https://lruihao.cn/java/xunhuan.html</id>
    <published>2019-01-14T09:30:24.000Z</published>
    <updated>2019-01-18T05:15:38.852Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。</p></blockquote><a id="more"></a><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>水仙花数只是自幂数的一种，严格来说3位数的3次幂数才称为水仙花数。<br>附：其他位数的自幂数名字<br>一位自幂数：独身数<br>两位自幂数：没有<br>三位自幂数：水仙花数<br>四位自幂数：四叶玫瑰数<br>五位自幂数：五角星数<br>六位自幂数：六合数<br>七位自幂数：北斗七星数<br>八位自幂数：八仙数<br>九位自幂数：九九重阳数<br>十位自幂数：十全十美数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xunhuan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shuixianhua</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] agrs)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"指定最大位数N:"</span>);</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> N = input.nextInt();</span><br><span class="line">        input.close();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> a[] = <span class="keyword">new</span> <span class="keyword">int</span>[i];</span><br><span class="line">            <span class="keyword">int</span> num = (<span class="keyword">int</span>) Math.pow(<span class="number">10</span>, i - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">            System.out.print(i + <span class="string">"位的水仙花数有：\t"</span>);</span><br><span class="line">            <span class="keyword">while</span> (num &lt;= Math.pow(<span class="number">10</span>, i)) &#123;</span><br><span class="line">                <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">                    a[j] = (<span class="keyword">int</span>) (num / Math.pow(<span class="number">10</span>, j) % <span class="number">10</span>);<span class="comment">//取各个位的数</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) </span><br><span class="line">                    sum = sum + (<span class="keyword">int</span>) Math.pow(a[j], i);</span><br><span class="line">                <span class="keyword">if</span> (num == sum)</span><br><span class="line">                    System.out.print(num + <span class="string">"\t"</span>);</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于int精度限制，最多算到9位，而且使用常规算法，算到8，9位的时候就特别慢了。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">指定最大位数N:10</span><br><span class="line">3位的水仙花数有：153370371407</span><br><span class="line">4位的水仙花数有：163482089474</span><br><span class="line">5位的水仙花数有：547489272793084</span><br><span class="line">6位的水仙花数有：548834</span><br><span class="line">7位的水仙花数有：1741725421081898008179926315</span><br><span class="line">8位的水仙花数有：246780502467805188593477</span><br><span class="line">9位的水仙花数有：146511208</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="水仙花数" scheme="https://lruihao.cn/tags/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/"/>
    
      <category term="循环语句" scheme="https://lruihao.cn/tags/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>java录入数据</title>
    <link href="https://lruihao.cn/java/input.html"/>
    <id>https://lruihao.cn/java/input.html</id>
    <published>2019-01-14T07:33:46.000Z</published>
    <updated>2019-01-18T05:15:27.777Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记忆格式："><a href="#记忆格式：" class="headerlink" title="记忆格式："></a>记忆格式：</h3><p>(1)导包：<br>import java.util.Scanner;<br>注意：位置在class的上面。<br>(2)创建键盘录入对象：<br>Scanner sc = new Scanner(System.in);<br>(3)获取数据<br>int i = sc.nextInt();<br>(4)练习：<br>A:求两个数据的和<br>B:获取两个数据中较大的值<br>C:获取三个数据中较大的值<br>D:比较两个数是否相等</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">helloworld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> i=sc.nextInt(),j=sc.nextInt(),k=sc.nextInt();</span><br><span class="line">sc.close();</span><br><span class="line">System.out.println(i+<span class="string">"+"</span>+j+<span class="string">"="</span>+(i+j));</span><br><span class="line">System.out.println(<span class="string">"MAXij="</span>+Max(i,j));</span><br><span class="line">System.out.println(<span class="string">"MAXijk="</span>+Max(i,j,k));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Max()方法重载</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&gt;j?i:j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i==j)</span><br><span class="line">System.out.println(<span class="string">"i和j相等"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==k)</span><br><span class="line">System.out.println(<span class="string">"i和k相等"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j==k)</span><br><span class="line">System.out.println(<span class="string">"j和k相等"</span>);</span><br><span class="line"><span class="keyword">return</span>  (i=i&gt;j?i:j)&gt;k?i:k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5 5 6</span><br><span class="line">5+5=10</span><br><span class="line">MAXij=5</span><br><span class="line">i和j相等</span><br><span class="line">MAXijk=6</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;记忆格式：&quot;&gt;&lt;a href=&quot;#记忆格式：&quot; class=&quot;headerlink&quot; title=&quot;记忆格式：&quot;&gt;&lt;/a&gt;记忆格式：&lt;/h3&gt;&lt;p&gt;(1)导包：&lt;br&gt;import java.util.Scanner;&lt;br&gt;注意：位置在class的上面。&lt;br&gt;
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="java输入流" scheme="https://lruihao.cn/tags/java%E8%BE%93%E5%85%A5%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>java标识符</title>
    <link href="https://lruihao.cn/java/biaoshi.html"/>
    <id>https://lruihao.cn/java/biaoshi.html</id>
    <published>2019-01-14T07:07:57.000Z</published>
    <updated>2019-01-18T05:15:57.285Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标识符："><a href="#标识符：" class="headerlink" title="标识符："></a>标识符：</h3><p>给类，接口，方法或者变量起名字的符号</p><h3 id="组成规则："><a href="#组成规则：" class="headerlink" title="组成规则："></a>组成规则：</h3><p>A:英文字母大小写<br>B:数字<br>C:_和$</p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p>A:不能以数字开头<br>B:不能是Java中的关键字<br>C:区分大小写<br>Student,student 这是两个名称</p><h3 id="常见命名方式："><a href="#常见命名方式：" class="headerlink" title="常见命名方式："></a>常见命名方式：</h3><p>A:包 其实就是文件夹,用于解决相同类名问题<br>全部小写<br>单级：com<br>多级：cn.itcast<br>B:类或者接口<br>一个单词：首字母大写<br>Student,Person,Teacher<br>多个单词：每个单词的首字母大写<br>HelloWorld,MyName,NameDemo<br>C:方法或者变量<br>一个单词：全部小写<br>name,age,show()<br>多个单词：从第二个单词开始，每个单词首字母大写<br>myName,showAllStudentNames()<br>D:常量<br>一个单词：全部大写<br>AGE<br>多个单词：每个单词都大写，用_连接<br>STUDENT_MAX_AGE</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;标识符：&quot;&gt;&lt;a href=&quot;#标识符：&quot; class=&quot;headerlink&quot; title=&quot;标识符：&quot;&gt;&lt;/a&gt;标识符：&lt;/h3&gt;&lt;p&gt;给类，接口，方法或者变量起名字的符号&lt;/p&gt;&lt;h3 id=&quot;组成规则：&quot;&gt;&lt;a href=&quot;#组成规则：&quot; class=&quot;h
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="java标识符" scheme="https://lruihao.cn/tags/java%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    
  </entry>
  
</feed>
