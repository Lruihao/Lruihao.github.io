<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博採眾長</title>
  
  <subtitle>李瑞豪</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lruihao.cn/"/>
  <updated>2019-07-19T04:18:15.323Z</updated>
  <id>https://lruihao.cn/</id>
  
  <author>
    <name>李瑞豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简单评论模块--php表单练习</title>
    <link href="https://lruihao.cn/posts/phpform.html"/>
    <id>https://lruihao.cn/posts/phpform.html</id>
    <published>2019-07-19T03:38:59.000Z</published>
    <updated>2019-07-19T04:18:15.323Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>简单模仿了一个评论模板，当然肯定是没有博客的valine这么强大的hhhh，<br><span class="label warning">PHP表单安全性的重要提示!</span><br><code>$_SERVER[&quot;PHP_SELF&quot;]</code>变量能够被黑客利用！<br>如果页面中使用了<code>PHP_SELF</code>，用户能够输入下划线然后执行跨站点脚本（XSS）。<br>比如说注入js脚本等，valine以前的版本也有过这样的漏洞。</p><p><code>跨站点脚本（Cross-site scripting，XSS）</code>是一种计算机安全漏洞类型，常见于 Web 应用程序。XSS 能够使攻击者向其他用户浏览的网页中输入客户端脚本。</p></div><a id="more"></a><p>可以像valine一样在用户输入完后保留输入，还有一些正则控制输入提示等简单功能。UI就丑爆了算了。。。<br></p><figure class="highlight xml"><figcaption><span>完整表单</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.error</span> &#123;<span class="attribute">color</span>: <span class="number">#FF0000</span>;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.main</span>&#123;</span></span><br><span class="line"><span class="undefined">   width: 20%;</span></span><br><span class="line"><span class="undefined">   height: 100%;</span></span><br><span class="line"><span class="css">   <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-id">#000</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line"><span class="undefined">   padding: 20px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 定义变量并设置为空值</span></span></span><br><span class="line"><span class="php">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $nameErr = <span class="string">"Name is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $name = test_input($_POST[<span class="string">"name"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查名字是否包含字母和空格</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span></span><br><span class="line"><span class="php">      $nameErr = <span class="string">"Only letters and white space allowed"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"email"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $emailErr = <span class="string">"Email is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $email = test_input($_POST[<span class="string">"email"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查电邮地址语法是否有效</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span></span><br><span class="line"><span class="php">      $emailErr = <span class="string">"Invalid email format"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"website"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $website = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $website = test_input($_POST[<span class="string">"website"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查 URL 地址语言是否有效（此正则表达式同样允许 URL 中的下划线）</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span></span></span><br><span class="line"><span class="php">    =~_|]/i<span class="string">",$website)) &#123;</span></span></span><br><span class="line"><span class="php">      $websiteErr = <span class="string">"Invalid URL"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"comment"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $comment = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $comment = test_input($_POST[<span class="string">"comment"</span>]);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"gender"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $genderErr = <span class="string">"Gender is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $gender = test_input($_POST[<span class="string">"gender"</span>]);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span></span><br><span class="line"><span class="php">   $data = trim($data);</span></span><br><span class="line"><span class="php">   $data = stripslashes($data);</span></span><br><span class="line"><span class="php">   $data = htmlspecialchars($data);</span></span><br><span class="line"><span class="php">   <span class="keyword">return</span> $data;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>PHP 验证实例<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER['PHP_SELF']);?&gt;"</span>&gt;</span> </span><br><span class="line">      姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $name;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nameErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      性别:</span><br><span class="line">      &lt;input type="radio" name="gender" &lt;?php if (isset($gender) &amp;&amp; $gender=="女性") echo "checked";?&gt; value="女性"&gt;女性</span><br><span class="line">      &lt;input type="radio" name="gender" &lt;?php if (isset($gender) &amp;&amp; $gender=="男性") echo "checked";?&gt; value="男性"&gt;男性</span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $genderErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      电邮：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $email;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $emailErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      网址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $website;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $websiteErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      评论：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $comment;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你的输入是：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $name.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $gender.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $email.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $website.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $comment.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">      <span class="meta">?&gt;</span></span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/phpform/comment.png" title="实际效果">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;简单模仿了一个评论模板，当然肯定是没有博客的valine这么强大的hhhh，&lt;br&gt;&lt;span class=&quot;label warning&quot;&gt;PHP表单安全性的重要提示!&lt;/span&gt;&lt;br&gt;&lt;code&gt;$_SERVER[&amp;quot;PHP_SELF&amp;quot;]&lt;/code&gt;变量能够被黑客利用！&lt;br&gt;如果页面中使用了&lt;code&gt;PHP_SELF&lt;/code&gt;，用户能够输入下划线然后执行跨站点脚本（XSS）。&lt;br&gt;比如说注入js脚本等，valine以前的版本也有过这样的漏洞。&lt;/p&gt;&lt;p&gt;&lt;code&gt;跨站点脚本（Cross-site scripting，XSS）&lt;/code&gt;是一种计算机安全漏洞类型，常见于 Web 应用程序。XSS 能够使攻击者向其他用户浏览的网页中输入客户端脚本。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="php" scheme="https://lruihao.cn/categories/php/"/>
    
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="php" scheme="https://lruihao.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php函数学习</title>
    <link href="https://lruihao.cn/posts/phpfunc.html"/>
    <id>https://lruihao.cn/posts/phpfunc.html</id>
    <published>2019-07-15T03:37:33.000Z</published>
    <updated>2019-07-15T03:52:33.053Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary no-icon"><p>练习php函数的基本使用。<br>注：<br>必选参数在可选参数的前面。<br>可在函数中定义函数，需要先调用外层函数才能调用内层函数。</p></div><a id="more"></a><figure class="highlight php"><figcaption><span>php函数动态创建表格</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建表格</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createTable</span><span class="params">($rows,$cols,$bgcolor=<span class="string">'pink'</span>,$content=<span class="string">'x'</span>)</span></span>&#123;</span><br><span class="line">$table = <span class="string">"&lt;table border='1' bgcolor='&#123;$bgcolor&#125;' cellpadding='10' cellspacing='0' width='50%' &gt;"</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=$rows;$i++)&#123;</span><br><span class="line">$table.=<span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">1</span>;$j&lt;=$cols;$j++)&#123;</span><br><span class="line">$table.=<span class="string">"&lt;td&gt;&#123;$content&#125;&lt;/td&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$table .=<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$table.=<span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> $table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> createTable(<span class="number">5</span>,<span class="number">5</span>,<span class="string">'pink'</span>,<span class="string">'hello lruihao'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="./phpfunc/table.png" class="full-image" alt="php创建表格" title="php创建表格"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary no-icon&quot;&gt;&lt;p&gt;练习php函数的基本使用。&lt;br&gt;注：&lt;br&gt;必选参数在可选参数的前面。&lt;br&gt;可在函数中定义函数，需要先调用外层函数才能调用内层函数。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="php" scheme="https://lruihao.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://lruihao.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>WAMPServer自定义网站根目录等设置</title>
    <link href="https://lruihao.cn/posts/wamproot.html"/>
    <id>https://lruihao.cn/posts/wamproot.html</id>
    <published>2019-07-12T10:44:36.000Z</published>
    <updated>2019-07-13T01:51:16.143Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>使用WAMPServer时自定义网站根目录。</p></div><a id="more"></a><h1 id="WAMPServer自定义网站根目录"><a href="#WAMPServer自定义网站根目录" class="headerlink" title="WAMPServer自定义网站根目录"></a>WAMPServer自定义网站根目录</h1><h2 id="修改apache配置文件"><a href="#修改apache配置文件" class="headerlink" title="修改apache配置文件"></a>修改apache配置文件</h2><p>打开<code>httpd.conf</code>文件搜索<code>documentroot</code>后，找到路径修改为自定义的。<br><img src="/images/loading_img.gif" data-original="/posts/wamproot/httpd.png" title="修改httpd.conf文件"></p><p>再打开<code>httpd-vhost.conf</code>文件修改对应的路径。<br><code>修改完配置文件需要重启所有服务！</code></p><h2 id="修改wampmanager文件"><a href="#修改wampmanager文件" class="headerlink" title="修改wampmanager文件"></a>修改wampmanager文件</h2><p>在wampserver安装路径根目录知道<code>wampmanager.ini</code>和<code>wampmanager.tpl</code>两个文件。搜索<code>menu.left</code>,然后也修改为自定义的路径。<br><code>然后退出，重启软件！</code><br><img src="/images/loading_img.gif" data-original="/posts/wamproot/wampmanager-ini.png" title="修改wampmanager.ini文件"><br><img src="/images/loading_img.gif" data-original="/posts/wamproot/wampmanager-tpl.png" title="修改wampmanager.tpl文件"></p><h2 id="编写php文件测试"><a href="#编写php文件测试" class="headerlink" title="编写php文件测试"></a>编写php文件测试</h2><figure class="highlight php"><figcaption><span>test.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"hello world"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/wamproot/test.png" title="测试结果"><h1 id="WAMPServer多站点配置"><a href="#WAMPServer多站点配置" class="headerlink" title="WAMPServer多站点配置"></a>WAMPServer多站点配置</h1><p>打开<code>httpd-vhost.conf</code>文件，复制原有的几行配置文件，粘贴修改路径和域名等配置。比如<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Virtual Hosts</span><br><span class="line">#</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName localhost</span><br><span class="line">  ServerAlias localhost</span><br><span class="line">  DocumentRoot &quot;g:/Demo&quot;</span><br><span class="line">  &lt;Directory &quot;g:/Demo&quot;&gt;</span><br><span class="line">    Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require local</span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName test01.com</span><br><span class="line">  DocumentRoot &quot;g:/Demo/test01&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName test02.com</span><br><span class="line">  DocumentRoot &quot;g:/Demo/test02&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p></p><p>再打开<code>C:\Windows\System32\drivers\etc\hosts</code>文件,在文件最后添加类似于云服务器的域名解析，进行本地域名解析，当输入域名时优先从本地申请资源。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"># For example:</span><br><span class="line">#</span><br><span class="line"># 102.54.94.97 rhino.acme.com # source server</span><br><span class="line"># 38.25.63.10 x.acme.com # x client host</span><br><span class="line"># localhost name resolution is handled within DNS itself.</span><br><span class="line">#127.0.0.1 localhost</span><br><span class="line">#::1 localhost</span><br><span class="line">127.0.0.1 steamcommunity.com</span><br><span class="line">192.168.28.1 windows10.microdone.cn</span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">::1 localhost</span><br><span class="line">127.0.0.1 test01.com</span><br><span class="line">127.0.0.1 test02.com</span><br></pre></td></tr></table></figure><p></p><h1 id="WAMPServer自拟定端口"><a href="#WAMPServer自拟定端口" class="headerlink" title="WAMPServer自拟定端口"></a>WAMPServer自拟定端口</h1><p>WAMP服务我安装了好几次，每次因为修改配置文件搞崩了。。第一次装的时候发现80端口被占用了，因为以前玩了一下Windows的IIS，暂停IIS的网站，再使用命令或者直接在控制面板关掉就好了。</p><ol><li><p>如果不使用80多为默认端口，比如修改为8080，还是在<code>httpd.conf</code>文件里修改。搜索<code>80</code>都改成<code>8080</code>然后，Ctrl+S保存，重新启动WampServer<br>在浏览器地址栏输入<code>localhost:8000</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#监听端口</span><br><span class="line">Listen 0.0.0.0:8080</span><br><span class="line">Listen [::0]:8080</span><br><span class="line">ServerName localhost:8080</span><br></pre></td></tr></table></figure></li><li><p>使用Notepad++打开 C:\wamp 目录下的wampmanager.ini和wampmanager.tpl<br>Ctrl+F查找 <code>localhost</code><br>将其全部替换为<code>localhost:8000</code><br>然后，Ctrl+S保存，重新启动WampServer</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;使用WAMPServer时自定义网站根目录。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="php" scheme="https://lruihao.cn/categories/php/"/>
    
    
      <category term="server" scheme="https://lruihao.cn/tags/server/"/>
    
      <category term="php" scheme="https://lruihao.cn/tags/php/"/>
    
      <category term="windows" scheme="https://lruihao.cn/tags/windows/"/>
    
      <category term="WAMPServer" scheme="https://lruihao.cn/tags/WAMPServer/"/>
    
  </entry>
  
  <entry>
    <title>python实训总结Ⅱ</title>
    <link href="https://lruihao.cn/posts/pysx2.html"/>
    <id>https://lruihao.cn/posts/pysx2.html</id>
    <published>2019-06-21T10:46:41.000Z</published>
    <updated>2019-07-03T09:34:52.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>后面几天讲的有点杂，简单记录一下知识点。</p></div><a id="more"></a><h1 id="6-19"><a href="#6-19" class="headerlink" title="6.19"></a>6.19</h1><blockquote><p>这些知识点在课上都只是简单的提到了一下。<br>比如一些库的使用与安装都不会再课上详细讲解，需要课后再去研究。</p></blockquote><h2 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a><a href="https://www.jianshu.com/p/15715d6f4dad" rel="external nofollow noopener noreferrer" target="_blank">切片操作</a></h2><p>列表切片操作</p><h2 id="格式化输出format"><a href="#格式化输出format" class="headerlink" title="格式化输出format"></a>格式化输出format</h2><p><code>&quot;=={}==&quot;</code>，<code>{}</code>表示占位符，其前后字符保持原样输出。</p><figure class="highlight py"><figcaption><span>TempConvert.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TempConvert.py</span></span><br><span class="line">TempStr = input(<span class="string">"请输入带有符号的温度值: "</span>)</span><br><span class="line"><span class="keyword">if</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'F'</span>,<span class="string">'f'</span>]:</span><br><span class="line">    C = (eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) - <span class="number">32</span>)/<span class="number">1.8</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;C"</span>.format(C))</span><br><span class="line"><span class="keyword">elif</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'C'</span>,<span class="string">'c'</span>]:</span><br><span class="line">    F = <span class="number">1.8</span>*eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) + <span class="number">32</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;F"</span>.format(F))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"输入格式错误"</span>)</span><br></pre></td></tr></table></figure><h2 id="多变量赋值与交换（斐波那契数列）"><a href="#多变量赋值与交换（斐波那契数列）" class="headerlink" title="多变量赋值与交换（斐波那契数列）"></a>多变量赋值与交换（斐波那契数列）</h2><p>python 3.x版本 <code>end=&quot;&quot;</code> 可使输出不换行<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(x, end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p></p><figure class="highlight py"><figcaption><span>斐波那契数列</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#斐波那契数列</span></span><br><span class="line">a, b = <span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">500</span>: <span class="comment"># 输出不大于500 的序列</span></span><br><span class="line">    print(a,end=<span class="string">","</span>)</span><br><span class="line">    a,b = b,a + b <span class="comment">#交换变量</span></span><br></pre></td></tr></table></figure><h2 id="笑傲江湖统计字符-dict-文件流"><a href="#笑傲江湖统计字符-dict-文件流" class="headerlink" title="笑傲江湖统计字符(dict,文件流)"></a>笑傲江湖统计字符(dict,文件流)</h2><blockquote><p>统计《笑傲江湖》小说中出现的所有中文字符及标点符号的数量，每个字符及数目间用冒号<code>:</code>隔开，例如”笑:1024”，将所有字符及数量的对应采用逗号分隔，以CSV文件格式保存到<code>“笑傲江湖--字符统计.txt”</code>文件中。注意，统计字符不包括空格和回车。</p></blockquote><blockquote><p>csv文件格式： ‘,’逗号连接元素</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">fi = open(<span class="string">"data/笑傲江湖-网络版.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">fo = open(<span class="string">"data/笑傲江湖-字符统计.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">txt = fi.read() <span class="comment">#打开文件</span></span><br><span class="line"><span class="comment">#txt</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> txt:</span><br><span class="line">    d[c] = d.get(c,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">' '</span>] <span class="comment">#删除字典中的空格和回车的键值对</span></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">'\n'</span>]</span><br><span class="line"></span><br><span class="line">ls = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">    ls.append(<span class="string">"&#123;&#125;:&#123;&#125;"</span>.format(key,d[key]))</span><br><span class="line"></span><br><span class="line">fo.write(<span class="string">","</span>.join(ls)) </span><br><span class="line">fi.close()</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/tj.png" title="文件读取及字符统计结果"><h2 id="numpy模块"><a href="#numpy模块" class="headerlink" title="numpy模块"></a>numpy模块</h2><p><strong>…</strong></p><h2 id="pandas模块"><a href="#pandas模块" class="headerlink" title="pandas模块"></a>pandas模块</h2><p><strong>…</strong></p><h1 id="6-20"><a href="#6-20" class="headerlink" title="6.20"></a>6.20</h1><h2 id="matplotlib绘图"><a href="#matplotlib绘图" class="headerlink" title="matplotlib绘图"></a>matplotlib绘图</h2><figure class="highlight py"><figcaption><span>指数函数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.arange(<span class="number">-5</span>,<span class="number">5</span>,<span class="number">0.01</span>)</span><br><span class="line">y = <span class="number">2</span>**x+<span class="number">1</span></span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">"y=2^x+1"</span>,fontsize=<span class="number">24</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X"</span>,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y"</span>,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.tick_params(axis=<span class="string">"both"</span>,labelsize=<span class="number">14</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/zhishu.png" title="Y=2<sup>X</sup>+1"><h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><p>举了一个金融界，炒股，获取数据的爬虫<br>（今天没仔细听课，这数据爬过什么意思，咱不懂，咱也不敢问！）<br></p><figure class="highlight py"><figcaption><span>stock15</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python </span></span><br><span class="line"><span class="comment">#-*- encoding: utf-8 -*- </span></span><br><span class="line"><span class="comment">#author pythontab.com </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_datareader.data <span class="keyword">as</span> web</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment">#import tushare as ts</span></span><br><span class="line"></span><br><span class="line">df_stockload = web.DataReader(<span class="string">"000001.SS"</span>, <span class="string">"yahoo"</span>, datetime.datetime(<span class="number">2017</span>,<span class="number">1</span>,<span class="number">1</span>), datetime.date.today())</span><br><span class="line"><span class="comment">#print(type(datetime.datetime.now().strftime('%Y-%m-%d')))</span></span><br><span class="line"><span class="comment">#df_stockload = ts.get_hist_data('sh',start='2017-01-01',end=datetime.datetime.now().strftime('%Y-%m-%d'))</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.columns)<span class="comment">#查看列名</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.index)<span class="comment">#查看索引</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.describe())<span class="comment">#查看各列数据描述性统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#绘制移动平均线</span></span><br><span class="line">df_stockload.Close.plot(c=<span class="string">'b'</span>)</span><br><span class="line">df_stockload.Close.rolling(window=<span class="number">30</span>).mean().plot(c=<span class="string">'r'</span>) <span class="comment">#pd.rolling_mean(df_stockload.Close,window=30).plot(c='r')</span></span><br><span class="line">df_stockload.Close.rolling(window=<span class="number">60</span>).mean().plot(c=<span class="string">'g'</span>) <span class="comment">#pd.rolling_mean(df_stockload.Close,window=60).plot(c='g')</span></span><br><span class="line">plt.legend([<span class="string">'Close'</span>,<span class="string">'30ave'</span>,<span class="string">'60ave'</span>],loc=<span class="string">'best'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p></p><figure class="highlight py"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Index([<span class="string">'High'</span>, <span class="string">'Low'</span>, <span class="string">'Open'</span>, <span class="string">'Close'</span>, <span class="string">'Volume'</span>, <span class="string">'Adj Close'</span>], dtype=<span class="string">'object'</span>)</span><br><span class="line">DatetimeIndex([<span class="string">'2017-01-03'</span>, <span class="string">'2017-01-04'</span>, <span class="string">'2017-01-05'</span>, <span class="string">'2017-01-06'</span>,</span><br><span class="line">               <span class="string">'2017-01-09'</span>, <span class="string">'2017-01-10'</span>, <span class="string">'2017-01-11'</span>, <span class="string">'2017-01-12'</span>,</span><br><span class="line">               <span class="string">'2017-01-13'</span>, <span class="string">'2017-01-16'</span>,</span><br><span class="line">               ...</span><br><span class="line">               <span class="string">'2019-06-05'</span>, <span class="string">'2019-06-06'</span>, <span class="string">'2019-06-10'</span>, <span class="string">'2019-06-11'</span>,</span><br><span class="line">               <span class="string">'2019-06-12'</span>, <span class="string">'2019-06-13'</span>, <span class="string">'2019-06-14'</span>, <span class="string">'2019-06-19'</span>,</span><br><span class="line">               <span class="string">'2019-06-20'</span>, <span class="string">'2019-06-21'</span>],</span><br><span class="line">              dtype=<span class="string">'datetime64[ns]'</span>, name=<span class="string">'Date'</span>, length=<span class="number">596</span>, freq=<span class="keyword">None</span>)</span><br><span class="line">              High          Low         Open        Close        Volume  \</span><br><span class="line">count   <span class="number">596.000000</span>   <span class="number">596.000000</span>   <span class="number">596.000000</span>   <span class="number">596.000000</span>  <span class="number">5.960000e+02</span>   </span><br><span class="line">mean   <span class="number">3076.147753</span>  <span class="number">3039.201569</span>  <span class="number">3056.960338</span>  <span class="number">3060.169056</span>  <span class="number">5.098201e+06</span>   </span><br><span class="line">std     <span class="number">269.276147</span>   <span class="number">273.757358</span>   <span class="number">271.612122</span>   <span class="number">272.072346</span>  <span class="number">1.199107e+08</span>   </span><br><span class="line">min    <span class="number">2488.479004</span>  <span class="number">2440.906982</span>  <span class="number">2446.019043</span>  <span class="number">2464.363037</span>  <span class="number">8.820000e+04</span>   </span><br><span class="line"><span class="number">25</span>%    <span class="number">2845.308228</span>  <span class="number">2800.168762</span>  <span class="number">2825.239502</span>  <span class="number">2827.754822</span>  <span class="number">1.375250e+05</span>   </span><br><span class="line"><span class="number">50</span>%    <span class="number">3153.184937</span>  <span class="number">3118.613525</span>  <span class="number">3134.300537</span>  <span class="number">3139.085449</span>  <span class="number">1.666500e+05</span>   </span><br><span class="line"><span class="number">75</span>%    <span class="number">3280.115234</span>  <span class="number">3244.825256</span>  <span class="number">3265.322021</span>  <span class="number">3268.600342</span>  <span class="number">2.091250e+05</span>   </span><br><span class="line">max    <span class="number">3587.031982</span>  <span class="number">3534.195068</span>  <span class="number">3563.639893</span>  <span class="number">3559.465088</span>  <span class="number">2.927580e+09</span>   </span><br><span class="line"></span><br><span class="line">         Adj Close  </span><br><span class="line">count   <span class="number">596.000000</span>  </span><br><span class="line">mean   <span class="number">3060.169056</span>  </span><br><span class="line">std     <span class="number">272.072346</span>  </span><br><span class="line">min    <span class="number">2464.363037</span>  </span><br><span class="line"><span class="number">25</span>%    <span class="number">2827.754822</span>  </span><br><span class="line"><span class="number">50</span>%    <span class="number">3139.085449</span>  </span><br><span class="line"><span class="number">75</span>%    <span class="number">3268.600342</span>  </span><br><span class="line">max    <span class="number">3559.465088</span></span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/stock15.png" title="生成的图"><h1 id="6-21"><a href="#6-21" class="headerlink" title="6.21"></a>6.21</h1><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>比第一天稍微仔细一点讲了一下类,有点需要注意：</p><ul><li><code>self</code>相当于<code>this</code>表示当前对象</li><li>python类的所有函数的第一个参数都要写<code>self</code>参数，self也可以是其他的比如<code>lrh</code>等字符替代，但是必须保持一致。</li><li><code>__</code>表示私有的</li><li>class的定义可以不加(),()内可写继承的父类</li></ul><h2 id="GUI设计-wxPython"><a href="#GUI设计-wxPython" class="headerlink" title="GUI设计 wxPython"></a>GUI设计 <a href="https://blog.csdn.net/mist99/article/details/80742548" rel="external nofollow noopener noreferrer" target="_blank">wxPython</a></h2><figure class="highlight plain"><figcaption><span>安装</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wxPython</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>导入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>基本架构</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx <span class="comment">#导入wxPython库</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Panel</span><span class="params">(wx.Panel)</span>:</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent)</span>:</span>  </span><br><span class="line"></span><br><span class="line">        wx.Panel.__init__(self,parent=parent, id=<span class="number">-1</span>)  </span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span>     </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Frame</span><span class="params">(wx.Frame)</span>:</span>   </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line"></span><br><span class="line">        wx.Frame.__init__(self, parent = <span class="keyword">None</span>, title = <span class="string">u'量化软件'</span>, size=(<span class="number">1000</span>,<span class="number">600</span>), style=wx.DEFAULT_FRAME_STYLE^wx.MAXIMIZE_BOX)   </span><br><span class="line"></span><br><span class="line">        self.DispPanel= Panel(self)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span>            </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(wx.App)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.frame = Frame()  </span><br><span class="line"></span><br><span class="line">        self.frame.Show()</span><br><span class="line"></span><br><span class="line">        self.SetTopWindow(self.frame)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:   </span><br><span class="line"></span><br><span class="line">    app = App()</span><br><span class="line"></span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>helloworld</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"></span><br><span class="line">app = wx.App()</span><br><span class="line">window = wx.Frame(<span class="keyword">None</span>, title=<span class="string">"wxPython 你好！"</span>, size=(<span class="number">400</span>, <span class="number">300</span>))</span><br><span class="line">panel = wx.Panel(window)</span><br><span class="line">label = wx.StaticText(panel, label=<span class="string">"Hello World"</span>, pos=(<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">window.Show(<span class="keyword">True</span>)</span><br><span class="line">app.MainLoop()</span><br></pre></td></tr></table></figure><h2 id="talib库的安装"><a href="#talib库的安装" class="headerlink" title="talib库的安装"></a>talib库的安装</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib" rel="external nofollow noopener noreferrer" target="_blank">下载whl文件</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install TA_Lib-0.4.17-cp37-cp37m-win_amd64.whl</span><br><span class="line">pip install TA-Lib</span><br></pre></td></tr></table></figure><h2 id="选择排序递归版"><a href="#选择排序递归版" class="headerlink" title="选择排序递归版"></a>选择排序递归版</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SelectSort</span><span class="params">(L)</span>:</span></span><br><span class="line">    L=L[:]</span><br><span class="line">    <span class="keyword">if</span> len(L)&lt;=<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> L</span><br><span class="line">    min = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(L)):</span><br><span class="line">        <span class="keyword">if</span> L[i]&lt;L[min]:</span><br><span class="line">            min = i</span><br><span class="line">    L[min],L[<span class="number">0</span>] = L[<span class="number">0</span>],L[min]</span><br><span class="line">    <span class="keyword">return</span> [L[<span class="number">0</span>]]+SelectSort(L[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">L = [<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">0</span>]</span><br><span class="line">print(SelectSort(L))</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h2 id="机房上机系统-自我实践"><a href="#机房上机系统-自我实践" class="headerlink" title="机房上机系统(自我实践)"></a>机房上机系统(自我实践)</h2><figure class="highlight py"><figcaption><span>简单机房上机系统源码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,stu_no=<span class="string">""</span>,stu_name=<span class="string">""</span>,stu_xi=<span class="string">""</span>,stu_time=<span class="string">""</span>)</span>:</span></span><br><span class="line">        self.stu_no = stu_no</span><br><span class="line">        self.stu_name = stu_name</span><br><span class="line">        self.stu_xi = stu_xi</span><br><span class="line">        self.stu_time = stu_time</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"学号："</span>+self.stu_no+<span class="string">"\t姓名："</span>+self.stu_name+<span class="string">"\t系别："</span>+self.stu_xi+<span class="string">"\t机时(h)："</span>+self.stu_time)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_stu_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.stu_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_stu_time</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> int(self.stu_time)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_stu_time</span><span class="params">(self,add_time)</span>:</span></span><br><span class="line">        self.stu_time = add_time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">menu</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"\t机房上机系统V0.1"</span>)</span><br><span class="line">    print(<span class="string">"********************************"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;1.录入学生信息"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;2.上机"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;3.下机"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;4.缴费"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;5.退出"</span>)</span><br><span class="line">    print(<span class="string">"********************************"</span>)</span><br><span class="line">    select = eval(input(<span class="string">"请输入序号："</span>))</span><br><span class="line">    <span class="keyword">while</span> select <span class="keyword">not</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入！"</span>)</span><br><span class="line">        select = eval(input(<span class="string">"请输入序号："</span>))</span><br><span class="line">    <span class="keyword">return</span> select</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span> <span class="comment">#获取当前时间</span></span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime()) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 全局变量</span></span><br><span class="line">    text = [] <span class="comment"># 上机记录列表</span></span><br><span class="line">    start_time = <span class="string">""</span></span><br><span class="line">    end_time = <span class="string">""</span></span><br><span class="line">    sum = <span class="number">0</span> <span class="comment"># 本系统按小时计费，不足一小时按一小时算</span></span><br><span class="line">    people = student()</span><br><span class="line">    online_flag = <span class="keyword">False</span></span><br><span class="line">    down_flag = <span class="keyword">False</span></span><br><span class="line">    input_flag = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        select = menu() <span class="comment"># 启用菜单</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> select == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> input_flag:</span><br><span class="line">                print(<span class="string">"已录入，无需重复操作，缴费请输入4:"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                input_flag = <span class="keyword">True</span></span><br><span class="line">                stu_no = input(<span class="string">"请输入学号："</span>)</span><br><span class="line">                stu_name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">                stu_xi = input(<span class="string">"请输入系别："</span>)</span><br><span class="line">                stu_time = input(<span class="string">"请输入机时："</span>)</span><br><span class="line">                people = student(stu_no,stu_name,stu_xi,stu_time)</span><br><span class="line">                people.print()</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> input_flag:</span><br><span class="line">                print(<span class="string">"未录入学生信息，请录入！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> online_flag:</span><br><span class="line">                online_flag = <span class="keyword">True</span></span><br><span class="line">                start_time = get_time()</span><br><span class="line">                start_num = int(start_time[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">                <span class="comment">#print(start_num)</span></span><br><span class="line"></span><br><span class="line">                text.append(<span class="string">"上机时间："</span>+start_time)</span><br><span class="line">                print(<span class="string">"已上机！上机时间为："</span>+start_time)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"已上机！上机时间为："</span>+start_time)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> online_flag:</span><br><span class="line">                print(<span class="string">"还未上机，请上机！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                end_time = get_time()</span><br><span class="line">                end_num = int(end_time[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">                sum = end_num - start_num</span><br><span class="line">                sum = sum <span class="keyword">if</span>(sum&gt;=<span class="number">0</span>) <span class="keyword">else</span> sum+<span class="number">24</span></span><br><span class="line">                sum = sum+<span class="number">1</span> <span class="keyword">if</span>(sum==<span class="number">0</span>) <span class="keyword">else</span> sum</span><br><span class="line">                print(<span class="string">"已下机！下机时间为："</span>+end_time+<span class="string">"\n上机时长(h)："</span>+str(sum)+<span class="string">"\t剩余机时(h)："</span>+str(people.get_stu_time()-sum))</span><br><span class="line">                text.append(<span class="string">"下机时间："</span>+end_time+<span class="string">"\n上机时长(h)："</span>+str(sum)+<span class="string">"\t"</span>+people.get_stu_name()+<span class="string">"剩余机时(h)："</span>+str(people.get_stu_time()-sum))</span><br><span class="line">                people.set_stu_time(str(people.get_stu_time()-sum))</span><br><span class="line">                down_flag = <span class="keyword">True</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> input_flag:</span><br><span class="line">                print(<span class="string">"未录入学生信息，请录入！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                people.print()</span><br><span class="line">                add_time = eval(input(<span class="string">"请输入机时："</span>))</span><br><span class="line">                people.set_stu_time(str(add_time+people.get_stu_time()))</span><br><span class="line">                people.print()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> down_flag:</span><br><span class="line">                print(<span class="string">"3s后退出系统，感谢使用！"</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>) <span class="comment"># 延迟3s，显示提示文字</span></span><br><span class="line">                <span class="keyword">break</span> <span class="comment"># 退出系统 写入文件</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"请下机！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入computer.txt文件</span></span><br><span class="line">    fo = open(<span class="string">"D:\\computer.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    fo.write(<span class="string">"\n"</span>.join(text)) </span><br><span class="line">    fo.close()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="量化交易代码分析与调试"><a href="#量化交易代码分析与调试" class="headerlink" title="量化交易代码分析与调试"></a>量化交易代码分析与调试</h2><p>由于python的版本问题和一些库的导入问题所以还未调试成功，先挂上代码。以后改篇再论。<br></p><figure class="highlight py"><figcaption><span>主要代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python </span></span><br><span class="line"><span class="comment">#-*- encoding: utf-8 -*- </span></span><br><span class="line"><span class="comment">#author pythontab.com </span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">import</span> wx.adv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_datareader.data <span class="keyword">as</span> web</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.figure <span class="keyword">import</span> Figure  </span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdates</span><br><span class="line"><span class="keyword">import</span> mpl_finance <span class="keyword">as</span> mpf</span><br><span class="line"><span class="keyword">from</span> matplotlib.backends.backend_wxagg <span class="keyword">import</span> FigureCanvasWxAgg <span class="keyword">as</span> FigureCanvas</span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec<span class="comment">#分割子图</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> talib</span><br><span class="line"><span class="keyword">import</span> csv,os</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> RedefPanelMod <span class="keyword">import</span> MPL_Panel_Base,Loop_Panel_Base</span><br><span class="line"><span class="keyword">from</span> StockDataMod <span class="keyword">import</span> GetStockDatPro</span><br><span class="line"><span class="keyword">from</span> IndicatStrateMod <span class="keyword">import</span> Excave_Indic_Base, QuantPickTimeSys,FactorPickStockAng</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] <span class="comment">#用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="keyword">False</span> <span class="comment">#用来正常显示负号</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDialog</span><span class="params">(wx.Dialog)</span>:</span><span class="comment"># user-defined</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent,text)</span>:</span></span><br><span class="line">        wx.Dialog.__init__(self,parent,<span class="number">-1</span>,<span class="string">u"选股提示"</span>,size=(<span class="number">400</span>,<span class="number">500</span>),style=wx.CAPTION|wx.CLOSE_BOX|wx.MAXIMIZE_BOX|wx.MINIMIZE_BOX)</span><br><span class="line">        </span><br><span class="line">        sizer = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        </span><br><span class="line">        pstock_Text = wx.StaticText(self, <span class="number">-1</span>, <span class="string">u'选股策略筛选结果'</span>) </span><br><span class="line">        pstock_Text.SetFont(wx.Font(<span class="number">18</span>,wx.DEFAULT,wx.NORMAL,wx.BOLD))</span><br><span class="line">        pstock_sure = wx.TextCtrl(self, <span class="number">-1</span>, <span class="string">"角度值:\n"</span>,size=(<span class="number">350</span>,<span class="number">300</span>),style = wx.TE_MULTILINE|wx.TE_READONLY)<span class="comment">#多行|只读</span></span><br><span class="line">        pstock_sure.SetFont(wx.Font(<span class="number">10</span>,wx.DEFAULT,wx.NORMAL,wx.BOLD))</span><br><span class="line"></span><br><span class="line">        okbtn = wx.Button(self,wx.ID_OK,<span class="string">u"确认"</span>)</span><br><span class="line">        okbtn.SetDefault()</span><br><span class="line">       </span><br><span class="line">        sizer.Add(pstock_Text,flag=wx.ALIGN_CENTER)</span><br><span class="line">        sizer.Add(pstock_sure,flag=wx.ALIGN_CENTER)</span><br><span class="line">        sizer.Add(okbtn,flag=wx.ALIGN_CENTER)       </span><br><span class="line">        self.SetSizer(sizer)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> text:pstock_sure.AppendText(i)</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Frame</span><span class="params">(wx.Frame)</span>:</span>   </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line">        wx.Frame.__init__(self, parent = <span class="keyword">None</span>, title = <span class="string">u'量化软件'</span>, size=(<span class="number">1500</span>,<span class="number">800</span>),   </span><br><span class="line">                      style=wx.DEFAULT_FRAME_STYLE^wx.MAXIMIZE_BOX)   </span><br><span class="line">        <span class="comment">#创建显示区面板</span></span><br><span class="line">        self.DispPanel = MPL_Panel_Base(self)</span><br><span class="line">        self.BackPanel = Loop_Panel_Base(self)</span><br><span class="line">        self.am = self.DispPanel.am</span><br><span class="line">        self.vol = self.DispPanel.vol</span><br><span class="line">        self.devol = self.DispPanel.devol</span><br><span class="line">        self.macd = self.DispPanel.macd        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建参数区面板</span></span><br><span class="line">        self.ParaPanel = wx.Panel(self,<span class="number">-1</span>)</span><br><span class="line">        </span><br><span class="line">        paraInput_Box = wx.StaticBox(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'参数输入'</span>) </span><br><span class="line">        paraInput_Sizer = wx.StaticBoxSizer(paraInput_Box, wx.VERTICAL)    </span><br><span class="line">        self.StNameCodedict = &#123;<span class="string">u"开山股份"</span>:<span class="string">"300257.SZ"</span>,<span class="string">u"浙大网新"</span>:<span class="string">"600797.SS"</span>,<span class="string">u"水晶光电"</span>:<span class="string">"002273.SZ"</span>, <span class="string">u"高鸿股份"</span>:<span class="string">"000851.SZ"</span>&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#初始化股票代码变量</span></span><br><span class="line">        self.stockName_Val = <span class="string">u"开山股份"</span></span><br><span class="line">        self.stockCode_Val = self.StNameCodedict[self.stockName_Val]</span><br><span class="line">        </span><br><span class="line">        self.stockName_CMBO = wx.ComboBox(self.ParaPanel, <span class="number">-1</span>,self.stockName_Val, choices = list(self.StNameCodedict.keys()), style = wx.CB_READONLY|wx.CB_DROPDOWN) <span class="comment">#股票名称</span></span><br><span class="line">        stockCode_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'股票名称'</span>) </span><br><span class="line"></span><br><span class="line">       <span class="comment">#策略选取</span></span><br><span class="line">        strate_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'策略名称'</span>) </span><br><span class="line">        strate_Combo_Val = [<span class="string">u"双趋势融合"</span>, <span class="string">u"阿尔法"</span>, <span class="string">u"布林带"</span>]</span><br><span class="line">        self.pickstrate_Val = <span class="string">u"双趋势融合"</span></span><br><span class="line">        self.pickstrate_CMBO = wx.ComboBox(self.ParaPanel, <span class="number">-1</span>, self.pickstrate_Val, choices = strate_Combo_Val, style = wx.CB_READONLY|wx.CB_DROPDOWN) <span class="comment">#策略名称        </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#日历控件选择数据周期</span></span><br><span class="line">        self.dpcEndTime = wx.adv.DatePickerCtrl(self.ParaPanel, <span class="number">-1</span>,style = wx.adv.DP_DROPDOWN|wx.adv.DP_SHOWCENTURY|wx.adv.DP_ALLOWNONE)<span class="comment">#结束时间</span></span><br><span class="line">        self.dpcStartTime = wx.adv.DatePickerCtrl(self.ParaPanel, <span class="number">-1</span>,style = wx.adv.DP_DROPDOWN|wx.adv.DP_SHOWCENTURY|wx.adv.DP_ALLOWNONE)<span class="comment">#起始时间</span></span><br><span class="line">        DateTimeNow = wx.DateTime.Now()<span class="comment">#wx.DateTime格式"03/03/18 00:00:00"</span></span><br><span class="line">       <span class="comment">#DateTimeNow = datetime.datetime.fromtimestamp(wx.DateTime.Now().GetTicks())</span></span><br><span class="line">       <span class="comment">#DateTimeNow = datetime.datetime.fromtimestamp(DateTimeNow)</span></span><br><span class="line">        self.dpcEndTime.SetValue(DateTimeNow)</span><br><span class="line">        DateTimeNow.SetYear(DateTimeNow.year<span class="number">-1</span>)</span><br><span class="line">        self.dpcStartTime.SetValue(DateTimeNow)</span><br><span class="line">        stockData_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'日期(Start-End)'</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#初始化时间变量</span></span><br><span class="line">        dateVal = self.dpcStartTime.GetValue() </span><br><span class="line">        self.stockSdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line">        dateVal = self.dpcEndTime.GetValue() </span><br><span class="line">        self.stockEdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line"></span><br><span class="line">        paraInput_Sizer.Add(stockCode_Text,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.stockName_CMBO, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(stockData_Text,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.dpcStartTime, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>) </span><br><span class="line">        paraInput_Sizer.Add(self.dpcEndTime, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>) </span><br><span class="line">        paraInput_Sizer.Add(strate_Text, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.pickstrate_CMBO, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        RadioList = [<span class="string">"不显示"</span>,<span class="string">"跳空缺口"</span>, <span class="string">"金叉/死叉"</span>, <span class="string">"N日突破"</span>] </span><br><span class="line">        self.StratInputBox = wx.RadioBox(self.ParaPanel, <span class="number">-1</span>, label=<span class="string">u'指标提示'</span>, choices=RadioList,majorDimension = <span class="number">4</span>, style = wx.RA_SPECIFY_ROWS) </span><br><span class="line">        self.StratInputBox.Bind(wx.EVT_RADIOBOX,self.OnRadioBox_Indicator) </span><br><span class="line">        <span class="comment">#初始化指标变量</span></span><br><span class="line">        self.IndicatInput_Val = self.StratInputBox.GetStringSelection()  </span><br><span class="line">        </span><br><span class="line">        self.TextAInput = wx.TextCtrl(self.ParaPanel, <span class="number">-1</span>, <span class="string">"交易信息提示:"</span>, style = wx.TE_MULTILINE|wx.TE_READONLY)<span class="comment">#多行|只读</span></span><br><span class="line"></span><br><span class="line">        vboxnetA = wx.BoxSizer(wx.VERTICAL)<span class="comment">#纵向box </span></span><br><span class="line">        vboxnetA.Add(paraInput_Sizer,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.BOTTOM,border=<span class="number">2</span>) <span class="comment">#proportion参数控制容器尺寸比例</span></span><br><span class="line">        vboxnetA.Add(self.StratInputBox,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.BOTTOM,border=<span class="number">2</span>)         </span><br><span class="line">        vboxnetA.Add(self.TextAInput,proportion=<span class="number">1</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>) </span><br><span class="line">        self.ParaPanel.SetSizer(vboxnetA)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建Right面板</span></span><br><span class="line">        self.CtrlPanel = wx.Panel(self,<span class="number">-1</span>) </span><br><span class="line">        <span class="comment">#创建FlexGridSizer布局网格</span></span><br><span class="line">        self.FlexGridSizer=wx.FlexGridSizer(rows=<span class="number">3</span>, cols=<span class="number">1</span>, vgap=<span class="number">3</span>, hgap=<span class="number">3</span>)  </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#行情按钮</span></span><br><span class="line">        self.Firmoffer = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"行情"</span>)</span><br><span class="line">        self.Firmoffer.Bind(wx.EVT_BUTTON,self.FirmEvent)<span class="comment">#绑定行情按钮事件  </span></span><br><span class="line">        <span class="comment">#选股按钮</span></span><br><span class="line">        self.Stockpick = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"选股"</span>)  </span><br><span class="line">        self.Stockpick.Bind(wx.EVT_BUTTON,self.PstockpEvent)<span class="comment">#绑定选股按钮事件</span></span><br><span class="line">        <span class="comment">#回测按钮  </span></span><br><span class="line">        self.Backtrace = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"回测"</span>)  </span><br><span class="line">        self.Backtrace.Bind(wx.EVT_BUTTON,self.BackEvent)<span class="comment">#绑定回测按钮事件</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">#加入Sizer中  </span></span><br><span class="line">        self.FlexGridSizer.Add(self.Firmoffer,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND)  </span><br><span class="line">        self.FlexGridSizer.Add(self.Stockpick,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND)  </span><br><span class="line">        self.FlexGridSizer.Add(self.Backtrace,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND) </span><br><span class="line">        self.FlexGridSizer.SetFlexibleDirection(wx.BOTH)  </span><br><span class="line">        </span><br><span class="line">        self.CtrlPanel.SetSizer(self.FlexGridSizer)  </span><br><span class="line">        </span><br><span class="line">        self.HBoxPanel = wx.BoxSizer(wx.HORIZONTAL)</span><br><span class="line">        self.HBoxPanel.Add(self.ParaPanel,proportion = <span class="number">1.5</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL) </span><br><span class="line">        self.HBoxPanel.Add(self.DispPanel,proportion = <span class="number">8</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL )         </span><br><span class="line">        self.HBoxPanel.Add(self.CtrlPanel,proportion = <span class="number">1</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL ) </span><br><span class="line">        self.SetSizer(self.HBoxPanel)    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ProcessStock</span><span class="params">(self)</span>:</span>         </span><br><span class="line">        <span class="comment">#df_stockload = web.DataReader("600797.SS", "yahoo", datetime.datetime(2017,1,1), datetime.date.today())</span></span><br><span class="line">        df_stockload = GetStockDatPro(self.stockCode_Val,self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line"></span><br><span class="line">        <span class="string">""" 绘制移动平均线图 """</span></span><br><span class="line">        <span class="comment">#self.am.plot(self.numic[0:self.butNum],self.close[0:self.butNum],'#0f0ff0',linewidth=1.0)</span></span><br><span class="line">        </span><br><span class="line">        dispCont_List = []</span><br><span class="line"></span><br><span class="line">        examp_trade= Excave_Indic_Base()</span><br><span class="line">        <span class="keyword">if</span> self.IndicatInput_Val == <span class="string">u"金叉/死叉"</span>:  </span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Aver_Cross(df_stockload)</span><br><span class="line">            self.DispPanel.draw_avercross(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">elif</span> self.IndicatInput_Val == <span class="string">u"跳空缺口"</span>:</span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Jump_Thrd(df_stockload)</span><br><span class="line">            self.DispPanel.draw_jumpgap(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">elif</span> self.IndicatInput_Val == <span class="string">u"N日突破"</span>:</span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Ndays_Break(df_stockload)</span><br><span class="line">            self.DispPanel.draw_ndaysbreak(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dispCont_List = dispCont_List</span><br><span class="line">            </span><br><span class="line">        self.TextAInput.SetValue(<span class="string">u"指标提示信息如下:"</span>+<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dispCont_List:self.TextAInput.AppendText(i)</span><br><span class="line"></span><br><span class="line">        numic = np.arange(<span class="number">0</span>,len(df_stockload.index))</span><br><span class="line">        butNum = len(df_stockload.index)</span><br><span class="line">        self.DispPanel.xylabel_tick_lim(self.stockName_Val,df_stockload.index)</span><br><span class="line">        self.DispPanel.draw_subgraph(df_stockload,numic)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ProcessLoop</span><span class="params">(self)</span>:</span> </span><br><span class="line"></span><br><span class="line">        df_stockload = GetStockDatPro(self.stockCode_Val,self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line">        dispCont_List = []</span><br><span class="line">        <span class="keyword">if</span> self.pickstrate_Val == <span class="string">u"双趋势融合"</span>:  </span><br><span class="line">            <span class="comment">#多趋势融合策略执行 """</span></span><br><span class="line">            examp_trade= QuantPickTimeSys(df_stockload)</span><br><span class="line">            dispCont_List = examp_trade.run_factor_plot(self.BackPanel.trade,self.BackPanel.total,self.BackPanel.profit)           </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#执行其他策略</span></span><br><span class="line">            <span class="keyword">pass</span>    </span><br><span class="line">            </span><br><span class="line">        self.TextAInput.SetValue(<span class="string">u"策略提示信息如下:"</span>+<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dispCont_List:self.TextAInput.AppendText(i)</span><br><span class="line">        self.BackPanel.xylabel_tick_lim(self.stockName_Val)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reFlashLoop</span><span class="params">(self)</span>:</span> </span><br><span class="line">        self.BackPanel.clear_subgraph()<span class="comment">#必须清理图形才能显示下一幅图</span></span><br><span class="line">        self.ProcessLoop()</span><br><span class="line">        self.BackPanel.update_subgraph()<span class="comment">#必须刷新才能显示下一幅图 </span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reFlashFrame</span><span class="params">(self)</span>:</span> </span><br><span class="line">        self.DispPanel.clear_subgraph()<span class="comment">#必须清理图形才能显示下一幅图</span></span><br><span class="line">        self.ProcessStock()</span><br><span class="line">        self.DispPanel.update_subgraph()<span class="comment">#必须刷新才能显示下一幅图 </span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">FirmEvent</span><span class="params">(self,event)</span>:</span></span><br><span class="line">        <span class="comment">#显示行情面板</span></span><br><span class="line">        self.HBoxPanel.Hide(self.BackPanel)</span><br><span class="line">        self.HBoxPanel.Replace(self.BackPanel,self.DispPanel)</span><br><span class="line">        self.HBoxPanel.Show(self.DispPanel)</span><br><span class="line">        <span class="comment">#self.HBoxPanel.Remove(self.BackPanel)</span></span><br><span class="line">        self.SetSizer(self.HBoxPanel)  </span><br><span class="line">        self.HBoxPanel.Layout()    </span><br><span class="line">    </span><br><span class="line">        <span class="comment">#获取列表股票代码和起始时间</span></span><br><span class="line">        self.stockName_Val = self.stockName_CMBO.GetString(self.stockName_CMBO.GetSelection())</span><br><span class="line">        self.stockCode_Val = self.StNameCodedict[self.stockName_Val]</span><br><span class="line"></span><br><span class="line">        dateVal = self.dpcStartTime.GetValue() </span><br><span class="line">        self.stockSdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line">        dateVal = self.dpcEndTime.GetValue() </span><br><span class="line">        self.stockEdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line"></span><br><span class="line">        self.reFlashFrame()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BackEvent</span><span class="params">(self,event)</span>:</span>       </span><br><span class="line">        <span class="comment">#显示回测面板</span></span><br><span class="line">        self.HBoxPanel.Hide(self.DispPanel)</span><br><span class="line">        self.HBoxPanel.Replace(self.DispPanel,self.BackPanel) </span><br><span class="line">        self.HBoxPanel.Show(self.BackPanel)</span><br><span class="line">        <span class="comment">#self.HBoxPanel.Remove(self.DispPanel)</span></span><br><span class="line">        self.SetSizer(self.HBoxPanel)  </span><br><span class="line">        self.HBoxPanel.Layout()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#获取策略名称</span></span><br><span class="line">        self.pickstrate_Val = self.pickstrate_CMBO.GetString(self.pickstrate_CMBO.GetSelection())</span><br><span class="line">        self.reFlashLoop()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">PstockpEvent</span><span class="params">(self,event)</span>:</span></span><br><span class="line">        dispCont_List = []</span><br><span class="line">        <span class="string">""" 选股策略执行 """</span></span><br><span class="line">        examp_trade= FactorPickStockAng()</span><br><span class="line">        <span class="keyword">for</span> index, stockName <span class="keyword">in</span> enumerate(self.StNameCodedict.keys()) : </span><br><span class="line">            print(<span class="string">"stockName"</span>,stockName,self.StNameCodedict[stockName])</span><br><span class="line">            df_stockload = GetStockDatPro(self.StNameCodedict[stockName],self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line">            df_stockload.fillna(method=<span class="string">'bfill'</span>,inplace=<span class="keyword">True</span>)<span class="comment">#后一个数据填充NAN1</span></span><br><span class="line">            dispCont_List.append(stockName+<span class="string">'\n'</span>+examp_trade.fit_pick(df_stockload.Close)+<span class="string">'\n'</span>)</span><br><span class="line">        print(dispCont_List)</span><br><span class="line">        <span class="string">""" 选股策略执行 """</span></span><br><span class="line">        <span class="string">""" 自定义提示框 """</span></span><br><span class="line">        myPickStock = UserDialog(self,dispCont_List)    </span><br><span class="line">        <span class="keyword">if</span> myPickStock.ShowModal() == wx.ID_OK:</span><br><span class="line">            <span class="keyword">pass</span> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="string">""" 自定义提示框 """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnRadioBox_Indicator</span><span class="params">(self,event)</span>:</span>  </span><br><span class="line">        self.IndicatInput_Val = self.StratInputBox.GetStringSelection()</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(wx.App)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.frame = Frame()  </span><br><span class="line">        self.frame.ProcessStock()</span><br><span class="line">        self.frame.Show()</span><br><span class="line">        self.SetTopWindow(self.frame)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:   </span><br><span class="line">    app = App()</span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;后面几天讲的有点杂，简单记录一下知识点。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python实训总结Ⅰ</title>
    <link href="https://lruihao.cn/posts/pysx1.html"/>
    <id>https://lruihao.cn/posts/pysx1.html</id>
    <published>2019-06-18T10:41:00.000Z</published>
    <updated>2019-06-21T11:10:20.544Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>以前和前一段时间自己也学习了一下python，也写了几个小爬虫；<br>这次正好又课程安排了为期两周的综合实训，主要是<strong>“用python做量化交易”</strong><br>进行了两天，讲的都是一些基本的东西，以前也接触过，所以很容易理解。还讲了一些软件，pycharm，anaconda,sublime等大都也都用过。anaconda倒是第一次接触。</p></div><a id="more"></a><h2 id="6-17"><a href="#6-17" class="headerlink" title="6.17"></a>6.17</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello World!"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>讲了一下变量和python的特色什么的。<br>还讲了模块定义<code>def</code>和类定义</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zxm</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">self.x=<span class="number">0</span></span><br><span class="line">self.y=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move_up</span><span class="params">(self)</span>:</span></span><br><span class="line">self.y +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">my_zxm=zxm()</span><br><span class="line">print(my_zxm)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;__main__.zxm object at 0x000001D99CFEF668&gt;</span><br></pre></td></tr></table></figure><h2 id="6-18"><a href="#6-18" class="headerlink" title="6.18"></a>6.18</h2><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><blockquote><p><code>print</code> 输出<br><code>input</code> 输入<br><code>eval</code> 执行一个字符串表达式，并返回表达式的值</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=eval(input(<span class="string">"请输入x的值："</span>))</span><br><span class="line">y=eval(input(<span class="string">"请输入y的值："</span>))</span><br><span class="line">z=(x**<span class="number">2</span>+y**<span class="number">2</span>)**<span class="number">0.5</span></span><br><span class="line">print(z)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入复数数学模块</span></span><br><span class="line"><span class="keyword">import</span> cmath</span><br><span class="line"> </span><br><span class="line">num = int(input(<span class="string">"请输入一个数字: "</span>))</span><br><span class="line">num_sqrt = cmath.sqrt(num)</span><br><span class="line">print(<span class="string">'&#123;0&#125; 的平方根为 &#123;1:0.3f&#125;+&#123;2:0.3f&#125;j'</span>.format(num ,num_sqrt.real,num_sqrt.imag))</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><blockquote><p>今天还讲了一下数据类型</p><ul><li>字符串： <code>&quot;&quot;</code> <code>&#39;&#39;</code></li><li>元组tuple(2,3)</li><li>列表list[2,3]</li><li>字典dict{Key:Value}</li><li>集合{}</li></ul></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1</span>,<span class="number">10</span>]</span><br><span class="line">type(x)<span class="comment">#判断元素类型</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list</span><br></pre></td></tr></table></figure><h3 id="循环判断"><a href="#循环判断" class="headerlink" title="循环判断"></a>循环判断</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>): <span class="comment"># (start,stop,step)</span></span><br><span class="line">    <span class="keyword">pass</span> <span class="comment"># pass不做任何事情，一般用做占位语句</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">'Python'</span>:</span><br><span class="line">   <span class="keyword">if</span> letter == <span class="string">'h'</span>:</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line">      print(<span class="string">'这是 pass 块'</span>)</span><br><span class="line">   print(<span class="string">'当前字母 :'</span>+ letter)</span><br><span class="line"> </span><br><span class="line">print(<span class="string">"Good bye!"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当前字母 :P</span><br><span class="line">当前字母 :y</span><br><span class="line">当前字母 :t</span><br><span class="line">这是 pass 块</span><br><span class="line">当前字母 :h</span><br><span class="line">当前字母 :o</span><br><span class="line">当前字母 :n</span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure><h3 id="str-、-import导库"><a href="#str-、-import导库" class="headerlink" title="str() 、 import导库"></a>str() 、 import导库</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">10</span></span><br><span class="line">print(<span class="string">"整数转字符串"</span>+str(x))</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> this</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful is better than ugly.</span><br><span class="line">Explicit is better than implicit.</span><br><span class="line">Simple is better than complex.</span><br><span class="line">Complex is better than complicated.</span><br><span class="line">Flat is better than nested.</span><br><span class="line">Sparse is better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren&apos;t special enough to break the rules.</span><br><span class="line">Although practicality beats purity.</span><br><span class="line">Errors should never pass silently.</span><br><span class="line">Unless explicitly silenced.</span><br><span class="line">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="line">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="line">Although that way may not be obvious at first unless you&apos;re Dutch.</span><br><span class="line">Now is better than never.</span><br><span class="line">Although never is often better than *right* now.</span><br><span class="line">If the implementation is hard to explain, it&apos;s a bad idea.</span><br><span class="line">If the implementation is easy to explain, it may be a good idea.</span><br><span class="line">Namespaces are one honking great idea -- let&apos;s do more of those!</span><br></pre></td></tr></table></figure><blockquote><p>Google翻译意思是:<br>美丽胜过丑陋。显式优于隐式。简单比复杂更好。复杂比复杂更好。Flat优于嵌套。稀疏优于密集。可读性很重要。特殊情况不足以打破规则。虽然实用性胜过纯洁。错误不应该默默地传递。除非明确沉默。面对模棱两可，拒绝猜测的诱惑。应该有一个最好只有一个明显的方法来做到这一点。虽然这种方式起初可能并不明显，除非你是荷兰人。现在比永远好。虽然现在永远不会比正确好。如果实施很难解释，这是一个坏主意。如果实现很容易解释，那可能是个好主意。命名空间是一个很棒的主意，让我们做更多的事情吧！</p></blockquote><h3 id="turtle绘图库（内置模块）"><a href="#turtle绘图库（内置模块）" class="headerlink" title="turtle绘图库（内置模块）"></a>turtle绘图库（内置模块）</h3>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;以前和前一段时间自己也学习了一下python，也写了几个小爬虫；&lt;br&gt;这次正好又课程安排了为期两周的综合实训，主要是&lt;strong&gt;“用python做量化交易”&lt;/strong&gt;&lt;br&gt;进行了两天，讲的都是一些基本的东西，以前也接触过，所以很容易理解。还讲了一些软件，pycharm，anaconda,sublime等大都也都用过。anaconda倒是第一次接触。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="turtle" scheme="https://lruihao.cn/tags/turtle/"/>
    
  </entry>
  
  <entry>
    <title>判断三角形的黑盒测试</title>
    <link href="https://lruihao.cn/posts/judgetriangle.html"/>
    <id>https://lruihao.cn/posts/judgetriangle.html</id>
    <published>2019-05-26T10:50:53.000Z</published>
    <updated>2019-05-26T11:10:08.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>黑盒测试着重测试软件功能，它并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。<br>白盒测试则清楚程序内部的结构以及是如何运作的，因此白盒测试需要对系统内部的结构和工作原理有一个清楚的了解。</p></div><a id="more"></a><h1 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2&lt;&lt;25</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a=N,b=N,c=N,d=N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuru</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">panduan</span><span class="params">(<span class="keyword">int</span> a1,<span class="keyword">int</span> b1,<span class="keyword">int</span> c1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> se;</span><br><span class="line">    shuru();</span><br><span class="line">    panduan(a,b,c);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否要继续y or n :"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;se);</span><br><span class="line">        <span class="keyword">if</span>(se==<span class="string">'\n'</span>) <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;se);</span><br><span class="line">        <span class="keyword">switch</span>(se)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'y'</span>:</span><br><span class="line">        shuru();</span><br><span class="line">      panduan(a,b,c);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'n'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuru</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter 三角形三边 (a,b,c)\n"</span>);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">scanf</span>(<span class="string">"%d,%d,%d,%d"</span>,&amp;a,&amp;b,&amp;c,&amp;d))&#123;<span class="comment">//判断非数字字符</span></span><br><span class="line">        fflush(<span class="built_in">stdin</span>);<span class="comment">//清理缓存</span></span><br><span class="line">        a=N;b=N;c=N;d=N;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"输入错误\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>((a&lt;<span class="number">1</span>||a&gt;<span class="number">100</span>)||(b&lt;<span class="number">1</span>||b&gt;<span class="number">100</span>)||(c&lt;<span class="number">1</span>||c&gt;<span class="number">100</span>)||d!=N)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b==N||c==N||d!=N) <span class="built_in">printf</span>(<span class="string">"输入错误\n"</span>);<span class="comment">//边数为1、2、4条</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span>||b==<span class="number">0</span>||c==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"边长不能为0\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a&lt;<span class="number">0</span>||b&lt;<span class="number">0</span>||c&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"边长不能为负\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Please enter 1-100之间的整数\n"</span>);</span><br><span class="line">        a=N;b=N;c=N;d=N;</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">scanf</span>(<span class="string">"%d,%d,%d,%d"</span>,&amp;a,&amp;b,&amp;c,&amp;d))&#123;<span class="comment">//判断非数字字符</span></span><br><span class="line">            fflush(<span class="built_in">stdin</span>);<span class="comment">//清理缓存</span></span><br><span class="line">            a=N;b=N;c=N;d=N;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"输入错误\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">panduan</span><span class="params">(<span class="keyword">int</span> a1,<span class="keyword">int</span> b1,<span class="keyword">int</span> c1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a1+b1&gt;c1&amp;&amp;b1+c1&gt;a1&amp;&amp;a1+c1&gt;b1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a1==b1&amp;&amp;a1==c1)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等边三角形\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a1==b1||a1==c1||b1==c1)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等腰三角形\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"一般三角形\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"非三角形\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><img src="/images/loading_img.gif" data-original="/posts/judgetriangle/1.png"> <img src="/images/loading_img.gif" data-original="/posts/judgetriangle/2.png"> <img src="/images/loading_img.gif" data-original="/posts/judgetriangle/3.png">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;黑盒测试着重测试软件功能，它并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。&lt;br&gt;白盒测试则清楚程序内部的结构以及是如何运作的，因此白盒测试需要对系统内部的结构和工作原理有一个清楚的了解。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="others" scheme="https://lruihao.cn/categories/others/"/>
    
    
      <category term="C" scheme="https://lruihao.cn/tags/C/"/>
    
      <category term="黑盒测试" scheme="https://lruihao.cn/tags/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HustOJ 基础搭建教程</title>
    <link href="https://lruihao.cn/posts/hustoj.html"/>
    <id>https://lruihao.cn/posts/hustoj.html</id>
    <published>2019-05-17T15:08:04.000Z</published>
    <updated>2019-05-25T02:26:51.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>目前 HustOj 在 GitHUb 地址是：<a href="https://github.com/zhblue/hustoj" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/zhblue/hustoj</a><br><strong>安装时注意ubuntu版本</strong>，没条件的可以在自己ubuntu上尝试，或者虚拟机上（关注公众号回复<code>ubuntu16.04</code>获取iso镜像文件），也可以在云实验室的云服务器上做做实验。<br>更多说明及ACM/NOIP题库下载见官网博客<a href="http://www.hustoj.com/" rel="external nofollow noopener noreferrer" target="_blank">代码的那些事|程序员回忆录</a></p></div><a id="more"></a><h1 id="快速安装-OJ"><a href="#快速安装-OJ" class="headerlink" title="快速安装 OJ"></a>快速安装 OJ</h1><p>下载<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/zhblue/hustoj/master/trunk/install/install-ubuntu16+.sh</span><br></pre></td></tr></table></figure><p></p><p>安装<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash install-ubuntu16+.sh</span><br></pre></td></tr></table></figure><p></p><p>等待中一路回车，当提示 done！ 则表示安装成功：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/1.png"></p><h1 id="使用-HustOJ"><a href="#使用-HustOJ" class="headerlink" title="使用 HustOJ"></a>使用 HustOJ</h1><p>打开网页/IP地址<br>注册admin<br>用 admin 作为用户名注册一个用户，将会自动成为管理员。<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/2.png"><br>注册成功，会提示：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/3.png"><br>登录后台<br>登录账号，并点击右上角的管理：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/4.png"><br>添加测试题目<br>在后台选择添加题目，添加成功：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/5.png"><br>然后再提交代码测试判题机。</p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>安装后几个重要配置文件的位置<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/home/judge/etc/judge.conf</span><br><span class="line">/home/judge/src/web/include/db_info.inc.php</span><br><span class="line">/etc/php5/fpm/php.ini 或 /etc/php7.0/fpm/php.ini</span><br><span class="line">/etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;目前 HustOj 在 GitHUb 地址是：&lt;a href=&quot;https://github.com/zhblue/hustoj&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/zhblue/hustoj&lt;/a&gt;&lt;br&gt;&lt;strong&gt;安装时注意ubuntu版本&lt;/strong&gt;，没条件的可以在自己ubuntu上尝试，或者虚拟机上（关注公众号回复&lt;code&gt;ubuntu16.04&lt;/code&gt;获取iso镜像文件），也可以在云实验室的云服务器上做做实验。&lt;br&gt;更多说明及ACM/NOIP题库下载见官网博客&lt;a href=&quot;http://www.hustoj.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;代码的那些事|程序员回忆录&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="ACM" scheme="https://lruihao.cn/tags/ACM/"/>
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="hustoj" scheme="https://lruihao.cn/tags/hustoj/"/>
    
      <category term="ubuntu" scheme="https://lruihao.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板安装ImgURL图床</title>
    <link href="https://lruihao.cn/posts/imgurl.html"/>
    <id>https://lruihao.cn/posts/imgurl.html</id>
    <published>2019-05-16T12:31:33.000Z</published>
    <updated>2019-07-12T01:00:49.435Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/images/loading_img.gif" data-original="/posts/imgurl/1.png" title="预览"><div class="note success no-icon"><p>ImgURL是一个开源、免费的图床程序，ImgURL 2.x之后对环境要求更高，尤其是ImageMagick组件的支持，很多朋友不清楚怎样安装这个组件，这篇文章分享宝塔面板安装ImgURL 2.x图床的过程（包括ImgURL 2.x需要的各种组件）<br><a href="https://img.lruihao.cn" rel="external nofollow noopener noreferrer" target="_blank">图床预览</a> <a href="https://www.xiaoz.me/archives/12081" rel="external nofollow noopener noreferrer" target="_blank">阅读原文</a></p></div><a id="more"></a><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>已经安装宝塔面板</li><li>在宝塔后台创建一个站点</li><li>下载<a href="https://github.com/helloxz/imgurl" rel="external nofollow noopener noreferrer" target="_blank">ImgURL 2.x</a>上传到站点根目录并解压</li></ol><h1 id="设置伪静态"><a href="#设置伪静态" class="headerlink" title="设置伪静态"></a>设置伪静态</h1><p>如果您宝塔面板安装的Apache则不需要再设置伪静态，直接跳过这个步骤，如果使用的Nginx环境，请继续往下看。</p><p>找到对应的站点 - 点击后面设置按钮 - 伪静态 - 添加下面的伪静态规则<br></p><figure class="highlight php"><figcaption><span>伪静态规则</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(db3|json)$ &#123;</span><br><span class="line">  deny all;</span><br><span class="line">&#125;</span><br><span class="line">location ~* ^/(temp|upload|imgs|data|application|<span class="keyword">static</span>|system)/.*.(php|php5)$ &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/imgurl/2.png"><h1 id="安装fileinfo-amp-imagemagick"><a href="#安装fileinfo-amp-imagemagick" class="headerlink" title="安装fileinfo &amp; imagemagick"></a>安装fileinfo &amp; imagemagick</h1><p>在宝塔后台 - 软件管理 - 找到您站点对应的PHP版本 - 设置PHP - 安装扩展 - 勾选<code>fileinfo</code>和<code>imagemagick</code>，如下截图。<br><img src="/images/loading_img.gif" data-original="/posts/imgurl/3.png"></p><h1 id="安装ImgURL-2-x"><a href="#安装ImgURL-2-x" class="headerlink" title="安装ImgURL 2.x"></a>安装ImgURL 2.x</h1><p>其它所需扩展宝塔默认已经支持，重点是安装<code>fileinfo</code>和<code>imagemagick</code>，扩展安装完毕后就可以访问您自己的域名安装ImgURL了，如果正常会看到ImgURL安装界面。<br><img src="/images/loading_img.gif" data-original="/posts/imgurl/4.png"><br><img src="/images/loading_img.gif" data-original="/posts/imgurl/5.png"></p><h1 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h1><ul><li>如果安装遇到任何问题，请留言反馈或到<a href="https://ttt.sh/category/6/imgurl%E5%9B%BE%E5%BA%8A" rel="external nofollow noopener noreferrer" target="_blank">3T官方社区</a>进行反馈</li><li>ImgURL更多使用说明请参考帮助文档：<a href="https://dwz.ovh/imgurldoc" rel="external nofollow noopener noreferrer" target="_blank">https://dwz.ovh/imgurldoc</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/posts/imgurl/1.png&quot; title=&quot;预览&quot;&gt;&lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;ImgURL是一个开源、免费的图床程序，ImgURL 2.x之后对环境要求更高，尤其是ImageMagick组件的支持，很多朋友不清楚怎样安装这个组件，这篇文章分享宝塔面板安装ImgURL 2.x图床的过程（包括ImgURL 2.x需要的各种组件）&lt;br&gt;&lt;a href=&quot;https://img.lruihao.cn&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;图床预览&lt;/a&gt; &lt;a href=&quot;https://www.xiaoz.me/archives/12081&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;阅读原文&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="宝塔面板" scheme="https://lruihao.cn/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="开源图床" scheme="https://lruihao.cn/tags/%E5%BC%80%E6%BA%90%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="imgurl" scheme="https://lruihao.cn/tags/imgurl/"/>
    
  </entry>
  
  <entry>
    <title>python实战：模拟post请求定时获取后台数据并打包发送至微信</title>
    <link href="https://lruihao.cn/posts/mx2wx.html"/>
    <id>https://lruihao.cn/posts/mx2wx.html</id>
    <published>2019-05-11T09:02:31.000Z</published>
    <updated>2019-07-12T05:45:23.457Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary no-icon"><p>用python模拟post请求获取“麻小科技”示例酒店后台的数据，再打包发送至指定的微信群或者好友。<br>要求每天早上8点定时把每个酒店的数据发送至每个酒店的微信工作群。</p></div><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>麻小科技：<br>麻小科技全名深圳市麻小科技有限公司，成立于2017年1月。是我高一的时候参加<code>Peer夏令营</code>带我们一个玩的“老师”和他的朋友的创业公司，说老师有点奇怪，我们都是直接叫名字的，比如大家都叫我瑞豪，我也就叫他文捷哥，简称捷哥吧。他们公司主要的开发模式是，小程序前端+php后端，然后做的是酒店小程序，为每个酒店定制小程序。这些小程序可以贴在客房中给访客提供一些服务，大大节省了成本也提高了效率。<br>然后每个酒店小程序都有独立的后台，后台会记录一些点击需求的数据。现在他们有一个需求需要把每个酒店小程序后台的数据在每天早上9点发送至对应酒店的微信群。</p></blockquote><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><blockquote><p>缓存登录信息，短时间类无需重复登录，仅第一次需要扫码登录（相当于微信网页版），后面的登录只需在手机上确认登录信息。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本信息填写：</span></span><br><span class="line"><span class="comment"># 酒店id，酒店名称及群名列表数据，格式：["xxx","xxx","xxx"]</span></span><br><span class="line"><span class="comment"># 使用时请将以下三个列表一一对应</span></span><br><span class="line">hotel=[<span class="string">"xxxx"</span>,<span class="string">"xxxx"</span>] <span class="comment"># 酒店后台数据接口二级域名，已匿名</span></span><br><span class="line">hotel_name=[<span class="string">"增城宾馆"</span>,<span class="string">"百丽酒店"</span>]</span><br><span class="line">grouplist = [<span class="string">"麻小"</span>,<span class="string">"富强民主文明和谐自由平等公正法治"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># post请求发送的数据</span></span><br><span class="line">postData = &#123;</span><br><span class="line">    <span class="comment"># 'username':'test',</span></span><br><span class="line">    <span class="comment"># 'password':'123456',</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">()</span>:</span></span><br><span class="line">result = [] <span class="comment">#结果列表</span></span><br><span class="line">i = <span class="number">0</span> <span class="comment">#计数器</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> hotel:</span><br><span class="line">url=<span class="string">"http://"</span>+each+<span class="string">".maxiaokeji.com/xxx/xxxxxxx/xxx"</span> <span class="comment"># 为保护隐私及权益，这里不提供接口</span></span><br><span class="line">r = requests.post(url,data=postData)</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把结果转化为json字符串</span></span><br><span class="line">response=json.dumps(r.json(),indent=<span class="number">4</span>,ensure_ascii=<span class="keyword">False</span>) <span class="comment">#sort_keys=True </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把json转换为dict字典作为中间结果，再取出昨日数据</span></span><br><span class="line">midresult=json.loads(response)</span><br><span class="line">result.append(<span class="string">"早上好！"</span>+hotel_name[i]+<span class="string">"小程序昨日数据如下：\n访问数："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type1"</span>])+<span class="string">"\n房间数："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type2"</span>])+<span class="string">"\n需求量："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type3"</span>])+<span class="string">"\n商品点击量："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type4"</span>]))</span><br><span class="line">i+=<span class="number">1</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat_send</span><span class="params">(bot,result)</span>:</span></span><br><span class="line"><span class="comment"># my_friend = bot.friends().search('lrh')[0]</span></span><br><span class="line"><span class="comment"># my_friend.send(result)</span></span><br><span class="line">i = <span class="number">0</span> <span class="comment"># 计数器</span></span><br><span class="line"><span class="keyword">for</span> group <span class="keyword">in</span> grouplist:</span><br><span class="line">my_group = bot.groups().search(group)[<span class="number">0</span>] <span class="comment">#依次搜索每一个群名称，每次一个</span></span><br><span class="line">my_group.send(result[i])</span><br><span class="line">print(result[i])</span><br><span class="line">print(<span class="string">"已发送至群："</span>+group)</span><br><span class="line">i+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(bot)</span>:</span></span><br><span class="line"><span class="comment"># 设置最大休眠时间，防止程序长时间占用系统资源</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">now_hour = time.strftime(<span class="string">"%H"</span>, time.localtime())</span><br><span class="line">now_min = time.strftime(<span class="string">"%M"</span>, time.localtime())</span><br><span class="line"><span class="comment"># 设置每天8点发送</span></span><br><span class="line"><span class="keyword">if</span> now_hour &lt; <span class="string">"08"</span>:</span><br><span class="line">rest = <span class="number">8</span> - int(now_hour)</span><br><span class="line">sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">time.sleep(sleeptime)</span><br><span class="line"><span class="keyword">elif</span> now_hour &gt; <span class="string">"08"</span>:</span><br><span class="line">rest = <span class="number">8</span> - int(now_hour) + <span class="number">24</span></span><br><span class="line">sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">time.sleep(sleeptime)</span><br><span class="line"><span class="keyword">elif</span> now_hour == <span class="string">"08"</span>:</span><br><span class="line">print(<span class="string">"软件明天开始将在每天8点发送数据！"</span>)</span><br><span class="line">result=get_data() <span class="comment"># 获取数据</span></span><br><span class="line">wechat_send(bot,result) <span class="comment"># 发送数据</span></span><br><span class="line">time.sleep(<span class="number">86400</span>-int(now_min)*<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">bot = Bot(cache_path=<span class="keyword">True</span>) <span class="comment"># 初始化机器人，扫码登陆 </span></span><br><span class="line">main(bot);</span><br></pre></td></tr></table></figure><h1 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h1><p><img src="/images/loading_img.gif" data-original="./mx2wx/1.jpg" width="400px" alt="发送测试" title="发送测试"></p><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="./mx2wx/2.png" class="full-image" alt="多数据发送" title="多数据发送"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="./mx2wx/3.png" class="full-image" alt="多群定时" title="多群定时"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><h1 id="程序打包"><a href="#程序打包" class="headerlink" title="程序打包"></a>程序打包</h1><p>使用pyinstaller工具打包成可执行文件即可。（可执行文件不可跨平台运行，分平台打包）</p><blockquote><p>目前该程序已经上线测试中…暂未反馈问题</p></blockquote><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><div class="note success no-icon"><p>第一次参与实际公司的项目开发，虽然只是一个小的需求设计，但是我在这个过程中也学到了很多，比如通过实际一两周的编程对Python的熟悉度远远好过以前在实验室看的一个月视频。<br>还有就是在此次开发中，也感受到了实际项目开发的团队合作重要性，刚开始拿到这个需求，由于我对python和后台，以及数据接口这些基本的操作都不懂，就拿数据获取来说，我一开始一位要自己模拟登陆后台（已知密码），一顿操作、百度等等失败告终，后来涛哥给了一个数据接口，加上涛哥耐心指点，我才终于拿到了数据。<br>还有在多人合作的项目中，为保持代码的可读性，要尽量的多些注释，还有函数方法的命名尽量具备可读性。比如我代码中的<code>wechat_send()</code>，一开始的命名是<code>wxfs()</code>，经捷哥指正我才改过来的。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary no-icon&quot;&gt;&lt;p&gt;用python模拟post请求获取“麻小科技”示例酒店后台的数据，再打包发送至指定的微信群或者好友。&lt;br&gt;要求每天早上8点定时把每个酒店的数据发送至每个酒店的微信工作群。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="json" scheme="https://lruihao.cn/tags/json/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pyinstaller" scheme="https://lruihao.cn/tags/pyinstaller/"/>
    
      <category term="post" scheme="https://lruihao.cn/tags/post/"/>
    
      <category term="定时任务" scheme="https://lruihao.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
      <category term="requests" scheme="https://lruihao.cn/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>条件注释判断浏览器版本&amp;lt;!--[if lt IE 9]&amp;gt;</title>
    <link href="https://lruihao.cn/posts/ifzhushi.html"/>
    <id>https://lruihao.cn/posts/ifzhushi.html</id>
    <published>2019-05-10T05:08:27.000Z</published>
    <updated>2019-05-10T05:30:48.842Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p><span>&lt;!–[if !IE]&gt;&lt;!–&gt; 除IE外都可识别 &lt;!–&lt;![endif]–&gt;</span><br><span>&lt;!–[if IE]&gt; 所有的IE可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 6]&gt; 仅IE6可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 7]&gt; 仅IE7可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if gte IE 7]&gt; IE7以及IE7以上版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 8]&gt; 仅IE8可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 9]&gt; 仅IE9可识别 &lt;![endif]–&gt;</span></p></div><a id="more"></a><table border="2" align="center"><tbody><tr><th width="50">项目</th><th width="150">范例</th><th>说明</th></tr><tr><td align="middle">!</td><td>[if !IE]</td><td>The NOT operator. This is placed immediately in front of the&nbsp;<em>feature</em>,&nbsp;<em>operator</em>, or&nbsp;<em>subexpression</em>&nbsp;to reverse the Boolean meaning of the expression.<br>NOT运算符。这是摆立即在前面的<em>功能</em>，<em>操作员</em>，或<em>子表达式</em>扭转布尔表达式的意义。</td></tr><tr><td align="middle">lt</td><td>[if lt IE 5.5]</td><td>The less-than operator. Returns true if the first argument is less than the second argument.<br>小于运算符。如果第一个参数小于第二个参数，则返回true。</td></tr><tr><td align="middle">lte</td><td>[if lte IE 6]</td><td>The less-than or equal operator. Returns true if the first argument is less than or equal to the second argument.<br>小于或等于运算。如果第一个参数是小于或等于第二个参数，则返回true。</td></tr><tr><td align="middle">gt</td><td>[if gt IE 5]</td><td>The greater-than operator. Returns true if the first argument is greater than the second argument.<br>大于运算符。如果第一个参数大于第二个参数，则返回true。</td></tr><tr><td align="middle">gte</td><td>[if gte IE 7]</td><td>The greater-than or equal operator. Returns true if the first argument is greater than or equal to the second argument.<br>大于或等于运算。如果第一个参数是大于或等于第二个参数，则返回true。</td></tr><tr><td align="middle">( )</td><td>[if !(IE 7)]</td><td>Subexpression operators. Used in conjunction with boolean operators to create more complex expressions.<br>子表达式运营商。在与布尔运算符用于创建更复杂的表达式。</td></tr><tr><td align="middle">&amp;</td><td>[if (gt IE 5)&amp;(lt IE 7)]</td><td>The AND operator. Returns true if all subexpressions evaluate to true<br>AND运算符。如果所有的子表达式计算结果为true，返回true</td></tr><tr><td align="middle">|</td><td>[if (IE 6)|(IE 7)]</td><td>The OR operator. Returns true if any of the subexpressions evaluates to true.<br>OR运算符。返回true，如果子表达式计算结果为true。</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">加载CSS1</span></span><br><span class="line"><span class="comment">&lt;!--[else]&gt;</span></span><br><span class="line"><span class="comment">加载CSS2</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p>这样有效是有效,但是用HTML VALIDATOR里,报错,因为这个不符合XHTML 1.1的规范,<br>如果把ELSE语句去掉,则正确.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加载CSS2</span><br><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">加载CSS1(可以把要重写的写在这里).</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;&lt;span&gt;&amp;lt;!–[if !IE]&amp;gt;&amp;lt;!–&amp;gt; 除IE外都可识别 &amp;lt;!–&amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE]&amp;gt; 所有的IE可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 6]&amp;gt; 仅IE6可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if lt IE 6]&amp;gt; IE6以及IE6以下版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if gte IE 6]&amp;gt; IE6以及IE6以上版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 7]&amp;gt; 仅IE7可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if lt IE 7]&amp;gt; IE7以及IE7以下版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if gte IE 7]&amp;gt; IE7以及IE7以上版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 8]&amp;gt; 仅IE8可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 9]&amp;gt; 仅IE9可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>python设置程序每天8点定时执行任务</title>
    <link href="https://lruihao.cn/posts/pysettime.html"/>
    <id>https://lruihao.cn/posts/pysettime.html</id>
    <published>2019-05-09T15:26:54.000Z</published>
    <updated>2019-05-17T03:52:43.527Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>第一次运行根据程序执行时间，判断程序休眠的时间，尽最大可能休眠，节省系统资源。<br>第二次运行后直接休眠一天，到每天早上8点执行任务。<br>（该程序需要一直挂着，保持网络不断）</p></div><a id="more"></a><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    now_hour = time.strftime(<span class="string">"%H"</span>, time.localtime())</span><br><span class="line">    now_min = time.strftime(<span class="string">"%M"</span>, time.localtime())</span><br><span class="line">    <span class="keyword">if</span> now_hour &lt; <span class="string">"08"</span>:</span><br><span class="line">        rest = <span class="number">8</span> - int(now_hour)</span><br><span class="line">        sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">        time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour &gt; <span class="string">"08"</span>:</span><br><span class="line">        rest = <span class="number">8</span> - int(now_hour) + <span class="number">24</span></span><br><span class="line">        sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">        time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour == <span class="string">"08"</span>:</span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span> + time.strftime(<span class="string">"%H:%M"</span>, time.localtime()), <span class="string">"\t软件将在每天8点发送数据！"</span>)</span><br><span class="line">        <span class="comment"># 以下为定时任务</span></span><br><span class="line">        print(<span class="string">"数据"</span>)</span><br><span class="line">        time.sleep(<span class="number">86400</span>-int(now_min)*<span class="number">60</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;第一次运行根据程序执行时间，判断程序休眠的时间，尽最大可能休眠，节省系统资源。&lt;br&gt;第二次运行后直接休眠一天，到每天早上8点执行任务。&lt;br&gt;（该程序需要一直挂着，保持网络不断）&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="定时任务" scheme="https://lruihao.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>安装pyinstaller出错的解决办法及csdn工具实例打包</title>
    <link href="https://lruihao.cn/posts/pyinstallererror.html"/>
    <id>https://lruihao.cn/posts/pyinstallererror.html</id>
    <published>2019-05-09T11:05:01.000Z</published>
    <updated>2019-05-12T15:13:44.730Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>用过命令<code>pip install pyinstaller</code>安装失败，此包依赖于pywin32，安装前需要先<code>pip install pywin32</code>,我安装了还是出错，稍微百度了一下也没有看到解决办法。<br>这里通过手动下载安装解决的，记录一下。</p></div><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>去官网下载pyinstaller安装包：<a href="https://pypi.org/project/PyInstaller/#files" rel="external nofollow noopener noreferrer" target="_blank">https://pypi.org/project/PyInstaller/#files</a></p><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><p>我这里解压到<code>E:\应用\Python37\Lib\site-packages\PyInstaller-3.4</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>cmd也进入到上面的路径下，然后执行<code>Python setup.py install</code>，等待安装完毕<br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/1.png" title="安装"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/2.png" title="完成"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/3.png" title="pip list"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/4.png" title="版本"></p><h1 id="pyinstaller简介"><a href="#pyinstaller简介" class="headerlink" title="pyinstaller简介"></a>pyinstaller简介</h1><p>pyinstaller将Python脚本打包成可执行程序，使在没有Python环境的机器上运行。</p><p>最新版是pyinstaller 3.4，可运行在Windows，Mac和Linux操作系统下。 但它不是跨编译的，也就是说在Windows下用PyInstaller生成的exe只能运行在Windows下，在Linux下生成的只能运行在Linux下。</p><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>打包的app里并不包含任何源码，但将脚本的.pyc文件打包了。</p><p>基本语法： <code>pyinstaller options myscript.py</code></p><blockquote><p>常用的可选参数如下：<br><code>--onefile</code> 将结果打包成一个可执行文件<br><code>--onedir</code> 将所有结果打包到一个文件夹中，该文件夹包括一个可执行文件和可执行文件执行时需要的依赖文件（默认）<br><code>--paths=DIR</code> 设置导入路径<br><code>--distpath=DIR</code> 设置将打包的结果文件放置的路径<br><code>--specpath=DIR</code> 设置将spec文件放置的路径<br><code>--windowed</code> 使用windows子系统执行，不会打开命令行（只对windows有效）<br><code>--nowindowed</code> 使用控制台子系统执行（默认）（只对windows有效）<br><code>--icon=&lt;FILE.ICO&gt;</code> 将file.ico添加为可执行文件的资源(只对windows有效）</p></blockquote><p>如<code>pyinstaller --paths=&quot;D:\&quot; test.py</code></p><h1 id="CSDN访问量脚本实例"><a href="#CSDN访问量脚本实例" class="headerlink" title="CSDN访问量脚本实例"></a>CSDN访问量脚本实例</h1><p>比如，拿以前写的一个刷csdn访问量工具csdn.py（放在桌面上），代码如下<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">__author__ = <span class="string">'lruihao.cn'</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">opener = urllib.request.build_opener()</span><br><span class="line">opener.addheaders = [(<span class="string">'User-agent'</span>,</span><br><span class="line">                      <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_article_url</span><span class="params">(page,name)</span>:</span></span><br><span class="line">    endurl = <span class="string">"/"</span>+name+<span class="string">"/article/details/........"</span></span><br><span class="line">    print(name)</span><br><span class="line">    p = re.compile(endurl)</span><br><span class="line">    url = <span class="string">"http://blog.csdn.net/"</span>+name+<span class="string">"/article/list/"</span>+str(page)</span><br><span class="line">    <span class="comment"># 使用build_opener()是为了让python程序模仿浏览器进行访问</span></span><br><span class="line">    html = opener.open(url).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    allfinds = p.findall(html)</span><br><span class="line">    <span class="keyword">return</span> allfinds</span><br><span class="line">    <span class="comment">#print('allfinds',allfinds)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_do</span><span class="params">(allfinds)</span>:</span></span><br><span class="line">    urlBase = <span class="string">"http://blog.csdn.net"</span>  <span class="comment"># 需要将网址合并的部分</span></span><br><span class="line">    <span class="comment"># 页面中的网址有重复的，需要使用set进行去重复</span></span><br><span class="line">    mypages = list(set(allfinds))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(mypages)):</span><br><span class="line">        mypages[i] = urlBase + mypages[i]</span><br><span class="line">    print(<span class="string">'要刷的网页有：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        print(str(index), page)</span><br><span class="line">    <span class="comment"># 设置每个网页要刷的次数</span></span><br><span class="line">    brushNum = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 所有的页面都刷</span></span><br><span class="line">    print(<span class="string">'下面开始刷了哦：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(brushNum):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pageContent = opener.open(page).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="comment"># 使用BeautifulSoup解析每篇博客的标题</span></span><br><span class="line">                soup = BeautifulSoup(pageContent)</span><br><span class="line">                blogTitle = str(soup.title.string)</span><br><span class="line">                blogTitle = blogTitle[<span class="number">0</span>:blogTitle.find(<span class="string">'-'</span>)]</span><br><span class="line">                print(str(j), blogTitle)</span><br><span class="line">            <span class="keyword">except</span> urllib.error.HTTPError:</span><br><span class="line">                print(<span class="string">'urllib.error.HTTPError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">            <span class="keyword">except</span> urllib.error.URLError:</span><br><span class="line">                print(<span class="string">'urllib.error.URLError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">                time.sleep(<span class="number">0.5</span>)  <span class="comment"># 正常停顿，以免服务器拒绝访问</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        print(<span class="string">"************第"</span>+str(page)+<span class="string">"页*************"</span>)</span><br><span class="line">        endurl = get_article_url(page,name)</span><br><span class="line">        start_do(endurl)</span><br><span class="line">    print(<span class="string">"开始休息"</span>)</span><br><span class="line">    time.sleep(<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">name = input(<span class="string">"输入你的csdn用户名："</span>)</span><br><span class="line"><span class="keyword">if</span> name==<span class="string">""</span>:</span><br><span class="line">name = <span class="string">"qq_39520417"</span> <span class="comment">#cheung99857</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">main(name)</span><br></pre></td></tr></table></figure><p></p><p>在cmd进入桌面路径，输入如下命令<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller --onefile --nowindowed csdn.py</span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/5.png" title="csdn.exe生成成功"> <img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/6.png" title="csdn.exe生成成功"><p>另外推广一下自己的微信公众号，欢迎关注公众号👇👇👇，后台回复关键词<code>csdn_visiter</code>获取源码及exe可执行文件。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;用过命令&lt;code&gt;pip install pyinstaller&lt;/code&gt;安装失败，此包依赖于pywin32，安装前需要先&lt;code&gt;pip install pywin32&lt;/code&gt;,我安装了还是出错，稍微百度了一下也没有看到解决办法。&lt;br&gt;这里通过手动下载安装解决的，记录一下。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="pyinstaller" scheme="https://lruihao.cn/tags/pyinstaller/"/>
    
  </entry>
  
  <entry>
    <title>java实现一个单线程的资源下载器</title>
    <link href="https://lruihao.cn/posts/SingleThreadDown.html"/>
    <id>https://lruihao.cn/posts/SingleThreadDown.html</id>
    <published>2019-05-08T12:55:02.000Z</published>
    <updated>2019-05-08T13:25:56.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success"><p>实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。</p></div><a id="more"></a><h1 id="GUI设计基本流程"><a href="#GUI设计基本流程" class="headerlink" title="GUI设计基本流程"></a>GUI设计基本流程</h1><p>先记录一下GUI设计的基本流程：</p><ol><li>根据需要从相应的顶层容器继承（如果创建窗体就继承JFrame，对话框就继承JDialog），新建一个子类。</li><li>然后设置顶层容器的属性，包括大小、位置、标题和关闭事件等。</li><li>设置界面上GUI组件的事件响应。 <code>public void actionPerformed(ActionEvent e) {}</code></li><li>向顶层容器上添加GUI组件，并设置布局。（通常利用JPanel组件先作为微型容器）</li><li>创建新建子类的实例，调用setVisible(true)方法显示页面。（也可以直接在子类中设置setVisible(true)）</li></ol><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.HeadlessException;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleThreadDown</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JLabel label1=<span class="keyword">new</span> JLabel(<span class="string">"网络资源的单线程下载："</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JLabel label2=<span class="keyword">new</span> JLabel(<span class="string">"网络资源的网址："</span>);</span><br><span class="line">JButton StartButton = <span class="keyword">new</span> JButton(<span class="string">"单击开始下载"</span>);</span><br><span class="line">JButton resetButton = <span class="keyword">new</span> JButton(<span class="string">"清空"</span>);</span><br><span class="line">JButton exitButton = <span class="keyword">new</span> JButton(<span class="string">"退出"</span>);</span><br><span class="line">JTextField urlField  = <span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SingleThreadDown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">panel.setLayout(<span class="keyword">new</span> FlowLayout()); <span class="comment">//布局管理器</span></span><br><span class="line">label1.setFont(<span class="keyword">new</span> Font(<span class="string">"雅黑"</span>,Font.BOLD,<span class="number">15</span>));</span><br><span class="line">panel.add(label1);</span><br><span class="line">panel.add(label2);</span><br><span class="line">panel.add(urlField);</span><br><span class="line">panel.add(StartButton);</span><br><span class="line">panel.add(resetButton);</span><br><span class="line">panel.add(exitButton);</span><br><span class="line">setContentPane(panel);</span><br><span class="line">setSize(<span class="number">400</span>,<span class="number">200</span>);</span><br><span class="line">setLocation(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">setVisible(<span class="keyword">true</span>); <span class="comment">//面板可视化，也可以在main中通过JFrame子类对象调用方法设置</span></span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); <span class="comment">//默认关闭事件</span></span><br><span class="line">StartButton.addActionListener(<span class="keyword">this</span>);<span class="comment">//添加点击事件，传入ActionListener对象，由于子类继承了ActionListener接口，所以this</span></span><br><span class="line">resetButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">exitButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String address)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">URLConnection urlcon = url.openConnection();</span><br><span class="line">urlcon.connect();</span><br><span class="line">InputStream in=urlcon.getInputStream();<span class="comment">//获取的字节流对象</span></span><br><span class="line">String filePath = url.getFile();</span><br><span class="line"><span class="keyword">int</span> pos=filePath.lastIndexOf(<span class="string">"/"</span>); <span class="comment">//"/"分割的最后一个串的下标</span></span><br><span class="line">String fileName = filePath.substring(pos+<span class="number">1</span>);</span><br><span class="line">FileOutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\"</span>+fileName);</span><br><span class="line"><span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((len=in.read(b,<span class="number">0</span>,<span class="number">1024</span>))!=-<span class="number">1</span>) &#123;</span><br><span class="line">out.write(b,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line">out.close();</span><br><span class="line">in.close();</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"下载完毕"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==StartButton) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(urlField.getText()))&#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"请输入资源地址"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String url = urlField.getText();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">download(url);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"资源地址有误，请检查~"</span>);</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e.getSource()==resetButton) &#123;</span><br><span class="line">urlField.setText(<span class="string">""</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> SingleThreadDown();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果测试"><a href="#运行结果测试" class="headerlink" title="运行结果测试"></a>运行结果测试</h1><p>通过<code>https://github.com/Lruihao/Grocery/raw/master/fonts/MMT_last.ttf</code>下载沐目体ttf字体文件，稍微等待一下弹出对话框“下载完毕”，经检查下载内容正常。<br><img src="/images/loading_img.gif" data-original="/posts/SingleThreadDown/1.png" title="运行效果"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;&lt;p&gt;实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="GUI" scheme="https://lruihao.cn/tags/GUI/"/>
    
      <category term="URL" scheme="https://lruihao.cn/tags/URL/"/>
    
      <category term="URLConnection" scheme="https://lruihao.cn/tags/URLConnection/"/>
    
  </entry>
  
  <entry>
    <title>Python如何操作Json？</title>
    <link href="https://lruihao.cn/posts/jsoninfo.html"/>
    <id>https://lruihao.cn/posts/jsoninfo.html</id>
    <published>2019-05-07T10:42:47.000Z</published>
    <updated>2019-05-10T05:10:44.004Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>Json（JavaScript Object Notation）它是一种轻量级的数据交换格式，具有数据格式简单，读写方便易懂等很多优点。许多主流的编程语言都在用它来进行前后端的数据传输，大大的简化了服务器和客户端的开发工作量。相对于XML来说，更加的轻量级，更方便解析，因此许多开发者都遵循Json格式来进行数据的传输和交换。今天我们详细介绍一下Python在Json的编解码方面的知识。<a href="https://baijiahao.baidu.com/s?id=1608659655547720220&amp;wfr=spider&amp;for=pc" rel="external nofollow noopener noreferrer" target="_blank">阅读原文</a></p></div><a id="more"></a><h1 id="json的数据格式"><a href="#json的数据格式" class="headerlink" title="json的数据格式"></a>json的数据格式</h1><p>在json中，遵循“键值对”的这样一种方式，比如：“{“name”:”tom”}”,就是一个json格式的数据，json的格式归纳下来，一般有以下几点：</p><ul><li>对象通过键值对表现；</li><li>键通过双引号包裹，后面跟冒号“:”，然后跟该键的值；</li><li>值可以是字符串、数字、数组等数据类型；</li><li>对象与对象之间用逗号隔开；</li><li>“{}”用来表达对象；</li><li>“[]”用来表达数组；</li></ul><p>我们看一个略为复杂一点的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/2.jpg"><br>上例则是一个典型的json格式的数据，强大的Python提供了一个“json”模块，可以方便的将各种零散的数据通过模块的内置函数编码形成一个json格式的数据，也可以将一个json格式的数据解码形成自己需要的数据，非常好用，下面我们就来介绍一下。</p><h1 id="json-dumps"><a href="#json-dumps" class="headerlink" title="json.dumps()"></a>json.dumps()</h1><p>json模块里的dumps函数是对数据进行编码，形成json格式的数据，我们看一下下面的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/3.jpg"><br>通过输出的结果很容易看出，通过dumps方法使字典转换成为了json格式，虽然它们非常相似。其中，在dumps里的参数“sort_keys=True”，使得输出json后对key和value进行0~9、a~z的顺序排序，如果不填，则按照无序排列。有时候，通过排序可以方便地比较json中的数据，因此，适当的排序是很有必要的。</p><p>此外，“Indent”参数表示缩进的意思，它可以使得输出的Json看起来更加整齐好看，可读性更强，例如：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/4.jpg"><br>下面列举一下dumps（）的可填参数：</p><ul><li>skipkey：默认为False，当dict对象里的数据不是Python的基本数据类型；（str,unicode,int,long,float,bool,None）时，当skipkey为False，就会报错，如果skipkey为True，则可以跳过这类key；</li><li>indent：如果填0或者不填，则按照一行进行打印，否则按照indent的数值显示前面的空格（正整数形式）；</li><li>separators：分隔符，默认为“(‘,’,’:’)”，它表示key之间用“,”隔开，key和value之间用“:”隔开；</li><li>encoding：编码格式，默认值是UTF-8；</li><li>sort_keys：对key、value进行排序，默认值是False，即不排序；</li><li>ensure_ascii：默认为True，如果dict对象里含有none-ASCII的字符，则显示\uXX的格式，如果为False，则能正常显示出来；</li></ul><h1 id="json-loads"><a href="#json-loads" class="headerlink" title="json.loads()"></a>json.loads()</h1><p>和dumps相反，loads函数则是将json格式的数据解码，转换为Python字典，我们看一下下面的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/5.jpg"><br>有时候，输出结果遇到中文的时候，会出现编码格式不一样的情况，显示出为Unicode的编码格式，使得不易读懂，解决办法是添加参数“encoding”参数，即上面的改写成这样：d1 = json.loads(data1,encoding=’utf-8’)即可。</p><h1 id="json-dump-和-json-load"><a href="#json-dump-和-json-load" class="headerlink" title="json.dump() 和 json.load()"></a>json.dump() 和 json.load()</h1><p>相对于上面所讲的dumps和loads来说，dump和load函数的功能类似，只不过前者是用来处理字符串类型的，而后者是用于处理文件类型的，如下所示：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/6.jpg"><br>上例列举出了json的四个方法：dumps（）和dump（）、loads（）和load（）的简单使用方法，可见，Python对于json的处理相当方便，不像c++那样（谁用谁知道）。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;Json（JavaScript Object Notation）它是一种轻量级的数据交换格式，具有数据格式简单，读写方便易懂等很多优点。许多主流的编程语言都在用它来进行前后端的数据传输，大大的简化了服务器和客户端的开发工作量。相对于XML来说，更加的轻量级，更方便解析，因此许多开发者都遵循Json格式来进行数据的传输和交换。今天我们详细介绍一下Python在Json的编解码方面的知识。&lt;a href=&quot;https://baijiahao.baidu.com/s?id=1608659655547720220&amp;amp;wfr=spider&amp;amp;for=pc&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;阅读原文&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="json" scheme="https://lruihao.cn/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>python发送post请求进行简单的接口测试</title>
    <link href="https://lruihao.cn/posts/posttest.html"/>
    <id>https://lruihao.cn/posts/posttest.html</id>
    <published>2019-05-07T10:17:05.000Z</published>
    <updated>2019-05-07T10:29:02.908Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>通过requests可以向某个地址发送请求，可以用来做一些接口的测试；主要有两个方法：</p><ul><li>requests.get()</li><li>requests.post()<br>最近帮朋友的项目做一个小需求，需要把后台数据定期打包发送到微信群，麻小科技涛哥给了我一个接口，post访问。</li></ul></div><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">通过requests可以向某个地址发送请求requests.post(url,json date)</span></span><br><span class="line"><span class="string">post方法还有其他参数，如header等</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># post发送的数据</span></span><br><span class="line">postData = &#123;</span><br><span class="line">    <span class="comment"># 'username':'test',</span></span><br><span class="line">    <span class="comment"># 'password':'123456',</span></span><br><span class="line">    <span class="comment"># 'salary':2000,</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接口这里不便公开</span></span><br><span class="line">r = requests.post(<span class="string">'http://demo.maxiaokeji.com/xx/xxxxx/xxxx'</span>,data=postData)</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line">response=r.json()</span><br><span class="line">print(response)</span><br></pre></td></tr></table></figure><p>运行后会在屏幕打印出返回的json数据<br><img src="/images/loading_img.gif" data-original="/posts/posttest/1.png" title="返回数据"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;通过requests可以向某个地址发送请求，可以用来做一些接口的测试；主要有两个方法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;requests.get()&lt;/li&gt;&lt;li&gt;requests.post()&lt;br&gt;最近帮朋友的项目做一个小需求，需要把后台数据定期打包发送到微信群，麻小科技涛哥给了我一个接口，post访问。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="post请求" scheme="https://lruihao.cn/tags/post%E8%AF%B7%E6%B1%82/"/>
    
      <category term="接口测试" scheme="https://lruihao.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>java通过URL和URLConnection访问网页资源</title>
    <link href="https://lruihao.cn/posts/urlreader.html"/>
    <id>https://lruihao.cn/posts/urlreader.html</id>
    <published>2019-05-06T09:41:35.000Z</published>
    <updated>2019-05-06T15:10:15.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>该例中首先生成一个URL对象lrh，指向RUI豪小栈，然后再调用lrh.openStream()方法生成该URL的一个输入流，这是一个字节流，在此基础上进一步通过InputStreamReader和BufferedReader构造一个带缓冲功能的字符流，并通过这个字符流对象读取该URL的html内容，进而输出到桌面文件和控制台屏幕。URLConnection类也可以用来对由URL引用的资源进行读写操作，前提是先通过connect()方法建立连接，然后再去获取响应头信息或响应内容。</p></div><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">URL lrh=<span class="keyword">new</span> URL(<span class="string">"https://www.lruihao.cn"</span>);</span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\lrh.html"</span>);</span><br><span class="line">FileWriter fout=<span class="keyword">new</span> FileWriter(file);</span><br><span class="line">BufferedReader in =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(lrh.openStream()));<span class="comment">//字节流转化成字符流，再构建缓冲字符流</span></span><br><span class="line">String inputLine;</span><br><span class="line"><span class="keyword">while</span>((inputLine=in.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(inputLine);</span><br><span class="line">fout.write(inputLine);</span><br><span class="line">&#125;</span><br><span class="line">in.close();</span><br><span class="line">fout.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取响应header信息</span></span><br><span class="line">URLConnection conn=lrh.openConnection();</span><br><span class="line">conn.connect();</span><br><span class="line">System.out.println(<span class="string">"获取到的响应长度："</span>+conn.getContentLength());</span><br><span class="line">System.out.println(<span class="string">"响应类型："</span>+conn.getContentType());</span><br><span class="line"></span><br><span class="line"><span class="comment">//用BufferedReader读取URL的响应</span></span><br><span class="line">in =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream()));</span><br><span class="line">String line;</span><br><span class="line">String result=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((line=in.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">result+=line;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;该例中首先生成一个URL对象lrh，指向RUI豪小栈，然后再调用lrh.openStream()方法生成该URL的一个输入流，这是一个字节流，在此基础上进一步通过InputStreamReader和BufferedReader构造一个带缓冲功能的字符流，并通过这个字符流对象读取该URL的html内容，进而输出到桌面文件和控制台屏幕。URLConnection类也可以用来对由URL引用的资源进行读写操作，前提是先通过connect()方法建立连接，然后再去获取响应头信息或响应内容。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="URL" scheme="https://lruihao.cn/tags/URL/"/>
    
      <category term="URLConnection" scheme="https://lruihao.cn/tags/URLConnection/"/>
    
  </entry>
  
  <entry>
    <title>文件加密解密（字节流）</title>
    <link href="https://lruihao.cn/posts/byteio.html"/>
    <id>https://lruihao.cn/posts/byteio.html</id>
    <published>2019-05-02T15:04:32.000Z</published>
    <updated>2019-05-02T15:24:46.576Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>基本功能： 给定一个密钥，读取文件内容，加密后，输出到另外一个文件。</p><p>这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。</p></div><a id="more"></a><h1 id="文件加密解密"><a href="#文件加密解密" class="headerlink" title="文件加密解密"></a>文件加密解密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncryptFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">byte</span> pwd=<span class="number">123</span>;<span class="comment">//加密/解密密码</span></span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/EncryptFile.java"</span>);<span class="comment">//待加密文件</span></span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"encrypted.txt"</span>);<span class="comment">//已加密文件</span></span><br><span class="line">System.out.println(<span class="string">"开始加密。。。"</span>);</span><br><span class="line"><span class="keyword">int</span> n=f.available()/<span class="number">5</span>;</span><br><span class="line"><span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[n];<span class="comment">//以一个字节数组的长度读取和复制</span></span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=f.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//写入之前先加密/解密</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;count;i++) &#123;</span><br><span class="line">b[i]=(<span class="keyword">byte</span>)(b[i]^pwd);<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">fout.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"完成加密"</span>);</span><br><span class="line">f.close();</span><br><span class="line">fout.close();</span><br><span class="line"><span class="comment">//f=new FileInputStream("encrypted.txt");</span></span><br><span class="line"><span class="comment">//fout=new FileOutputStream("unencrypted.txt");</span></span><br><span class="line"><span class="comment">//System.out.println("开始解密。。。");</span></span><br><span class="line"><span class="comment">//n=f.available()/5;</span></span><br><span class="line"><span class="comment">//b=new byte[n];//以一个字节数组的长度读取和复制</span></span><br><span class="line"><span class="comment">//count=0;</span></span><br><span class="line"><span class="comment">//while((count=f.read(b,0,n))!=-1) &#123;</span></span><br><span class="line"><span class="comment">////写入之前先加密/解密</span></span><br><span class="line"><span class="comment">//for(int i=0;i&lt;count;i++) &#123;</span></span><br><span class="line"><span class="comment">//b[i]=(byte)(b[i]^pwd);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//fout.write(b,0,count);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//System.out.println("完成解密");</span></span><br><span class="line"><span class="comment">//f.close();</span></span><br><span class="line"><span class="comment">//fout.close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文件复制"><a href="#文件复制" class="headerlink" title="文件复制"></a>文件复制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileStreamCopy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/FileStreamCopy.java"</span>);</span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"copy-of-file.txt"</span>);</span><br><span class="line">System.out.println(<span class="string">"总长度："</span>+(size=f.available()));</span><br><span class="line"><span class="keyword">int</span> n=size/<span class="number">10</span>;</span><br><span class="line">System.out.print(<span class="string">"使用单字节方法读取后："</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">fout.write(f.read());</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">System.out.println(<span class="string">"读取一个字节数组后："</span>);</span><br><span class="line"><span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[n];</span><br><span class="line">f.read(b);</span><br><span class="line">fout.write(b);</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">System.out.println(<span class="string">"读取余下数据："</span>);</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=f.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//System.out.println(count);</span></span><br><span class="line">fout.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">f.close();</span><br><span class="line">fout.flush();</span><br><span class="line">fout.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BufferedStreamCopy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/BufferedStreamCopy.java"</span>);</span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"copy-of-file.txt"</span>);</span><br><span class="line">BufferedInputStream bis=<span class="keyword">new</span> BufferedInputStream(f);</span><br><span class="line">BufferedOutputStream bos=<span class="keyword">new</span> BufferedOutputStream(fout);</span><br><span class="line">System.out.println(<span class="string">"开始复制。。。"</span>);</span><br><span class="line"><span class="keyword">int</span> n=f.available()/<span class="number">5</span>;</span><br><span class="line"><span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[n];</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=bis.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line">bos.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"复制完成"</span>);</span><br><span class="line">bis.close();</span><br><span class="line">bos.flush();</span><br><span class="line">bos.close();</span><br><span class="line">f.close();</span><br><span class="line">fout.flush();</span><br><span class="line">fout.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;基本功能： 给定一个密钥，读取文件内容，加密后，输出到另外一个文件。&lt;/p&gt;&lt;p&gt;这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="java字节流" scheme="https://lruihao.cn/tags/java%E5%AD%97%E8%8A%82%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>模拟借书系统（java异常练习）</title>
    <link href="https://lruihao.cn/posts/JavaException.html"/>
    <id>https://lruihao.cn/posts/JavaException.html</id>
    <published>2019-05-01T08:52:21.000Z</published>
    <updated>2019-05-27T14:43:52.710Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/images/loading_img.gif" data-original="/posts/JavaException/1.png" title="问题描述"><a id="more"></a><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><blockquote><p>这里的异常主要是<code>InputMismatchException</code>,可以直接捕获该异常，我直接捕获了父类异常。。。</p></blockquote><figure class="highlight java"><figcaption><span>ExceptionDemo.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 李瑞豪</span></span><br><span class="line"><span class="comment"> *借书系统(异常练习)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Book[] books = &#123;</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"数据结构"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"Java"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"php"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"c"</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"欢迎来到借书系统！"</span>);</span><br><span class="line">ExceptionDemo jieshu= <span class="keyword">new</span> ExceptionDemo();</span><br><span class="line">jieshu.menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"输入命令：1.书名查找；\t2.序号查找；"</span>);</span><br><span class="line"> <span class="comment">//初始化并捕获用户输入</span></span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">//捕获异常</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">int</span> id =sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(id==<span class="number">1</span>||id==<span class="number">2</span>) &#123;</span><br><span class="line">inquire(id);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"输入错误！请根据提示输入~~"</span>);<span class="comment">//输入非1，2的数字情况</span></span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;<span class="comment">//输入字符为非数字</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"输入错误，请输入数字命令~~"</span>);</span><br><span class="line">menu();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">sc.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inquire</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(id==<span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"请输入要查找的书名！"</span>);</span><br><span class="line">String name=sc.nextLine();</span><br><span class="line"><span class="keyword">int</span> num=FindName(name);</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">0</span>?<span class="keyword">false</span>:<span class="keyword">true</span>) &#123;<span class="comment">//验证书名是否存在 存在则打印</span></span><br><span class="line">System.out.println(<span class="string">"book："</span>+name+<span class="string">"\t序号："</span>+num);</span><br><span class="line"><span class="comment">//menu();//回到访问起点 也可以去掉终止程序</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"图书不存在"</span>);</span><br><span class="line">            menu();</span><br><span class="line">        &#125;</span><br><span class="line">sc.close();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(id == <span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"请输入您要查找的序号："</span>);</span><br><span class="line"><span class="keyword">int</span> id2=sc.nextInt();</span><br><span class="line">FindNum(id2);</span><br><span class="line">sc.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindNum</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(num&gt;=<span class="number">0</span>&amp;&amp;num&lt;books.length) &#123;</span><br><span class="line"> System.out.println(books[num].getName());</span><br><span class="line"> <span class="comment">//menu();//回到访问起点 也可以去掉终止程序</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"图书不存在"</span>);</span><br><span class="line">            menu();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"输入有误！~~"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">FindName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(Book i:books) &#123;</span><br><span class="line">String name1=i.getName();</span><br><span class="line"><span class="keyword">if</span>(name1.equals(name)) &#123;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>Book.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="大致运行效果"><a href="#大致运行效果" class="headerlink" title="大致运行效果"></a>大致运行效果</h1><img src="/images/loading_img.gif" data-original="/posts/JavaException/2.png" title="部分运行">]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/posts/JavaException/1.png&quot; title=&quot;问题描述&quot;&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>用MyQR制作专属动态二维码(py和exe版本)</title>
    <link href="https://lruihao.cn/posts/qrcode.html"/>
    <id>https://lruihao.cn/posts/qrcode.html</id>
    <published>2019-04-27T06:16:54.000Z</published>
    <updated>2019-04-27T07:05:59.106Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p><strong>Python 二维码生成器</strong>是github上@sylnsfar开源的一个python生成二维码工具。有python,网页及exe版本，详见<a href="https://github.com/sylnsfar/qrcode/" rel="external nofollow noopener noreferrer" target="_blank">sylnsfar/qrcode</a>，本文主要介绍记录一下python版本使用。exe可以去<a href="https://github.com/sylnsfar/qrcode_win" rel="external nofollow noopener noreferrer" target="_blank">项目开源地址</a>下载，公众号文章后台回复关键词“qrcode”获取链接。</p><p>可生成<em>普通二维码</em>、<em>带图片的艺术二维码（黑白与彩色）</em>、<em>动态二维码（黑白与彩色）</em>。</p></div><a id="more"></a><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="/images/loading_img.gif" data-original="/posts/qrcode/1.gif" style="float:left;width:30%"><img src="/images/loading_img.gif" data-original="/posts/qrcode/2.png" style="float:left;width:30%"></p><div style="clear:both"></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">version, level, qr_name = myqr.run(</span><br><span class="line">    words=<span class="string">'https://lruihao.cn'</span>,</span><br><span class="line">    version=<span class="number">1</span>,</span><br><span class="line">    level=<span class="string">'H'</span>,</span><br><span class="line">    picture=<span class="string">'2.jpg'</span>,</span><br><span class="line">    colorized=<span class="keyword">True</span>,</span><br><span class="line">    contrast=<span class="number">1.0</span>,</span><br><span class="line">    brightness=<span class="number">1.0</span>,</span><br><span class="line">    save_name=<span class="keyword">None</span>,</span><br><span class="line">    save_dir=os.getcwd()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help(myqr)</span></span><br><span class="line"><span class="comment"># https://github.com/sylnsfar/qrcode/</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Positional parameter</span></span><br><span class="line"><span class="string">   words: str # 链接或者文字</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Optional parameters</span></span><br><span class="line"><span class="string">   version: int, from 1 to 40  # 控制边长</span></span><br><span class="line"><span class="string">   level: str, just one of ('L','M','Q','H') # 控制纠错水平，从左到右依次升高。</span></span><br><span class="line"><span class="string">   picutre: str, a filename of a image # 图片，需在同路径,默认None</span></span><br><span class="line"><span class="string">   colorized: bool  # 是否彩色 默认False</span></span><br><span class="line"><span class="string">   constrast: float # 对比度 默认1.0</span></span><br><span class="line"><span class="string">   brightness: float # 亮度 默认1.0</span></span><br><span class="line"><span class="string">   save_name: str, the output filename like 'example.png' #控制文件名，默认None,'qrcode.png'</span></span><br><span class="line"><span class="string">   save_dir: str, the output directory # 储存路径</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 pip</span></span><br><span class="line">pip(<span class="number">3</span>) install myqr(<span class="keyword">or</span> MyQR)</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><p><em>（<strong>提示</strong>：如果你尚未安装 <a href="https://pypi.python.org/pypi/MyQR" rel="external nofollow noopener noreferrer" target="_blank"><strong>MyQR</strong></a> ，以下内容请使用<code>python(3) myqr.py</code> 而非<code>myqr</code> 。）</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 概括</span></span><br><span class="line">myqr Words</span><br><span class="line">[-v &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,...,<span class="number">40</span>&#125;]</span><br><span class="line">[-l &#123;L,M,Q,H&#125;]</span><br><span class="line">        [-n output-filename]</span><br><span class="line">[-d output-directory]</span><br><span class="line">[-p picture_file]</span><br><span class="line">[-c]</span><br><span class="line">[-con contrast]</span><br><span class="line">[-bri brightness]</span><br></pre></td></tr></table></figure><ul><li>普通二维码 介绍了 <code>Words</code>, <code>-v</code>, <code>-l</code>, <code>-n</code>, <code>-d</code></li><li>艺术二维码 介绍了 <code>-p</code>, <code>-c</code>, <code>-con</code>, <code>-bri</code></li><li>动态GIF二维码 介绍了动态的生成方法和注意点</li></ul><h4 id="普通二维码"><a href="#普通二维码" class="headerlink" title="普通二维码"></a>普通二维码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#1 Words</span></span><br><span class="line">myqr https://github.com</span><br></pre></td></tr></table></figure><ul><li>在命令后输入链接或者句子作为参数，然后在程序的当前目录中产生相应的二维码图片文件，默认命名为 “qrcode.png”。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#2 -v, -l</span></span><br><span class="line">myqr https://github.com -v 10 -l Q</span><br></pre></td></tr></table></figure><ul><li><p><strong>默认边长</strong>是取决于你输入的信息的长度和使用的纠错等级；</p><p>而<strong>默认纠错等级</strong>是最高级的H。</p></li><li><p><strong>自定义</strong>：如果想要控制边长和纠错水平就使用 <code>-v</code> 和 <code>-l</code> 参数。</p><p><code>-v</code> 控制边长，范围是<strong>1至40</strong>，数字越大边长越大；</p><p><code>-l</code> 控制纠错水平，范围是<strong>L、M、Q、H</strong>，从左到右依次升高。</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#3 -n, -d</span></span><br><span class="line">myqr https://github.com -n github_qr.jpg  -d .../paths/</span><br></pre></td></tr></table></figure><ul><li><p><strong>默认输出文件名</strong>是“ qrcode.png “，而<strong>默认存储位置</strong>是当前目录。</p></li><li><p>自定义：可以自己定义输出名称和位置。<strong>注意</strong>同名文件会覆盖旧的。</p><p><code>-n</code> 控制文件名，格式可以是 <code>.jpg</code>， <code>.png</code> ，<code>.bmp</code> ，<code>.gif</code> ；</p><p><code>-d</code> 控制位置。</p></li></ul><h4 id="艺术二维码"><a href="#艺术二维码" class="headerlink" title="艺术二维码"></a>艺术二维码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#1 -p</span></span><br><span class="line">myqr https://github.com -p github.jpg</span><br></pre></td></tr></table></figure><ul><li>参数<code>-p</code> 用来将QR二维码图像与一张同目录下的图片相结合，产生一张<strong>黑白</strong>图片。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#2 -c</span></span><br><span class="line">myqr https://github.com -p github.jpg -c</span><br></pre></td></tr></table></figure><ul><li>加上参数 <code>-c</code> 可以使产生的图片由黑白变为<strong>彩色</strong>的。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#3 -con, -bri</span></span><br><span class="line">myqr https://github.com -p github.jpg [-c] -con 1.5 -bri 1.6</span><br></pre></td></tr></table></figure><ul><li><p>参数<code>-con</code> 用以调节图片的<strong>对比度</strong>，1.0 表示原始图片，更小的值表示更低对比度，更大反之。<strong>默认为1.0</strong>。</p></li><li><p>参数 <code>-bri</code> 用来调节图片的<strong>亮度</strong>，其余用法和取值与 <code>-con</code> 相同。</p></li></ul><h4 id="动态GIF二维码"><a href="#动态GIF二维码" class="headerlink" title="动态GIF二维码"></a>动态GIF二维码</h4><p>动态二维码与上述的带图片的二维码的生成方法没什么区别，你只要采用 <code>.gif</code> 格式的图片即可生成黑白或者彩色的动态二维码。但<strong>注意</strong>如果使用了 <code>-n</code> 参数自定义输出的文件名，切记其格式也必须是 <code>.gif</code> 格式。</p><h3 id="作为导入文件"><a href="#作为导入文件" class="headerlink" title="作为导入文件"></a>作为导入文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装模块后</span></span><br><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line">version, level, qr_name = myqr.run(</span><br><span class="line">words,</span><br><span class="line">    version=<span class="number">1</span>,</span><br><span class="line">    level=<span class="string">'H'</span>,</span><br><span class="line">    picture=<span class="keyword">None</span>,</span><br><span class="line">    colorized=<span class="keyword">False</span>,</span><br><span class="line">    contrast=<span class="number">1.0</span>,</span><br><span class="line">    brightness=<span class="number">1.0</span>,</span><br><span class="line">    save_name=<span class="keyword">None</span>,</span><br><span class="line">    save_dir=os.getcwd()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><em>以下各个参数已经在<strong>上文命令行方式</strong>有所介绍</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># help(myqr)</span></span><br><span class="line">Positional parameter</span><br><span class="line">   words: str</span><br><span class="line"></span><br><span class="line">Optional parameters</span><br><span class="line">   version: int, <span class="keyword">from</span> <span class="number">1</span> to <span class="number">40</span></span><br><span class="line">   level: str, just one of (<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'Q'</span>,<span class="string">'H'</span>)</span><br><span class="line">   picutre: str, a filename of a image</span><br><span class="line">   colorized: bool</span><br><span class="line">   constrast: float</span><br><span class="line">   brightness: float</span><br><span class="line">   save_name: str, the output filename like <span class="string">'example.png'</span></span><br><span class="line">   save_dir: str, the output directory</span><br></pre></td></tr></table></figure><h2 id="使用提示"><a href="#使用提示" class="headerlink" title="使用提示"></a>使用提示</h2><ul><li><p>请采用<strong>正方形</strong>或近似正方形的图片</p></li><li><p>建议在图片尺寸大的时候使用 <code>-v</code> 的值也应该<strong>适当</strong>变大。</p></li></ul><h2 id="可用字符"><a href="#可用字符" class="headerlink" title="可用字符"></a>可用字符</h2><ul><li><p>数字 0 到 9</p></li><li><p>大小写的英文字母</p></li><li><p>常用<strong>英文标点符号</strong>和空格</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">· , . : ; + - * / \ ~ ! @ # $ % ^ &amp; ` ' = &lt; &gt; [ ] ( ) ? _ &#123; &#125; | and  (space)</span><br></pre></td></tr></table></figure></li></ul><h2 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h2><ul><li><a href="https://pypi.python.org/pypi/Pillow/3.3.1" rel="external nofollow noopener noreferrer" target="_blank">pillow</a></li><li><a href="https://pypi.python.org/pypi/numpy" rel="external nofollow noopener noreferrer" target="_blank">numpy</a></li><li><a href="https://pypi.python.org/pypi/imageio" rel="external nofollow noopener noreferrer" target="_blank">imageio</a></li></ul><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>Linux, Python 3</li><li>Windows, Python 3</li><li>Mac, Python 3</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;&lt;strong&gt;Python 二维码生成器&lt;/strong&gt;是github上@sylnsfar开源的一个python生成二维码工具。有python,网页及exe版本，详见&lt;a href=&quot;https://github.com/sylnsfar/qrcode/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;sylnsfar/qrcode&lt;/a&gt;，本文主要介绍记录一下python版本使用。exe可以去&lt;a href=&quot;https://github.com/sylnsfar/qrcode_win&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;项目开源地址&lt;/a&gt;下载，公众号文章后台回复关键词“qrcode”获取链接。&lt;/p&gt;&lt;p&gt;可生成&lt;em&gt;普通二维码&lt;/em&gt;、&lt;em&gt;带图片的艺术二维码（黑白与彩色）&lt;/em&gt;、&lt;em&gt;动态二维码（黑白与彩色）&lt;/em&gt;。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="pillow" scheme="https://lruihao.cn/tags/pillow/"/>
    
      <category term="numpy" scheme="https://lruihao.cn/tags/numpy/"/>
    
      <category term="imageio" scheme="https://lruihao.cn/tags/imageio/"/>
    
  </entry>
  
  <entry>
    <title>第一次面试经历</title>
    <link href="https://lruihao.cn/posts/1thintervivew.html"/>
    <id>https://lruihao.cn/posts/1thintervivew.html</id>
    <published>2019-04-24T13:23:22.000Z</published>
    <updated>2019-04-26T12:58:06.404Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote class="blockquote-center"><p>时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。</p></blockquote><a id="more"></a><div class="note info"><p>富士康在学校有一个春招的机会，我和朋友抱着侥幸的心理去试了试。<br>虽然深知自己还身有很多缺点，但是不面试不知道，一面试都暴露出来了，以下记录一下自己的不足之处：</p><ul><li>php和sql的经典组合虽然有所接触了解，但是确实什么都会，得花时间学</li><li>html/css等虽然平时折腾博客这些应用的比较多，但是今天竟然紧张地忘记了margin和padding都不会写了</li><li>如上一条，公众表现能力有待加强。正如当今“酒香也怕巷子深”，何况“不香”。</li></ul><p>惊喜的事说来就来，本来知道自己这么多缺点，这么菜后，觉得这个实习的offer是没戏了，没想到下午技术主管微信发来消息，说录用了。当场懵逼，受宠若惊的感觉！非常谢谢面试官老师！<br>无论生活还是学习，希望以后的自己一定要保持一颗谦逊爱学的心，早日实现全栈工程师的梦想，还有早点存钱把大学学费的贷款还掉！</p></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://lruihao.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="面试" scheme="https://lruihao.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
