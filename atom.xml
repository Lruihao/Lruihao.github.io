<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博採眾長</title>
  
  <subtitle>LRuihao&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lruihao.cn/"/>
  <updated>2019-05-25T02:26:51.980Z</updated>
  <id>https://lruihao.cn/</id>
  
  <author>
    <name>李瑞豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HustOJ 基础搭建教程</title>
    <link href="https://lruihao.cn/posts/hustoj.html"/>
    <id>https://lruihao.cn/posts/hustoj.html</id>
    <published>2019-05-17T15:08:04.000Z</published>
    <updated>2019-05-25T02:26:51.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>目前 HustOj 在 GitHUb 地址是：<a href="https://github.com/zhblue/hustoj" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/zhblue/hustoj</a><br><strong>安装时注意ubuntu版本</strong>，没条件的可以在自己ubuntu上尝试，或者虚拟机上（关注公众号回复<code>ubuntu16.04</code>获取iso镜像文件），也可以在云实验室的云服务器上做做实验。<br>更多说明及ACM/NOIP题库下载见官网博客<a href="http://www.hustoj.com/" rel="external nofollow noopener noreferrer" target="_blank">代码的那些事|程序员回忆录</a></p></div><a id="more"></a><h1 id="快速安装-OJ"><a href="#快速安装-OJ" class="headerlink" title="快速安装 OJ"></a>快速安装 OJ</h1><p>下载<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/zhblue/hustoj/master/trunk/install/install-ubuntu16+.sh</span><br></pre></td></tr></table></figure><p></p><p>安装<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash install-ubuntu16+.sh</span><br></pre></td></tr></table></figure><p></p><p>等待中一路回车，当提示 done！ 则表示安装成功：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/1.png"></p><h1 id="使用-HustOJ"><a href="#使用-HustOJ" class="headerlink" title="使用 HustOJ"></a>使用 HustOJ</h1><p>打开网页/IP地址<br>注册admin<br>用 admin 作为用户名注册一个用户，将会自动成为管理员。<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/2.png"><br>注册成功，会提示：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/3.png"><br>登录后台<br>登录账号，并点击右上角的管理：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/4.png"><br>添加测试题目<br>在后台选择添加题目，添加成功：<br><img src="/images/loading_img.gif" data-original="/posts/hustoj/5.png"><br>然后再提交代码测试判题机。</p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>安装后几个重要配置文件的位置<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/home/judge/etc/judge.conf</span><br><span class="line">/home/judge/src/web/include/db_info.inc.php</span><br><span class="line">/etc/php5/fpm/php.ini 或 /etc/php7.0/fpm/php.ini</span><br><span class="line">/etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;目前 HustOj 在 GitHUb 地址是：&lt;a href=&quot;https://github.com/zhblue/hustoj&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/zhblue/hustoj&lt;/a&gt;&lt;br&gt;&lt;strong&gt;安装时注意ubuntu版本&lt;/strong&gt;，没条件的可以在自己ubuntu上尝试，或者虚拟机上（关注公众号回复&lt;code&gt;ubuntu16.04&lt;/code&gt;获取iso镜像文件），也可以在云实验室的云服务器上做做实验。&lt;br&gt;更多说明及ACM/NOIP题库下载见官网博客&lt;a href=&quot;http://www.hustoj.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;代码的那些事|程序员回忆录&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="ACM" scheme="https://lruihao.cn/tags/ACM/"/>
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="hustoj" scheme="https://lruihao.cn/tags/hustoj/"/>
    
      <category term="ubuntu" scheme="https://lruihao.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板安装ImgURL图床</title>
    <link href="https://lruihao.cn/posts/imgurl.html"/>
    <id>https://lruihao.cn/posts/imgurl.html</id>
    <published>2019-05-16T12:31:33.000Z</published>
    <updated>2019-05-20T14:47:37.670Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/images/loading_img.gif" data-original="/posts/imgurl/1.png"><div class="note success no-icon"><p>ImgURL是一个开源、免费的图床程序，ImgURL 2.x之后对环境要求更高，尤其是ImageMagick组件的支持，很多朋友不清楚怎样安装这个组件，这篇文章分享宝塔面板安装ImgURL 2.x图床的过程（包括ImgURL 2.x需要的各种组件）<br><a href="https://img.lruihao.cn" rel="external nofollow noopener noreferrer" target="_blank">图床预览</a> <a href="https://www.xiaoz.me/archives/12081" rel="external nofollow noopener noreferrer" target="_blank">阅读原文</a></p></div><a id="more"></a><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>已经安装宝塔面板</li><li>在宝塔后台创建一个站点</li><li>下载<a href="https://github.com/helloxz/imgurl" rel="external nofollow noopener noreferrer" target="_blank">ImgURL 2.x</a>上传到站点根目录并解压</li></ol><h1 id="设置伪静态"><a href="#设置伪静态" class="headerlink" title="设置伪静态"></a>设置伪静态</h1><p>如果您宝塔面板安装的Apache则不需要再设置伪静态，直接跳过这个步骤，如果使用的Nginx环境，请继续往下看。</p><p>找到对应的站点 - 点击后面设置按钮 - 伪静态 - 添加下面的伪静态规则<br></p><figure class="highlight php"><figcaption><span>伪静态规则</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(db3|json)$ &#123;</span><br><span class="line">  deny all;</span><br><span class="line">&#125;</span><br><span class="line">location ~* ^/(temp|upload|imgs|data|application|<span class="keyword">static</span>|system)/.*.(php|php5)$ &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/imgurl/2.png"><h1 id="安装fileinfo-amp-imagemagick"><a href="#安装fileinfo-amp-imagemagick" class="headerlink" title="安装fileinfo &amp; imagemagick"></a>安装fileinfo &amp; imagemagick</h1><p>在宝塔后台 - 软件管理 - 找到您站点对应的PHP版本 - 设置PHP - 安装扩展 - 勾选<code>fileinfo</code>和<code>imagemagick</code>，如下截图。<br><img src="/images/loading_img.gif" data-original="/posts/imgurl/3.png"></p><h1 id="安装ImgURL-2-x"><a href="#安装ImgURL-2-x" class="headerlink" title="安装ImgURL 2.x"></a>安装ImgURL 2.x</h1><p>其它所需扩展宝塔默认已经支持，重点是安装<code>fileinfo</code>和<code>imagemagick</code>，扩展安装完毕后就可以访问您自己的域名安装ImgURL了，如果正常会看到ImgURL安装界面。<br><img src="/images/loading_img.gif" data-original="/posts/imgurl/4.png"><br><img src="/images/loading_img.gif" data-original="/posts/imgurl/5.png"></p><h1 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h1><ul><li>如果安装遇到任何问题，请留言反馈或到<a href="https://ttt.sh/category/6/imgurl%E5%9B%BE%E5%BA%8A" rel="external nofollow noopener noreferrer" target="_blank">3T官方社区</a>进行反馈</li><li>ImgURL更多使用说明请参考帮助文档：<a href="https://dwz.ovh/imgurldoc" rel="external nofollow noopener noreferrer" target="_blank">https://dwz.ovh/imgurldoc</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/posts/imgurl/1.png&quot;&gt;&lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;ImgURL是一个开源、免费的图床程序，ImgURL 2.x之后对环境要求更高，尤其是ImageMagick组件的支持，很多朋友不清楚怎样安装这个组件，这篇文章分享宝塔面板安装ImgURL 2.x图床的过程（包括ImgURL 2.x需要的各种组件）&lt;br&gt;&lt;a href=&quot;https://img.lruihao.cn&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;图床预览&lt;/a&gt; &lt;a href=&quot;https://www.xiaoz.me/archives/12081&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;阅读原文&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="宝塔面板" scheme="https://lruihao.cn/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="开源图床" scheme="https://lruihao.cn/tags/%E5%BC%80%E6%BA%90%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="imgurl" scheme="https://lruihao.cn/tags/imgurl/"/>
    
  </entry>
  
  <entry>
    <title>python实战：模拟post请求定时获取后台数据并打包发送至微信</title>
    <link href="https://lruihao.cn/posts/mx2wx.html"/>
    <id>https://lruihao.cn/posts/mx2wx.html</id>
    <published>2019-05-11T09:02:31.000Z</published>
    <updated>2019-05-17T03:53:36.846Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary no-icon"><p>用python模拟post请求获取“麻小科技”示例酒店后台的数据，再打包发送至指定的微信群或者好友。<br>要求每天早上8点定时把每个酒店的数据发送至每个酒店的微信工作群。</p></div><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>麻小科技：<br>麻小科技全名深圳市麻小科技有限公司，成立于2017年1月。是我高一的时候参加<code>Peer夏令营</code>带我们一个玩的“老师”和他的朋友的创业公司，说老师有点奇怪，我们都是直接叫名字的，比如大家都叫我瑞豪，我也就叫他文捷哥，简称捷哥吧。他们公司主要的开发模式是，小程序前端+php后端，然后做的是酒店小程序，为每个酒店定制小程序。这些小程序可以贴在客房中给访客提供一些服务，大大节省了成本也提高了效率。<br>然后每个酒店小程序都有独立的后台，后台会记录一些点击需求的数据。现在他们有一个需求需要把每个酒店小程序后台的数据在每天早上9点发送至对应酒店的微信群。</p></blockquote><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><blockquote><p>缓存登录信息，短时间类无需重复登录，仅第一次需要扫码登录（相当于微信网页版），后面的登录只需在手机上确认登录信息。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本信息填写：</span></span><br><span class="line"><span class="comment"># 酒店id，酒店名称及群名列表数据，格式：["xxx","xxx","xxx"]</span></span><br><span class="line"><span class="comment"># 使用时请将以下三个列表一一对应</span></span><br><span class="line">hotel=[<span class="string">"xxxx"</span>,<span class="string">"xxxx"</span>] <span class="comment"># 酒店后台数据接口二级域名，已匿名</span></span><br><span class="line">hotel_name=[<span class="string">"增城宾馆"</span>,<span class="string">"百丽酒店"</span>]</span><br><span class="line">grouplist = [<span class="string">"麻小"</span>,<span class="string">"富强民主文明和谐自由平等公正法治"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># post请求发送的数据</span></span><br><span class="line">postData = &#123;</span><br><span class="line">    <span class="comment"># 'username':'test',</span></span><br><span class="line">    <span class="comment"># 'password':'123456',</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">()</span>:</span></span><br><span class="line">result = [] <span class="comment">#结果列表</span></span><br><span class="line">i = <span class="number">0</span> <span class="comment">#计数器</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> hotel:</span><br><span class="line">url=<span class="string">"http://"</span>+each+<span class="string">".maxiaokeji.com/xxx/xxxxxxx/xxx"</span> <span class="comment"># 为保护隐私及权益，这里不提供接口</span></span><br><span class="line">r = requests.post(url,data=postData)</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把结果转化为json字符串</span></span><br><span class="line">response=json.dumps(r.json(),indent=<span class="number">4</span>,ensure_ascii=<span class="keyword">False</span>) <span class="comment">#sort_keys=True </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把json转换为dict字典作为中间结果，再取出昨日数据</span></span><br><span class="line">midresult=json.loads(response)</span><br><span class="line">result.append(<span class="string">"早上好！"</span>+hotel_name[i]+<span class="string">"小程序昨日数据如下：\n访问数："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type1"</span>])+<span class="string">"\n房间数："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type2"</span>])+<span class="string">"\n需求量："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type3"</span>])+<span class="string">"\n商品点击量："</span>+str(midresult[<span class="string">"data"</span>][<span class="string">"yesterday_data"</span>][<span class="string">"type4"</span>]))</span><br><span class="line">i+=<span class="number">1</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat_send</span><span class="params">(bot,result)</span>:</span></span><br><span class="line"><span class="comment"># my_friend = bot.friends().search('lrh')[0]</span></span><br><span class="line"><span class="comment"># my_friend.send(result)</span></span><br><span class="line">i = <span class="number">0</span> <span class="comment"># 计数器</span></span><br><span class="line"><span class="keyword">for</span> group <span class="keyword">in</span> grouplist:</span><br><span class="line">my_group = bot.groups().search(group)[<span class="number">0</span>] <span class="comment">#依次搜索每一个群名称，每次一个</span></span><br><span class="line">my_group.send(result[i])</span><br><span class="line">print(result[i])</span><br><span class="line">print(<span class="string">"已发送至群："</span>+group)</span><br><span class="line">i+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(bot)</span>:</span></span><br><span class="line"><span class="comment"># 设置最大休眠时间，防止程序长时间占用系统资源</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">now_hour = time.strftime(<span class="string">"%H"</span>, time.localtime())</span><br><span class="line">now_min = time.strftime(<span class="string">"%M"</span>, time.localtime())</span><br><span class="line"><span class="comment"># 设置每天8点发送</span></span><br><span class="line"><span class="keyword">if</span> now_hour &lt; <span class="string">"08"</span>:</span><br><span class="line">rest = <span class="number">8</span> - int(now_hour)</span><br><span class="line">sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">time.sleep(sleeptime)</span><br><span class="line"><span class="keyword">elif</span> now_hour &gt; <span class="string">"08"</span>:</span><br><span class="line">rest = <span class="number">8</span> - int(now_hour) + <span class="number">24</span></span><br><span class="line">sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">time.sleep(sleeptime)</span><br><span class="line"><span class="keyword">elif</span> now_hour == <span class="string">"08"</span>:</span><br><span class="line">print(<span class="string">"软件明天开始将在每天8点发送数据！"</span>)</span><br><span class="line">result=get_data() <span class="comment"># 获取数据</span></span><br><span class="line">wechat_send(bot,result) <span class="comment"># 发送数据</span></span><br><span class="line">time.sleep(<span class="number">86400</span>-int(now_min)*<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">bot = Bot(cache_path=<span class="keyword">True</span>) <span class="comment"># 初始化机器人，扫码登陆 </span></span><br><span class="line">main(bot);</span><br></pre></td></tr></table></figure><h1 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h1><p><img src="/images/loading_img.gif" data-original="/posts/mx2wx/1.jpg" width="400px"></p><img src="/images/loading_img.gif" data-original="/posts/mx2wx/2.png"> <img src="/images/loading_img.gif" data-original="/posts/mx2wx/3.png"><h1 id="程序打包"><a href="#程序打包" class="headerlink" title="程序打包"></a>程序打包</h1><p>使用pyinstaller工具打包成可执行文件即可。（可执行文件不可跨平台运行，分平台打包）</p><blockquote><p>目前该程序已经上线测试中…暂未反馈问题</p></blockquote><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><div class="note success no-icon"><p>第一次参与实际公司的项目开发，虽然只是一个小的需求设计，但是我在这个过程中也学到了很多，比如通过实际一两周的编程对Python的熟悉度远远好过以前在实验室看的一个月视频。<br>还有就是在此次开发中，也感受到了实际项目开发的团队合作重要性，刚开始拿到这个需求，由于我对python和后台，以及数据接口这些基本的操作都不懂，就拿数据获取来说，我一开始一位要自己模拟登陆后台（已知密码），一顿操作、百度等等失败告终，后来涛哥给了一个数据接口，加上涛哥耐心指点，我才终于拿到了数据。<br>还有在多人合作的项目中，为保持代码的可读性，要尽量的多些注释，还有函数方法的命名尽量具备可读性。比如我代码中的<code>wechat_send()</code>，一开始的命名是<code>wxfs()</code>，经捷哥指正我才改过来的。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary no-icon&quot;&gt;&lt;p&gt;用python模拟post请求获取“麻小科技”示例酒店后台的数据，再打包发送至指定的微信群或者好友。&lt;br&gt;要求每天早上8点定时把每个酒店的数据发送至每个酒店的微信工作群。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="json" scheme="https://lruihao.cn/tags/json/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pyinstaller" scheme="https://lruihao.cn/tags/pyinstaller/"/>
    
      <category term="post" scheme="https://lruihao.cn/tags/post/"/>
    
      <category term="定时任务" scheme="https://lruihao.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
      <category term="requests" scheme="https://lruihao.cn/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>条件注释判断浏览器版本&amp;lt;!--[if lt IE 9]&amp;gt;</title>
    <link href="https://lruihao.cn/posts/ifzhushi.html"/>
    <id>https://lruihao.cn/posts/ifzhushi.html</id>
    <published>2019-05-10T05:08:27.000Z</published>
    <updated>2019-05-10T05:30:48.842Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p><span>&lt;!–[if !IE]&gt;&lt;!–&gt; 除IE外都可识别 &lt;!–&lt;![endif]–&gt;</span><br><span>&lt;!–[if IE]&gt; 所有的IE可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 6]&gt; 仅IE6可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 7]&gt; 仅IE7可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if gte IE 7]&gt; IE7以及IE7以上版本可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 8]&gt; 仅IE8可识别 &lt;![endif]–&gt;</span><br><span>&lt;!–[if IE 9]&gt; 仅IE9可识别 &lt;![endif]–&gt;</span></p></div><a id="more"></a><table border="2" align="center"><tbody><tr><th width="50">项目</th><th width="150">范例</th><th>说明</th></tr><tr><td align="middle">!</td><td>[if !IE]</td><td>The NOT operator. This is placed immediately in front of the&nbsp;<em>feature</em>,&nbsp;<em>operator</em>, or&nbsp;<em>subexpression</em>&nbsp;to reverse the Boolean meaning of the expression.<br>NOT运算符。这是摆立即在前面的<em>功能</em>，<em>操作员</em>，或<em>子表达式</em>扭转布尔表达式的意义。</td></tr><tr><td align="middle">lt</td><td>[if lt IE 5.5]</td><td>The less-than operator. Returns true if the first argument is less than the second argument.<br>小于运算符。如果第一个参数小于第二个参数，则返回true。</td></tr><tr><td align="middle">lte</td><td>[if lte IE 6]</td><td>The less-than or equal operator. Returns true if the first argument is less than or equal to the second argument.<br>小于或等于运算。如果第一个参数是小于或等于第二个参数，则返回true。</td></tr><tr><td align="middle">gt</td><td>[if gt IE 5]</td><td>The greater-than operator. Returns true if the first argument is greater than the second argument.<br>大于运算符。如果第一个参数大于第二个参数，则返回true。</td></tr><tr><td align="middle">gte</td><td>[if gte IE 7]</td><td>The greater-than or equal operator. Returns true if the first argument is greater than or equal to the second argument.<br>大于或等于运算。如果第一个参数是大于或等于第二个参数，则返回true。</td></tr><tr><td align="middle">( )</td><td>[if !(IE 7)]</td><td>Subexpression operators. Used in conjunction with boolean operators to create more complex expressions.<br>子表达式运营商。在与布尔运算符用于创建更复杂的表达式。</td></tr><tr><td align="middle">&amp;</td><td>[if (gt IE 5)&amp;(lt IE 7)]</td><td>The AND operator. Returns true if all subexpressions evaluate to true<br>AND运算符。如果所有的子表达式计算结果为true，返回true</td></tr><tr><td align="middle">|</td><td>[if (IE 6)|(IE 7)]</td><td>The OR operator. Returns true if any of the subexpressions evaluates to true.<br>OR运算符。返回true，如果子表达式计算结果为true。</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">加载CSS1</span></span><br><span class="line"><span class="comment">&lt;!--[else]&gt;</span></span><br><span class="line"><span class="comment">加载CSS2</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p>这样有效是有效,但是用HTML VALIDATOR里,报错,因为这个不符合XHTML 1.1的规范,<br>如果把ELSE语句去掉,则正确.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加载CSS2</span><br><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">加载CSS1(可以把要重写的写在这里).</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;&lt;span&gt;&amp;lt;!–[if !IE]&amp;gt;&amp;lt;!–&amp;gt; 除IE外都可识别 &amp;lt;!–&amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE]&amp;gt; 所有的IE可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 6]&amp;gt; 仅IE6可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if lt IE 6]&amp;gt; IE6以及IE6以下版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if gte IE 6]&amp;gt; IE6以及IE6以上版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 7]&amp;gt; 仅IE7可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if lt IE 7]&amp;gt; IE7以及IE7以下版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if gte IE 7]&amp;gt; IE7以及IE7以上版本可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 8]&amp;gt; 仅IE8可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;lt;!–[if IE 9]&amp;gt; 仅IE9可识别 &amp;lt;![endif]–&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>python设置程序每天8点定时执行任务</title>
    <link href="https://lruihao.cn/posts/pysettime.html"/>
    <id>https://lruihao.cn/posts/pysettime.html</id>
    <published>2019-05-09T15:26:54.000Z</published>
    <updated>2019-05-17T03:52:43.527Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>第一次运行根据程序执行时间，判断程序休眠的时间，尽最大可能休眠，节省系统资源。<br>第二次运行后直接休眠一天，到每天早上8点执行任务。<br>（该程序需要一直挂着，保持网络不断）</p></div><a id="more"></a><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    now_hour = time.strftime(<span class="string">"%H"</span>, time.localtime())</span><br><span class="line">    now_min = time.strftime(<span class="string">"%M"</span>, time.localtime())</span><br><span class="line">    <span class="keyword">if</span> now_hour &lt; <span class="string">"08"</span>:</span><br><span class="line">        rest = <span class="number">8</span> - int(now_hour)</span><br><span class="line">        sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">        time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour &gt; <span class="string">"08"</span>:</span><br><span class="line">        rest = <span class="number">8</span> - int(now_hour) + <span class="number">24</span></span><br><span class="line">        sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t软件将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后发送数据"</span>)</span><br><span class="line">        time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour == <span class="string">"08"</span>:</span><br><span class="line">        print(<span class="string">"启动时北京时间为："</span> + time.strftime(<span class="string">"%H:%M"</span>, time.localtime()), <span class="string">"\t软件将在每天8点发送数据！"</span>)</span><br><span class="line">        <span class="comment"># 以下为定时任务</span></span><br><span class="line">        print(<span class="string">"数据"</span>)</span><br><span class="line">        time.sleep(<span class="number">86400</span>-int(now_min)*<span class="number">60</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;第一次运行根据程序执行时间，判断程序休眠的时间，尽最大可能休眠，节省系统资源。&lt;br&gt;第二次运行后直接休眠一天，到每天早上8点执行任务。&lt;br&gt;（该程序需要一直挂着，保持网络不断）&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="定时任务" scheme="https://lruihao.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>安装pyinstaller出错的解决办法及csdn工具实例打包</title>
    <link href="https://lruihao.cn/posts/pyinstallererror.html"/>
    <id>https://lruihao.cn/posts/pyinstallererror.html</id>
    <published>2019-05-09T11:05:01.000Z</published>
    <updated>2019-05-12T15:13:44.730Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>用过命令<code>pip install pyinstaller</code>安装失败，此包依赖于pywin32，安装前需要先<code>pip install pywin32</code>,我安装了还是出错，稍微百度了一下也没有看到解决办法。<br>这里通过手动下载安装解决的，记录一下。</p></div><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>去官网下载pyinstaller安装包：<a href="https://pypi.org/project/PyInstaller/#files" rel="external nofollow noopener noreferrer" target="_blank">https://pypi.org/project/PyInstaller/#files</a></p><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><p>我这里解压到<code>E:\应用\Python37\Lib\site-packages\PyInstaller-3.4</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>cmd也进入到上面的路径下，然后执行<code>Python setup.py install</code>，等待安装完毕<br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/1.png" title="安装"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/2.png" title="完成"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/3.png" title="pip list"><br><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/4.png" title="版本"></p><h1 id="pyinstaller简介"><a href="#pyinstaller简介" class="headerlink" title="pyinstaller简介"></a>pyinstaller简介</h1><p>pyinstaller将Python脚本打包成可执行程序，使在没有Python环境的机器上运行。</p><p>最新版是pyinstaller 3.4，可运行在Windows，Mac和Linux操作系统下。 但它不是跨编译的，也就是说在Windows下用PyInstaller生成的exe只能运行在Windows下，在Linux下生成的只能运行在Linux下。</p><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>打包的app里并不包含任何源码，但将脚本的.pyc文件打包了。</p><p>基本语法： <code>pyinstaller options myscript.py</code></p><blockquote><p>常用的可选参数如下：<br><code>--onefile</code> 将结果打包成一个可执行文件<br><code>--onedir</code> 将所有结果打包到一个文件夹中，该文件夹包括一个可执行文件和可执行文件执行时需要的依赖文件（默认）<br><code>--paths=DIR</code> 设置导入路径<br><code>--distpath=DIR</code> 设置将打包的结果文件放置的路径<br><code>--specpath=DIR</code> 设置将spec文件放置的路径<br><code>--windowed</code> 使用windows子系统执行，不会打开命令行（只对windows有效）<br><code>--nowindowed</code> 使用控制台子系统执行（默认）（只对windows有效）<br><code>--icon=&lt;FILE.ICO&gt;</code> 将file.ico添加为可执行文件的资源(只对windows有效）</p></blockquote><p>如<code>pyinstaller --paths=&quot;D:\&quot; test.py</code></p><h1 id="CSDN访问量脚本实例"><a href="#CSDN访问量脚本实例" class="headerlink" title="CSDN访问量脚本实例"></a>CSDN访问量脚本实例</h1><p>比如，拿以前写的一个刷csdn访问量工具csdn.py（放在桌面上），代码如下<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">__author__ = <span class="string">'lruihao.cn'</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">opener = urllib.request.build_opener()</span><br><span class="line">opener.addheaders = [(<span class="string">'User-agent'</span>,</span><br><span class="line">                      <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_article_url</span><span class="params">(page,name)</span>:</span></span><br><span class="line">    endurl = <span class="string">"/"</span>+name+<span class="string">"/article/details/........"</span></span><br><span class="line">    print(name)</span><br><span class="line">    p = re.compile(endurl)</span><br><span class="line">    url = <span class="string">"http://blog.csdn.net/"</span>+name+<span class="string">"/article/list/"</span>+str(page)</span><br><span class="line">    <span class="comment"># 使用build_opener()是为了让python程序模仿浏览器进行访问</span></span><br><span class="line">    html = opener.open(url).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    allfinds = p.findall(html)</span><br><span class="line">    <span class="keyword">return</span> allfinds</span><br><span class="line">    <span class="comment">#print('allfinds',allfinds)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_do</span><span class="params">(allfinds)</span>:</span></span><br><span class="line">    urlBase = <span class="string">"http://blog.csdn.net"</span>  <span class="comment"># 需要将网址合并的部分</span></span><br><span class="line">    <span class="comment"># 页面中的网址有重复的，需要使用set进行去重复</span></span><br><span class="line">    mypages = list(set(allfinds))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(mypages)):</span><br><span class="line">        mypages[i] = urlBase + mypages[i]</span><br><span class="line">    print(<span class="string">'要刷的网页有：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        print(str(index), page)</span><br><span class="line">    <span class="comment"># 设置每个网页要刷的次数</span></span><br><span class="line">    brushNum = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 所有的页面都刷</span></span><br><span class="line">    print(<span class="string">'下面开始刷了哦：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(brushNum):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pageContent = opener.open(page).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="comment"># 使用BeautifulSoup解析每篇博客的标题</span></span><br><span class="line">                soup = BeautifulSoup(pageContent)</span><br><span class="line">                blogTitle = str(soup.title.string)</span><br><span class="line">                blogTitle = blogTitle[<span class="number">0</span>:blogTitle.find(<span class="string">'-'</span>)]</span><br><span class="line">                print(str(j), blogTitle)</span><br><span class="line">            <span class="keyword">except</span> urllib.error.HTTPError:</span><br><span class="line">                print(<span class="string">'urllib.error.HTTPError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">            <span class="keyword">except</span> urllib.error.URLError:</span><br><span class="line">                print(<span class="string">'urllib.error.URLError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">                time.sleep(<span class="number">0.5</span>)  <span class="comment"># 正常停顿，以免服务器拒绝访问</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        print(<span class="string">"************第"</span>+str(page)+<span class="string">"页*************"</span>)</span><br><span class="line">        endurl = get_article_url(page,name)</span><br><span class="line">        start_do(endurl)</span><br><span class="line">    print(<span class="string">"开始休息"</span>)</span><br><span class="line">    time.sleep(<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">name = input(<span class="string">"输入你的csdn用户名："</span>)</span><br><span class="line"><span class="keyword">if</span> name==<span class="string">""</span>:</span><br><span class="line">name = <span class="string">"qq_39520417"</span> <span class="comment">#cheung99857</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">main(name)</span><br></pre></td></tr></table></figure><p></p><p>在cmd进入桌面路径，输入如下命令<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller --onefile --nowindowed csdn.py</span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/5.png" title="csdn.exe生成成功"> <img src="/images/loading_img.gif" data-original="/posts/pyinstallererror/6.png" title="csdn.exe生成成功"><p>另外推广一下自己的微信公众号，欢迎关注公众号👇👇👇，后台回复关键词<code>csdn_visiter</code>获取源码及exe可执行文件。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;用过命令&lt;code&gt;pip install pyinstaller&lt;/code&gt;安装失败，此包依赖于pywin32，安装前需要先&lt;code&gt;pip install pywin32&lt;/code&gt;,我安装了还是出错，稍微百度了一下也没有看到解决办法。&lt;br&gt;这里通过手动下载安装解决的，记录一下。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="pyinstaller" scheme="https://lruihao.cn/tags/pyinstaller/"/>
    
  </entry>
  
  <entry>
    <title>java实现一个单线程的资源下载器</title>
    <link href="https://lruihao.cn/posts/SingleThreadDown.html"/>
    <id>https://lruihao.cn/posts/SingleThreadDown.html</id>
    <published>2019-05-08T12:55:02.000Z</published>
    <updated>2019-05-08T13:25:56.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success"><p>实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。</p></div><a id="more"></a><h1 id="GUI设计基本流程"><a href="#GUI设计基本流程" class="headerlink" title="GUI设计基本流程"></a>GUI设计基本流程</h1><p>先记录一下GUI设计的基本流程：</p><ol><li>根据需要从相应的顶层容器继承（如果创建窗体就继承JFrame，对话框就继承JDialog），新建一个子类。</li><li>然后设置顶层容器的属性，包括大小、位置、标题和关闭事件等。</li><li>设置界面上GUI组件的事件响应。 <code>public void actionPerformed(ActionEvent e) {}</code></li><li>向顶层容器上添加GUI组件，并设置布局。（通常利用JPanel组件先作为微型容器）</li><li>创建新建子类的实例，调用setVisible(true)方法显示页面。（也可以直接在子类中设置setVisible(true)）</li></ol><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.HeadlessException;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleThreadDown</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JLabel label1=<span class="keyword">new</span> JLabel(<span class="string">"网络资源的单线程下载："</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> JLabel label2=<span class="keyword">new</span> JLabel(<span class="string">"网络资源的网址："</span>);</span><br><span class="line">JButton StartButton = <span class="keyword">new</span> JButton(<span class="string">"单击开始下载"</span>);</span><br><span class="line">JButton resetButton = <span class="keyword">new</span> JButton(<span class="string">"清空"</span>);</span><br><span class="line">JButton exitButton = <span class="keyword">new</span> JButton(<span class="string">"退出"</span>);</span><br><span class="line">JTextField urlField  = <span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SingleThreadDown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">panel.setLayout(<span class="keyword">new</span> FlowLayout()); <span class="comment">//布局管理器</span></span><br><span class="line">label1.setFont(<span class="keyword">new</span> Font(<span class="string">"雅黑"</span>,Font.BOLD,<span class="number">15</span>));</span><br><span class="line">panel.add(label1);</span><br><span class="line">panel.add(label2);</span><br><span class="line">panel.add(urlField);</span><br><span class="line">panel.add(StartButton);</span><br><span class="line">panel.add(resetButton);</span><br><span class="line">panel.add(exitButton);</span><br><span class="line">setContentPane(panel);</span><br><span class="line">setSize(<span class="number">400</span>,<span class="number">200</span>);</span><br><span class="line">setLocation(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">setVisible(<span class="keyword">true</span>); <span class="comment">//面板可视化，也可以在main中通过JFrame子类对象调用方法设置</span></span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); <span class="comment">//默认关闭事件</span></span><br><span class="line">StartButton.addActionListener(<span class="keyword">this</span>);<span class="comment">//添加点击事件，传入ActionListener对象，由于子类继承了ActionListener接口，所以this</span></span><br><span class="line">resetButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">exitButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String address)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">URLConnection urlcon = url.openConnection();</span><br><span class="line">urlcon.connect();</span><br><span class="line">InputStream in=urlcon.getInputStream();<span class="comment">//获取的字节流对象</span></span><br><span class="line">String filePath = url.getFile();</span><br><span class="line"><span class="keyword">int</span> pos=filePath.lastIndexOf(<span class="string">"/"</span>); <span class="comment">//"/"分割的最后一个串的下标</span></span><br><span class="line">String fileName = filePath.substring(pos+<span class="number">1</span>);</span><br><span class="line">FileOutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\"</span>+fileName);</span><br><span class="line"><span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((len=in.read(b,<span class="number">0</span>,<span class="number">1024</span>))!=-<span class="number">1</span>) &#123;</span><br><span class="line">out.write(b,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line">out.close();</span><br><span class="line">in.close();</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"下载完毕"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==StartButton) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(urlField.getText()))&#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"请输入资源地址"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String url = urlField.getText();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">download(url);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"资源地址有误，请检查~"</span>);</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e.getSource()==resetButton) &#123;</span><br><span class="line">urlField.setText(<span class="string">""</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> SingleThreadDown();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果测试"><a href="#运行结果测试" class="headerlink" title="运行结果测试"></a>运行结果测试</h1><p>通过<code>https://github.com/Lruihao/Grocery/raw/master/fonts/MMT_last.ttf</code>下载沐目体ttf字体文件，稍微等待一下弹出对话框“下载完毕”，经检查下载内容正常。<br><img src="/images/loading_img.gif" data-original="/posts/SingleThreadDown/1.png" title="运行效果"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;&lt;p&gt;实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="GUI" scheme="https://lruihao.cn/tags/GUI/"/>
    
      <category term="URL" scheme="https://lruihao.cn/tags/URL/"/>
    
      <category term="URLConnection" scheme="https://lruihao.cn/tags/URLConnection/"/>
    
  </entry>
  
  <entry>
    <title>Python如何操作Json？</title>
    <link href="https://lruihao.cn/posts/jsoninfo.html"/>
    <id>https://lruihao.cn/posts/jsoninfo.html</id>
    <published>2019-05-07T10:42:47.000Z</published>
    <updated>2019-05-10T05:10:44.004Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>Json（JavaScript Object Notation）它是一种轻量级的数据交换格式，具有数据格式简单，读写方便易懂等很多优点。许多主流的编程语言都在用它来进行前后端的数据传输，大大的简化了服务器和客户端的开发工作量。相对于XML来说，更加的轻量级，更方便解析，因此许多开发者都遵循Json格式来进行数据的传输和交换。今天我们详细介绍一下Python在Json的编解码方面的知识。<a href="https://baijiahao.baidu.com/s?id=1608659655547720220&amp;wfr=spider&amp;for=pc" rel="external nofollow noopener noreferrer" target="_blank">阅读原文</a></p></div><a id="more"></a><h1 id="json的数据格式"><a href="#json的数据格式" class="headerlink" title="json的数据格式"></a>json的数据格式</h1><p>在json中，遵循“键值对”的这样一种方式，比如：“{“name”:”tom”}”,就是一个json格式的数据，json的格式归纳下来，一般有以下几点：</p><ul><li>对象通过键值对表现；</li><li>键通过双引号包裹，后面跟冒号“:”，然后跟该键的值；</li><li>值可以是字符串、数字、数组等数据类型；</li><li>对象与对象之间用逗号隔开；</li><li>“{}”用来表达对象；</li><li>“[]”用来表达数组；</li></ul><p>我们看一个略为复杂一点的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/2.jpg"><br>上例则是一个典型的json格式的数据，强大的Python提供了一个“json”模块，可以方便的将各种零散的数据通过模块的内置函数编码形成一个json格式的数据，也可以将一个json格式的数据解码形成自己需要的数据，非常好用，下面我们就来介绍一下。</p><h1 id="json-dumps"><a href="#json-dumps" class="headerlink" title="json.dumps()"></a>json.dumps()</h1><p>json模块里的dumps函数是对数据进行编码，形成json格式的数据，我们看一下下面的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/3.jpg"><br>通过输出的结果很容易看出，通过dumps方法使字典转换成为了json格式，虽然它们非常相似。其中，在dumps里的参数“sort_keys=True”，使得输出json后对key和value进行0~9、a~z的顺序排序，如果不填，则按照无序排列。有时候，通过排序可以方便地比较json中的数据，因此，适当的排序是很有必要的。</p><p>此外，“Indent”参数表示缩进的意思，它可以使得输出的Json看起来更加整齐好看，可读性更强，例如：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/4.jpg"><br>下面列举一下dumps（）的可填参数：</p><ul><li>skipkey：默认为False，当dict对象里的数据不是Python的基本数据类型；（str,unicode,int,long,float,bool,None）时，当skipkey为False，就会报错，如果skipkey为True，则可以跳过这类key；</li><li>indent：如果填0或者不填，则按照一行进行打印，否则按照indent的数值显示前面的空格（正整数形式）；</li><li>separators：分隔符，默认为“(‘,’,’:’)”，它表示key之间用“,”隔开，key和value之间用“:”隔开；</li><li>encoding：编码格式，默认值是UTF-8；</li><li>sort_keys：对key、value进行排序，默认值是False，即不排序；</li><li>ensure_ascii：默认为True，如果dict对象里含有none-ASCII的字符，则显示\uXX的格式，如果为False，则能正常显示出来；</li></ul><h1 id="json-loads"><a href="#json-loads" class="headerlink" title="json.loads()"></a>json.loads()</h1><p>和dumps相反，loads函数则是将json格式的数据解码，转换为Python字典，我们看一下下面的例子：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/5.jpg"><br>有时候，输出结果遇到中文的时候，会出现编码格式不一样的情况，显示出为Unicode的编码格式，使得不易读懂，解决办法是添加参数“encoding”参数，即上面的改写成这样：d1 = json.loads(data1,encoding=’utf-8’)即可。</p><h1 id="json-dump-和-json-load"><a href="#json-dump-和-json-load" class="headerlink" title="json.dump() 和 json.load()"></a>json.dump() 和 json.load()</h1><p>相对于上面所讲的dumps和loads来说，dump和load函数的功能类似，只不过前者是用来处理字符串类型的，而后者是用于处理文件类型的，如下所示：<br><img src="/images/loading_img.gif" data-original="/posts/jsoninfo/6.jpg"><br>上例列举出了json的四个方法：dumps（）和dump（）、loads（）和load（）的简单使用方法，可见，Python对于json的处理相当方便，不像c++那样（谁用谁知道）。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;Json（JavaScript Object Notation）它是一种轻量级的数据交换格式，具有数据格式简单，读写方便易懂等很多优点。许多主流的编程语言都在用它来进行前后端的数据传输，大大的简化了服务器和客户端的开发工作量。相对于XML来说，更加的轻量级，更方便解析，因此许多开发者都遵循Json格式来进行数据的传输和交换。今天我们详细介绍一下Python在Json的编解码方面的知识。&lt;a href=&quot;https://baijiahao.baidu.com/s?id=1608659655547720220&amp;amp;wfr=spider&amp;amp;for=pc&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;阅读原文&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="json" scheme="https://lruihao.cn/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>python发送post请求进行简单的接口测试</title>
    <link href="https://lruihao.cn/posts/posttest.html"/>
    <id>https://lruihao.cn/posts/posttest.html</id>
    <published>2019-05-07T10:17:05.000Z</published>
    <updated>2019-05-07T10:29:02.908Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>通过requests可以向某个地址发送请求，可以用来做一些接口的测试；主要有两个方法：</p><ul><li>requests.get()</li><li>requests.post()<br>最近帮朋友的项目做一个小需求，需要把后台数据定期打包发送到微信群，麻小科技涛哥给了我一个接口，post访问。</li></ul></div><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">通过requests可以向某个地址发送请求requests.post(url,json date)</span></span><br><span class="line"><span class="string">post方法还有其他参数，如header等</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># post发送的数据</span></span><br><span class="line">postData = &#123;</span><br><span class="line">    <span class="comment"># 'username':'test',</span></span><br><span class="line">    <span class="comment"># 'password':'123456',</span></span><br><span class="line">    <span class="comment"># 'salary':2000,</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接口这里不便公开</span></span><br><span class="line">r = requests.post(<span class="string">'http://demo.maxiaokeji.com/xx/xxxxx/xxxx'</span>,data=postData)</span><br><span class="line"><span class="comment"># print(r.text)</span></span><br><span class="line">response=r.json()</span><br><span class="line">print(response)</span><br></pre></td></tr></table></figure><p>运行后会在屏幕打印出返回的json数据<br><img src="/images/loading_img.gif" data-original="/posts/posttest/1.png" title="返回数据"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;通过requests可以向某个地址发送请求，可以用来做一些接口的测试；主要有两个方法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;requests.get()&lt;/li&gt;&lt;li&gt;requests.post()&lt;br&gt;最近帮朋友的项目做一个小需求，需要把后台数据定期打包发送到微信群，麻小科技涛哥给了我一个接口，post访问。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="post请求" scheme="https://lruihao.cn/tags/post%E8%AF%B7%E6%B1%82/"/>
    
      <category term="接口测试" scheme="https://lruihao.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>java通过URL和URLConnection访问网页资源</title>
    <link href="https://lruihao.cn/posts/urlreader.html"/>
    <id>https://lruihao.cn/posts/urlreader.html</id>
    <published>2019-05-06T09:41:35.000Z</published>
    <updated>2019-05-06T15:10:15.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>该例中首先生成一个URL对象lrh，指向RUI豪小栈，然后再调用lrh.openStream()方法生成该URL的一个输入流，这是一个字节流，在此基础上进一步通过InputStreamReader和BufferedReader构造一个带缓冲功能的字符流，并通过这个字符流对象读取该URL的html内容，进而输出到桌面文件和控制台屏幕。URLConnection类也可以用来对由URL引用的资源进行读写操作，前提是先通过connect()方法建立连接，然后再去获取响应头信息或响应内容。</p></div><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">URL lrh=<span class="keyword">new</span> URL(<span class="string">"https://www.lruihao.cn"</span>);</span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\lrh.html"</span>);</span><br><span class="line">FileWriter fout=<span class="keyword">new</span> FileWriter(file);</span><br><span class="line">BufferedReader in =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(lrh.openStream()));<span class="comment">//字节流转化成字符流，再构建缓冲字符流</span></span><br><span class="line">String inputLine;</span><br><span class="line"><span class="keyword">while</span>((inputLine=in.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(inputLine);</span><br><span class="line">fout.write(inputLine);</span><br><span class="line">&#125;</span><br><span class="line">in.close();</span><br><span class="line">fout.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取响应header信息</span></span><br><span class="line">URLConnection conn=lrh.openConnection();</span><br><span class="line">conn.connect();</span><br><span class="line">System.out.println(<span class="string">"获取到的响应长度："</span>+conn.getContentLength());</span><br><span class="line">System.out.println(<span class="string">"响应类型："</span>+conn.getContentType());</span><br><span class="line"></span><br><span class="line"><span class="comment">//用BufferedReader读取URL的响应</span></span><br><span class="line">in =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream()));</span><br><span class="line">String line;</span><br><span class="line">String result=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((line=in.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">result+=line;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;该例中首先生成一个URL对象lrh，指向RUI豪小栈，然后再调用lrh.openStream()方法生成该URL的一个输入流，这是一个字节流，在此基础上进一步通过InputStreamReader和BufferedReader构造一个带缓冲功能的字符流，并通过这个字符流对象读取该URL的html内容，进而输出到桌面文件和控制台屏幕。URLConnection类也可以用来对由URL引用的资源进行读写操作，前提是先通过connect()方法建立连接，然后再去获取响应头信息或响应内容。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="URL" scheme="https://lruihao.cn/tags/URL/"/>
    
      <category term="URLConnection" scheme="https://lruihao.cn/tags/URLConnection/"/>
    
  </entry>
  
  <entry>
    <title>文件加密解密（字节流）</title>
    <link href="https://lruihao.cn/posts/byteio.html"/>
    <id>https://lruihao.cn/posts/byteio.html</id>
    <published>2019-05-02T15:04:32.000Z</published>
    <updated>2019-05-02T15:24:46.576Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>基本功能： 给定一个密钥，读取文件内容，加密后，输出到另外一个文件。</p><p>这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。</p></div><a id="more"></a><h1 id="文件加密解密"><a href="#文件加密解密" class="headerlink" title="文件加密解密"></a>文件加密解密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncryptFile</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">byte</span> pwd=<span class="number">123</span>;<span class="comment">//加密/解密密码</span></span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/EncryptFile.java"</span>);<span class="comment">//待加密文件</span></span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"encrypted.txt"</span>);<span class="comment">//已加密文件</span></span><br><span class="line">System.out.println(<span class="string">"开始加密。。。"</span>);</span><br><span class="line"><span class="keyword">int</span> n=f.available()/<span class="number">5</span>;</span><br><span class="line"><span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[n];<span class="comment">//以一个字节数组的长度读取和复制</span></span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=f.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//写入之前先加密/解密</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;count;i++) &#123;</span><br><span class="line">b[i]=(<span class="keyword">byte</span>)(b[i]^pwd);<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">fout.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"完成加密"</span>);</span><br><span class="line">f.close();</span><br><span class="line">fout.close();</span><br><span class="line"><span class="comment">//f=new FileInputStream("encrypted.txt");</span></span><br><span class="line"><span class="comment">//fout=new FileOutputStream("unencrypted.txt");</span></span><br><span class="line"><span class="comment">//System.out.println("开始解密。。。");</span></span><br><span class="line"><span class="comment">//n=f.available()/5;</span></span><br><span class="line"><span class="comment">//b=new byte[n];//以一个字节数组的长度读取和复制</span></span><br><span class="line"><span class="comment">//count=0;</span></span><br><span class="line"><span class="comment">//while((count=f.read(b,0,n))!=-1) &#123;</span></span><br><span class="line"><span class="comment">////写入之前先加密/解密</span></span><br><span class="line"><span class="comment">//for(int i=0;i&lt;count;i++) &#123;</span></span><br><span class="line"><span class="comment">//b[i]=(byte)(b[i]^pwd);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//fout.write(b,0,count);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//System.out.println("完成解密");</span></span><br><span class="line"><span class="comment">//f.close();</span></span><br><span class="line"><span class="comment">//fout.close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文件复制"><a href="#文件复制" class="headerlink" title="文件复制"></a>文件复制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileStreamCopy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/FileStreamCopy.java"</span>);</span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"copy-of-file.txt"</span>);</span><br><span class="line">System.out.println(<span class="string">"总长度："</span>+(size=f.available()));</span><br><span class="line"><span class="keyword">int</span> n=size/<span class="number">10</span>;</span><br><span class="line">System.out.print(<span class="string">"使用单字节方法读取后："</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">fout.write(f.read());</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">System.out.println(<span class="string">"读取一个字节数组后："</span>);</span><br><span class="line"><span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[n];</span><br><span class="line">f.read(b);</span><br><span class="line">fout.write(b);</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">System.out.println(<span class="string">"读取余下数据："</span>);</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=f.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//System.out.println(count);</span></span><br><span class="line">fout.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"剩余长度："</span>+f.available());</span><br><span class="line">f.close();</span><br><span class="line">fout.flush();</span><br><span class="line">fout.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BufferedStreamCopy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(<span class="string">"src/cn/lruihao/base/BufferedStreamCopy.java"</span>);</span><br><span class="line">FileOutputStream fout=<span class="keyword">new</span> FileOutputStream(<span class="string">"copy-of-file.txt"</span>);</span><br><span class="line">BufferedInputStream bis=<span class="keyword">new</span> BufferedInputStream(f);</span><br><span class="line">BufferedOutputStream bos=<span class="keyword">new</span> BufferedOutputStream(fout);</span><br><span class="line">System.out.println(<span class="string">"开始复制。。。"</span>);</span><br><span class="line"><span class="keyword">int</span> n=f.available()/<span class="number">5</span>;</span><br><span class="line"><span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[n];</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((count=bis.read(b,<span class="number">0</span>,n))!=-<span class="number">1</span>) &#123;</span><br><span class="line">bos.write(b,<span class="number">0</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"复制完成"</span>);</span><br><span class="line">bis.close();</span><br><span class="line">bos.flush();</span><br><span class="line">bos.close();</span><br><span class="line">f.close();</span><br><span class="line">fout.flush();</span><br><span class="line">fout.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;基本功能： 给定一个密钥，读取文件内容，加密后，输出到另外一个文件。&lt;/p&gt;&lt;p&gt;这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="java字节流" scheme="https://lruihao.cn/tags/java%E5%AD%97%E8%8A%82%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>模拟借书系统（java异常练习）</title>
    <link href="https://lruihao.cn/posts/JavaException.html"/>
    <id>https://lruihao.cn/posts/JavaException.html</id>
    <published>2019-05-01T08:52:21.000Z</published>
    <updated>2019-05-01T09:14:37.819Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/images/loading_img.gif" data-original="/posts/JavaException/1.png" title="问题描述"><a id="more"></a><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><blockquote><p>这里的异常主要是<code>InputMismatchException</code>,可以直接捕获该异常，我直接捕获了父类异常。。。<br></p><figure class="highlight java"><figcaption><span>ExceptionDemo.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 李瑞豪</span></span><br><span class="line"><span class="comment"> *借书系统(异常练习)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Book[] books = &#123;</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"数据结构"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"Java"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"php"</span>),</span><br><span class="line"><span class="keyword">new</span> Book(<span class="string">"c"</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"欢迎来到借书系统！"</span>);</span><br><span class="line">ExceptionDemo jieshu= <span class="keyword">new</span> ExceptionDemo();</span><br><span class="line">jieshu.menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"输入命令：1.书名查找；\t2.序号查找；"</span>);</span><br><span class="line"> <span class="comment">//初始化并捕获用户输入</span></span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">//捕获异常</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">int</span> id =sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(id==<span class="number">1</span>||id==<span class="number">2</span>) &#123;</span><br><span class="line">inquire(id);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"输入错误！请根据提示输入~~"</span>);<span class="comment">//输入非1，2的数字情况</span></span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;<span class="comment">//输入字符为非数字</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"输入错误，请输入数字命令~~"</span>);</span><br><span class="line">menu();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">sc.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inquire</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(id==<span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"请输入要查找的书名！"</span>);</span><br><span class="line">String name=sc.nextLine();</span><br><span class="line"><span class="keyword">int</span> num=FindName(name);</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">0</span>?<span class="keyword">false</span>:<span class="keyword">true</span>) &#123;<span class="comment">//验证书名是否存在 存在则打印</span></span><br><span class="line">System.out.println(<span class="string">"book："</span>+name+<span class="string">"\t序号："</span>+num);</span><br><span class="line"><span class="comment">//menu();//回到访问起点 也可以去掉终止程序</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"图书不存在"</span>);</span><br><span class="line">            menu();</span><br><span class="line">        &#125;</span><br><span class="line">sc.close();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(id == <span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"请输入您要查找的序号："</span>);</span><br><span class="line"><span class="keyword">int</span> id2=sc.nextInt();</span><br><span class="line">FindNum(id2);</span><br><span class="line">sc.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindNum</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(num&gt;=<span class="number">0</span>&amp;&amp;num&lt;books.length) &#123;</span><br><span class="line"> System.out.println(books[num].getName());</span><br><span class="line"> <span class="comment">//menu();//回到访问起点 也可以去掉终止程序</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"图书不存在"</span>);</span><br><span class="line">            menu();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"输入有误！~~"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">FindName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(Book i:books) &#123;</span><br><span class="line">String name1=i.getName();</span><br><span class="line"><span class="keyword">if</span>(name1.equals(name)) &#123;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><figure class="highlight java"><figcaption><span>Book.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lruihao.Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="大致运行效果"><a href="#大致运行效果" class="headerlink" title="大致运行效果"></a>大致运行效果</h1><img src="/images/loading_img.gif" data-original="/posts/JavaException/2.png" title="部分运行">]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/posts/JavaException/1.png&quot; title=&quot;问题描述&quot;&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>用MyQR制作专属动态二维码(py和exe版本)</title>
    <link href="https://lruihao.cn/posts/qrcode.html"/>
    <id>https://lruihao.cn/posts/qrcode.html</id>
    <published>2019-04-27T06:16:54.000Z</published>
    <updated>2019-04-27T07:05:59.106Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p><strong>Python 二维码生成器</strong>是github上@sylnsfar开源的一个python生成二维码工具。有python,网页及exe版本，详见<a href="https://github.com/sylnsfar/qrcode/" rel="external nofollow noopener noreferrer" target="_blank">sylnsfar/qrcode</a>，本文主要介绍记录一下python版本使用。exe可以去<a href="https://github.com/sylnsfar/qrcode_win" rel="external nofollow noopener noreferrer" target="_blank">项目开源地址</a>下载，公众号文章后台回复关键词“qrcode”获取链接。</p><p>可生成<em>普通二维码</em>、<em>带图片的艺术二维码（黑白与彩色）</em>、<em>动态二维码（黑白与彩色）</em>。</p></div><a id="more"></a><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="/images/loading_img.gif" data-original="/posts/qrcode/1.gif" style="float:left;width:30%"><img src="/images/loading_img.gif" data-original="/posts/qrcode/2.png" style="float:left;width:30%"></p><div style="clear:both"></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">version, level, qr_name = myqr.run(</span><br><span class="line">    words=<span class="string">'https://lruihao.cn'</span>,</span><br><span class="line">    version=<span class="number">1</span>,</span><br><span class="line">    level=<span class="string">'H'</span>,</span><br><span class="line">    picture=<span class="string">'2.jpg'</span>,</span><br><span class="line">    colorized=<span class="keyword">True</span>,</span><br><span class="line">    contrast=<span class="number">1.0</span>,</span><br><span class="line">    brightness=<span class="number">1.0</span>,</span><br><span class="line">    save_name=<span class="keyword">None</span>,</span><br><span class="line">    save_dir=os.getcwd()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help(myqr)</span></span><br><span class="line"><span class="comment"># https://github.com/sylnsfar/qrcode/</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Positional parameter</span></span><br><span class="line"><span class="string">   words: str # 链接或者文字</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Optional parameters</span></span><br><span class="line"><span class="string">   version: int, from 1 to 40  # 控制边长</span></span><br><span class="line"><span class="string">   level: str, just one of ('L','M','Q','H') # 控制纠错水平，从左到右依次升高。</span></span><br><span class="line"><span class="string">   picutre: str, a filename of a image # 图片，需在同路径,默认None</span></span><br><span class="line"><span class="string">   colorized: bool  # 是否彩色 默认False</span></span><br><span class="line"><span class="string">   constrast: float # 对比度 默认1.0</span></span><br><span class="line"><span class="string">   brightness: float # 亮度 默认1.0</span></span><br><span class="line"><span class="string">   save_name: str, the output filename like 'example.png' #控制文件名，默认None,'qrcode.png'</span></span><br><span class="line"><span class="string">   save_dir: str, the output directory # 储存路径</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 pip</span></span><br><span class="line">pip(<span class="number">3</span>) install myqr(<span class="keyword">or</span> MyQR)</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><p><em>（<strong>提示</strong>：如果你尚未安装 <a href="https://pypi.python.org/pypi/MyQR" rel="external nofollow noopener noreferrer" target="_blank"><strong>MyQR</strong></a> ，以下内容请使用<code>python(3) myqr.py</code> 而非<code>myqr</code> 。）</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 概括</span></span><br><span class="line">myqr Words</span><br><span class="line">[-v &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,...,<span class="number">40</span>&#125;]</span><br><span class="line">[-l &#123;L,M,Q,H&#125;]</span><br><span class="line">        [-n output-filename]</span><br><span class="line">[-d output-directory]</span><br><span class="line">[-p picture_file]</span><br><span class="line">[-c]</span><br><span class="line">[-con contrast]</span><br><span class="line">[-bri brightness]</span><br></pre></td></tr></table></figure><ul><li>普通二维码 介绍了 <code>Words</code>, <code>-v</code>, <code>-l</code>, <code>-n</code>, <code>-d</code></li><li>艺术二维码 介绍了 <code>-p</code>, <code>-c</code>, <code>-con</code>, <code>-bri</code></li><li>动态GIF二维码 介绍了动态的生成方法和注意点</li></ul><h4 id="普通二维码"><a href="#普通二维码" class="headerlink" title="普通二维码"></a>普通二维码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#1 Words</span></span><br><span class="line">myqr https://github.com</span><br></pre></td></tr></table></figure><ul><li>在命令后输入链接或者句子作为参数，然后在程序的当前目录中产生相应的二维码图片文件，默认命名为 “qrcode.png”。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#2 -v, -l</span></span><br><span class="line">myqr https://github.com -v 10 -l Q</span><br></pre></td></tr></table></figure><ul><li><p><strong>默认边长</strong>是取决于你输入的信息的长度和使用的纠错等级；</p><p>而<strong>默认纠错等级</strong>是最高级的H。</p></li><li><p><strong>自定义</strong>：如果想要控制边长和纠错水平就使用 <code>-v</code> 和 <code>-l</code> 参数。</p><p><code>-v</code> 控制边长，范围是<strong>1至40</strong>，数字越大边长越大；</p><p><code>-l</code> 控制纠错水平，范围是<strong>L、M、Q、H</strong>，从左到右依次升高。</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#3 -n, -d</span></span><br><span class="line">myqr https://github.com -n github_qr.jpg  -d .../paths/</span><br></pre></td></tr></table></figure><ul><li><p><strong>默认输出文件名</strong>是“ qrcode.png “，而<strong>默认存储位置</strong>是当前目录。</p></li><li><p>自定义：可以自己定义输出名称和位置。<strong>注意</strong>同名文件会覆盖旧的。</p><p><code>-n</code> 控制文件名，格式可以是 <code>.jpg</code>， <code>.png</code> ，<code>.bmp</code> ，<code>.gif</code> ；</p><p><code>-d</code> 控制位置。</p></li></ul><h4 id="艺术二维码"><a href="#艺术二维码" class="headerlink" title="艺术二维码"></a>艺术二维码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#1 -p</span></span><br><span class="line">myqr https://github.com -p github.jpg</span><br></pre></td></tr></table></figure><ul><li>参数<code>-p</code> 用来将QR二维码图像与一张同目录下的图片相结合，产生一张<strong>黑白</strong>图片。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#2 -c</span></span><br><span class="line">myqr https://github.com -p github.jpg -c</span><br></pre></td></tr></table></figure><ul><li>加上参数 <code>-c</code> 可以使产生的图片由黑白变为<strong>彩色</strong>的。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#3 -con, -bri</span></span><br><span class="line">myqr https://github.com -p github.jpg [-c] -con 1.5 -bri 1.6</span><br></pre></td></tr></table></figure><ul><li><p>参数<code>-con</code> 用以调节图片的<strong>对比度</strong>，1.0 表示原始图片，更小的值表示更低对比度，更大反之。<strong>默认为1.0</strong>。</p></li><li><p>参数 <code>-bri</code> 用来调节图片的<strong>亮度</strong>，其余用法和取值与 <code>-con</code> 相同。</p></li></ul><h4 id="动态GIF二维码"><a href="#动态GIF二维码" class="headerlink" title="动态GIF二维码"></a>动态GIF二维码</h4><p>动态二维码与上述的带图片的二维码的生成方法没什么区别，你只要采用 <code>.gif</code> 格式的图片即可生成黑白或者彩色的动态二维码。但<strong>注意</strong>如果使用了 <code>-n</code> 参数自定义输出的文件名，切记其格式也必须是 <code>.gif</code> 格式。</p><h3 id="作为导入文件"><a href="#作为导入文件" class="headerlink" title="作为导入文件"></a>作为导入文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装模块后</span></span><br><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line">version, level, qr_name = myqr.run(</span><br><span class="line">words,</span><br><span class="line">    version=<span class="number">1</span>,</span><br><span class="line">    level=<span class="string">'H'</span>,</span><br><span class="line">    picture=<span class="keyword">None</span>,</span><br><span class="line">    colorized=<span class="keyword">False</span>,</span><br><span class="line">    contrast=<span class="number">1.0</span>,</span><br><span class="line">    brightness=<span class="number">1.0</span>,</span><br><span class="line">    save_name=<span class="keyword">None</span>,</span><br><span class="line">    save_dir=os.getcwd()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><em>以下各个参数已经在<strong>上文命令行方式</strong>有所介绍</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># help(myqr)</span></span><br><span class="line">Positional parameter</span><br><span class="line">   words: str</span><br><span class="line"></span><br><span class="line">Optional parameters</span><br><span class="line">   version: int, <span class="keyword">from</span> <span class="number">1</span> to <span class="number">40</span></span><br><span class="line">   level: str, just one of (<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'Q'</span>,<span class="string">'H'</span>)</span><br><span class="line">   picutre: str, a filename of a image</span><br><span class="line">   colorized: bool</span><br><span class="line">   constrast: float</span><br><span class="line">   brightness: float</span><br><span class="line">   save_name: str, the output filename like <span class="string">'example.png'</span></span><br><span class="line">   save_dir: str, the output directory</span><br></pre></td></tr></table></figure><h2 id="使用提示"><a href="#使用提示" class="headerlink" title="使用提示"></a>使用提示</h2><ul><li><p>请采用<strong>正方形</strong>或近似正方形的图片</p></li><li><p>建议在图片尺寸大的时候使用 <code>-v</code> 的值也应该<strong>适当</strong>变大。</p></li></ul><h2 id="可用字符"><a href="#可用字符" class="headerlink" title="可用字符"></a>可用字符</h2><ul><li><p>数字 0 到 9</p></li><li><p>大小写的英文字母</p></li><li><p>常用<strong>英文标点符号</strong>和空格</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">· , . : ; + - * / \ ~ ! @ # $ % ^ &amp; ` ' = &lt; &gt; [ ] ( ) ? _ &#123; &#125; | and  (space)</span><br></pre></td></tr></table></figure></li></ul><h2 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h2><ul><li><a href="https://pypi.python.org/pypi/Pillow/3.3.1" rel="external nofollow noopener noreferrer" target="_blank">pillow</a></li><li><a href="https://pypi.python.org/pypi/numpy" rel="external nofollow noopener noreferrer" target="_blank">numpy</a></li><li><a href="https://pypi.python.org/pypi/imageio" rel="external nofollow noopener noreferrer" target="_blank">imageio</a></li></ul><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>Linux, Python 3</li><li>Windows, Python 3</li><li>Mac, Python 3</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;&lt;strong&gt;Python 二维码生成器&lt;/strong&gt;是github上@sylnsfar开源的一个python生成二维码工具。有python,网页及exe版本，详见&lt;a href=&quot;https://github.com/sylnsfar/qrcode/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;sylnsfar/qrcode&lt;/a&gt;，本文主要介绍记录一下python版本使用。exe可以去&lt;a href=&quot;https://github.com/sylnsfar/qrcode_win&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;项目开源地址&lt;/a&gt;下载，公众号文章后台回复关键词“qrcode”获取链接。&lt;/p&gt;&lt;p&gt;可生成&lt;em&gt;普通二维码&lt;/em&gt;、&lt;em&gt;带图片的艺术二维码（黑白与彩色）&lt;/em&gt;、&lt;em&gt;动态二维码（黑白与彩色）&lt;/em&gt;。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="pillow" scheme="https://lruihao.cn/tags/pillow/"/>
    
      <category term="numpy" scheme="https://lruihao.cn/tags/numpy/"/>
    
      <category term="imageio" scheme="https://lruihao.cn/tags/imageio/"/>
    
  </entry>
  
  <entry>
    <title>第一次面试经历</title>
    <link href="https://lruihao.cn/posts/1thintervivew.html"/>
    <id>https://lruihao.cn/posts/1thintervivew.html</id>
    <published>2019-04-24T13:23:22.000Z</published>
    <updated>2019-04-26T12:58:06.404Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote class="blockquote-center"><p>时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。</p></blockquote><a id="more"></a><div class="note info"><p>富士康在学校有一个春招的机会，我和朋友抱着侥幸的心理去试了试。<br>虽然深知自己还身有很多缺点，但是不面试不知道，一面试都暴露出来了，以下记录一下自己的不足之处：</p><ul><li>php和sql的经典组合虽然有所接触了解，但是确实什么都会，得花时间学</li><li>html/css等虽然平时折腾博客这些应用的比较多，但是今天竟然紧张地忘记了margin和padding都不会写了</li><li>如上一条，公众表现能力有待加强。正如当今“酒香也怕巷子深”，何况“不香”。</li></ul><p>惊喜的事说来就来，本来知道自己这么多缺点，这么菜后，觉得这个实习的offer是没戏了，没想到下午技术主管微信发来消息，说录用了。当场懵逼，受宠若惊的感觉！非常谢谢面试官老师！<br>无论生活还是学习，希望以后的自己一定要保持一颗谦逊爱学的心，早日实现全栈工程师的梦想，还有早点存钱把大学学费的贷款还掉！</p></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://lruihao.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="面试" scheme="https://lruihao.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="https://lruihao.cn/posts/me.html"/>
    <id>https://lruihao.cn/posts/me.html</id>
    <published>2019-04-24T05:21:49.000Z</published>
    <updated>2019-05-12T05:55:40.380Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>请用电脑浏览!</p></div><a id="more"></a><div class="row"><embed src="/posts/me/李瑞豪.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;请用电脑浏览!&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="简历" scheme="https://lruihao.cn/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>python爬取网站图片（图片链接相似）</title>
    <link href="https://lruihao.cn/posts/mmtimgpy.html"/>
    <id>https://lruihao.cn/posts/mmtimgpy.html</id>
    <published>2019-04-22T04:46:34.000Z</published>
    <updated>2019-04-24T14:23:01.092Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>以下程序对<a href="https://hw.xiezixiansheng.com/mobile.php?c=Grzkreader&amp;a=fontshowPics&amp;u=qbfRl8gPF2s-&amp;z=Kqz%2FRroVGYc-&amp;share=1&amp;from=singlemessage" rel="external nofollow noopener noreferrer" target="_blank">该网址</a>内的手写体图片进行爬取！这个手写体是我在手机上通过《手迹造字》app书写的，大概6886个字符，历时两年多，目前仍在修改中。<a href="https://lruihao.cn/posts/font-mmt.html">字体效果查看</a></p></div><a id="more"></a><h1 id="思路设计"><a href="#思路设计" class="headerlink" title="思路设计"></a>思路设计</h1><blockquote><p>通过观察目标网页中字符图片的链接，很容易发现每个字符图片的直链是由两部分组成。</p><ul><li>固定链接</li><li>图片文件编号</li></ul></blockquote><blockquote><p>其中固定连接为<code>https://image.xiezixiansheng.com/users/2010/700/unzip/579767/</code>,图片文件为<code>xxxxx.png@50q</code>，如果去掉@50q，获取到的图片就是透明背景的不然就是白色背景。然后发现编号大多是5位数的形式，但是还有一些是4位的，甚至还有2-3位的数字。仔细看看127前的编号都是一些国际符号诸如英文和数字等。比对一下发现正是ASCII码对应的命名方式。可想而知中文自然也是通过编码来命名的。一个标准的字库文件至少包含6763个汉字，也就是我书写的这个<code>GB2312-80</code>,范围： <code>0xA1A1 - 0xFEFE</code>，其中汉字范围： <code>0xB0A1 - 0xF7FE</code>。两个16进制位对应一个字节，一个汉字至少由两个字节组成，这样理解，范围自然是4个16进制位。所以转换成10进制，范围大致在65278以下。要了解更加具体一点的范围还需要去查一下汉字编码的分区等。这里暂时不必了解，因为本来就打算暴力下载。</p></blockquote><blockquote><p><strong>说了这么多，既然图片链接这么简单，所以我是想暴力遍历，搜索图片，判断链接状态码，然后下载图片。</strong></p></blockquote><h1 id="源码设计"><a href="#源码设计" class="headerlink" title="源码设计"></a>源码设计</h1><p>大致分为三个范围吧</p><ul><li>英文字符</li><li>中文符号</li><li>汉字范围</li></ul><blockquote><p>我主要分这几个区间查找</p></blockquote><ul><li>33 ~ 126</li><li>8212 ~ 8243</li><li>12289 ~ 12305</li><li>19968 ~ 40864</li><li>65281 ~ 65509</li></ul><p>磨刀不误砍柴工，分析观察了这么久，终于可以运行程序了，F5后就静静等待吧，可以去看看java，或者打一把王者hhhhh!<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">path=<span class="string">"C:\\Users\\李瑞豪\\Desktop\\MMT_images\\"</span> <span class="comment">#下载路径： 绝对或者相对路径比如./image/</span></span><br><span class="line">os.makedirs(path+<span class="string">"0\\"</span>, exist_ok=<span class="keyword">True</span>) <span class="comment"># 创建文件夹</span></span><br><span class="line">os.makedirs(path+<span class="string">"1\\"</span>, exist_ok=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urllib_download</span><span class="params">(url,num)</span>:</span>  <span class="comment"># (下载链接,图片编号)</span></span><br><span class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line">    urlretrieve(url,path+num+<span class="string">".png"</span>)     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断状态码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_status</span><span class="params">(url)</span>:</span>  </span><br><span class="line">    r = requests.get(url, allow_redirects = <span class="keyword">False</span>)  </span><br><span class="line">    <span class="keyword">return</span> r.status_code</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">BASE_URL = <span class="string">"https://image.xiezixiansheng.com/users/2010/700/unzip/579767/"</span></span><br><span class="line">n=<span class="number">33</span></span><br><span class="line">total=<span class="number">0</span></span><br><span class="line">print(<span class="string">"正在爬取第1张图片!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">65510</span>:</span><br><span class="line"><span class="comment">#分段爬取，不然会超时！！！# 33 ~ 126 # 8212 ~ 8243 # 12289 ~ 12305 # 19968 ~ 40864 # 65281 ~ 65509</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">127</span>:</span><br><span class="line">n = <span class="number">8212</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">8244</span>:</span><br><span class="line">n = <span class="number">12289</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n ==<span class="number">12306</span>:</span><br><span class="line">n = <span class="number">19968</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">40865</span>:</span><br><span class="line">n = <span class="number">65281</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for n in range(37341,40865):</span></span><br><span class="line">num = str(n)</span><br><span class="line">IMAGE_URL = BASE_URL+num+<span class="string">".png"</span> <span class="comment"># xxx.png是透明背景，xxx.png@50q是白色背景，分别存放在0，1文件夹 p是中小 w是小图</span></span><br><span class="line"><span class="keyword">if</span>(get_status(IMAGE_URL)==<span class="number">200</span>): <span class="comment"># 同时下载透明和白色背景的图片</span></span><br><span class="line">total+=<span class="number">1</span></span><br><span class="line">urllib_download(IMAGE_URL,<span class="string">"0\\"</span>+num)</span><br><span class="line">IMAGE_URL += <span class="string">"@50q"</span></span><br><span class="line">urllib_download(IMAGE_URL,<span class="string">"1\\"</span>+num)</span><br><span class="line">print(<span class="string">"Downloaded "</span>+num+<span class="string">".png"</span>)</span><br><span class="line">print(<span class="string">"正在爬取第"</span>,total+<span class="number">1</span>,<span class="string">"张图片!"</span>)</span><br><span class="line">n+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n爬取完毕！共爬取"</span>,total,<span class="string">"张图片!"</span>)</span><br><span class="line">print(<span class="string">"图片存放路径："</span>+path)</span><br><span class="line">print(<span class="string">"作者博客：lruihao.cn"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:  </span><br><span class="line">    main();</span><br></pre></td></tr></table></figure><p></p><h1 id="爬取过程及结果"><a href="#爬取过程及结果" class="headerlink" title="爬取过程及结果"></a>爬取过程及结果</h1><blockquote><p>文件夹左下角数目变化</p></blockquote><img src="/images/loading_img.gif" data-original="/posts/mmtimgpy/mmtpy.gif" title="爬取过程"><div class="note danger"><p>说实话看着控制台不停地输出提示信息有没有很爽，对于强迫症来说真的是很治愈了！但是爬取第6042张图片的时候，我打开了一下目标网页发现无法加载图片了，就想这应该也算是一次Dos攻击了吧！打开控制台果然停了，相当于访问了近两万次！唉，还是太暴力了！！还差800多张，只好又重新接着写上次的位置爬!不慎造成目标网站服务器压力，实在对不起！</p></div><img src="/images/loading_img.gif" data-original="/posts/mmtimgpy/error.png" title="错误提示"><blockquote><p>一个半小时左右后终于下载完了，一共是6886张；程序是同时下载了透明和白色背景的图片的！分别在0,1子文件夹！</p></blockquote><img src="/images/loading_img.gif" data-original="/posts/mmtimgpy/jieguo.png" title="爬取完毕"><h1 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h1><p>模拟浏览器载入html文件，获取源码，查找到所有<code>&lt;img&gt;</code>标签内链接，必要时配合正则表达式，然后下载图片。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;以下程序对&lt;a href=&quot;https://hw.xiezixiansheng.com/mobile.php?c=Grzkreader&amp;amp;a=fontshowPics&amp;amp;u=qbfRl8gPF2s-&amp;amp;z=Kqz%2FRroVGYc-&amp;amp;share=1&amp;amp;from=singlemessage&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;该网址&lt;/a&gt;内的手写体图片进行爬取！这个手写体是我在手机上通过《手迹造字》app书写的，大概6886个字符，历时两年多，目前仍在修改中。&lt;a href=&quot;https://lruihao.cn/posts/font-mmt.html&quot;&gt;字体效果查看&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python玩微信：初探wxpy</title>
    <link href="https://lruihao.cn/posts/wxpy1.html"/>
    <id>https://lruihao.cn/posts/wxpy1.html</id>
    <published>2019-04-20T07:44:57.000Z</published>
    <updated>2019-04-22T07:13:39.786Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p><strong><em>文中涉及的图片涉及个人隐私，仅做举例，请勿传播</em></strong></p><ul><li>查看微信好友男女比例</li><li>查看好友地区分布</li><li>群性别统计</li></ul></div><a id="more"></a><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li><a href="https://github.com/youfou/wxpy" rel="external nofollow noopener noreferrer" target="_blank">wxpy</a></li><li><a href="https://github.com/pyecharts/pyecharts" rel="external nofollow noopener noreferrer" target="_blank">pyecharts</a>（百度echarts）</li></ul><h1 id="查看微信好友男女比例"><a href="#查看微信好友男女比例" class="headerlink" title="查看微信好友男女比例"></a>查看微信好友男女比例</h1><figure class="highlight py"><figcaption><span>生成结果在源文件同目录在的sex.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Pie</span><br><span class="line"></span><br><span class="line">bot = Bot(cache_path = <span class="keyword">True</span>)   <span class="comment">#定义一个微信机器人</span></span><br><span class="line">friends = bot.friends(update=<span class="keyword">False</span>)   <span class="comment">#获取更新好友列表</span></span><br><span class="line">male = female = other = <span class="number">0</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> friends[<span class="number">1</span>:]:     <span class="comment">#[1:]自己是第一个，排除掉</span></span><br><span class="line">    sex = i.sex</span><br><span class="line">    <span class="keyword">if</span> sex == <span class="number">1</span>:</span><br><span class="line">        male += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> sex == <span class="number">2</span>:</span><br><span class="line">        female += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        other += <span class="number">1</span></span><br><span class="line">total = len(friends[<span class="number">1</span>:])   <span class="comment">#计算总数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下面为分析</span></span><br><span class="line">attr = [<span class="string">"男性"</span>,<span class="string">"女性"</span>,<span class="string">"其他"</span>]</span><br><span class="line">v1 = [float(male),float(female),float(other)]</span><br><span class="line">pie = Pie(<span class="string">"饼图-圆环图示例"</span>, title_pos=<span class="string">'center'</span>)</span><br><span class="line">pie.add(<span class="string">""</span>, attr, v1, radius=[<span class="number">40</span>, <span class="number">75</span>], label_text_color=<span class="keyword">None</span>, is_label_show=<span class="keyword">True</span>,</span><br><span class="line">        legend_orient=<span class="string">'vertical'</span>, legend_pos=<span class="string">'left'</span>)</span><br><span class="line">pie.render(<span class="string">"sex.html"</span>)</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/wxpy1/1.png" title="微信好友男女比例"><h1 id="查看好友地区分布"><a href="#查看好友地区分布" class="headerlink" title="查看好友地区分布"></a>查看好友地区分布</h1><figure class="highlight py"><figcaption><span>生成结果在源文件同目录在的city.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Map</span><br><span class="line"></span><br><span class="line"><span class="comment">#因为获取的列表城市都没有带市字，而pyecharts需要带个市字</span></span><br><span class="line">b = <span class="string">'市'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+b</span><br><span class="line"></span><br><span class="line"><span class="comment">#只提取湖南的</span></span><br><span class="line">bot = Bot(cache_path = <span class="keyword">True</span>)</span><br><span class="line">friends = bot.friends(update=<span class="keyword">False</span>).search(province = <span class="string">'湖南'</span>)</span><br><span class="line">citys = []   </span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> friends :</span><br><span class="line">    city = f.city</span><br><span class="line">    citys.append(city)</span><br><span class="line">r = map(s,citys)</span><br><span class="line">cityss = list(r)</span><br><span class="line"></span><br><span class="line"><span class="comment">#为城市计数</span></span><br><span class="line">a = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cityss:</span><br><span class="line">    a[i] = cityss.count(i)</span><br><span class="line">a.pop(<span class="string">'市'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把字典进行有序拆分为2个列表</span></span><br><span class="line">attrs = []</span><br><span class="line">values = []</span><br><span class="line"><span class="keyword">for</span> value, attr <span class="keyword">in</span> a.items():</span><br><span class="line">    values.append(attr)</span><br><span class="line">    attrs.append(value)</span><br><span class="line"><span class="comment">#开始绘图</span></span><br><span class="line">map = Map(<span class="string">"湖南地图示例"</span>, width=<span class="number">1200</span>, height=<span class="number">600</span>)</span><br><span class="line">map.add(<span class="string">""</span>, attrs, values, maptype=<span class="string">'湖南'</span>, is_visualmap=<span class="keyword">True</span>, visual_text_color=<span class="string">'#000'</span>)</span><br><span class="line">map.render(<span class="string">"city.html"</span>)</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/wxpy1/2.png" title="微信地区分布"><blockquote><p><strong>以上参考简书<a href="https://www.jianshu.com/p/c0baf3c6db15" rel="external nofollow noopener noreferrer" target="_blank">陈思煜</a></strong></p></blockquote><h1 id="统计所有群男女数目"><a href="#统计所有群男女数目" class="headerlink" title="统计所有群男女数目"></a>统计所有群男女数目</h1><blockquote><p>统计结果会自动发送到所有群聊<br>男女人数和不一定等于总数（有些人不显示性别）</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">removeAll</span><span class="params">(the_list, val)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [value <span class="keyword">for</span> value <span class="keyword">in</span> the_list <span class="keyword">if</span> value != val]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stats_text</span><span class="params">(target_group, group_name)</span>:</span></span><br><span class="line">    print(group_name + <span class="string">"群共有："</span> + str(len(target_group)) + <span class="string">"人，其中："</span>)</span><br><span class="line">    all_stats_text = []</span><br><span class="line">    all_dict = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 乱序先整理一份省份 + 地点的列表</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> target_group.members:</span><br><span class="line">        trimed_data = user.province.replace(<span class="string">' '</span>, <span class="string">''</span>) + user.city.replace(<span class="string">' '</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> trimed_data != <span class="string">''</span>:</span><br><span class="line">            all_stats_text.append(trimed_data)</span><br><span class="line">    <span class="comment"># 计数</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> all_stats_text:</span><br><span class="line">        <span class="keyword">if</span> all_stats_text.count(data) != <span class="number">0</span>:</span><br><span class="line">            all_dict[data] = all_stats_text.count(data)</span><br><span class="line">            all_stats_text = removeAll(all_stats_text, data)        </span><br><span class="line">    final_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sorted(all_dict.keys()):</span><br><span class="line">        final_dict[i] = all_dict[i]</span><br><span class="line">    <span class="keyword">return</span> final_dict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stats_sex</span><span class="params">(target_group)</span>:</span></span><br><span class="line">    male = <span class="number">0</span></span><br><span class="line">    female = <span class="number">0</span></span><br><span class="line">    other = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> target_group.members:</span><br><span class="line">        <span class="keyword">if</span> user.sex == <span class="number">1</span>:</span><br><span class="line">            male = male + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> user.sex == <span class="number">2</span>:</span><br><span class="line">            female = female + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            other = other + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"男的有："</span> + str(male) + <span class="string">"人"</span>)</span><br><span class="line">    print(<span class="string">"女的有："</span> + str(female) + <span class="string">"人"</span>)</span><br><span class="line">    msg = <span class="string">"男的有："</span> + str(male) + <span class="string">"人\n"</span> + <span class="string">"女的有："</span> + str(female) + <span class="string">"人\n"</span></span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line">bot = Bot()</span><br><span class="line"></span><br><span class="line">target_group = bot.groups(update=<span class="keyword">True</span>, contact_only=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> curr_group <span class="keyword">in</span> target_group:</span><br><span class="line">    <span class="comment"># 小于 10 人的群过滤掉</span></span><br><span class="line">    <span class="keyword">if</span> len(curr_group) &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    curr_group.update_group(members_details=<span class="keyword">True</span>)</span><br><span class="line">    print(curr_group.name + <span class="string">"一共有："</span> + str(len(curr_group)) + <span class="string">"人\n"</span>)</span><br><span class="line">    msg = stats_sex(curr_group)</span><br><span class="line">    curr_group.send(curr_group.name + <span class="string">"群，一共有："</span> + str(len(curr_group)) + <span class="string">"人\n"</span> + msg)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;文中涉及的图片涉及个人隐私，仅做举例，请勿传播&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;查看微信好友男女比例&lt;/li&gt;&lt;li&gt;查看好友地区分布&lt;/li&gt;&lt;li&gt;群性别统计&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pyecharts" scheme="https://lruihao.cn/tags/pyecharts/"/>
    
      <category term="jieba" scheme="https://lruihao.cn/tags/jieba/"/>
    
  </entry>
  
  <entry>
    <title>基本python实现的爬取微信好友头像，并拼接成大图</title>
    <link href="https://lruihao.cn/posts/wximgpy.html"/>
    <id>https://lruihao.cn/posts/wximgpy.html</id>
    <published>2019-04-20T05:32:58.000Z</published>
    <updated>2019-04-22T07:17:49.187Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>Python通过wxpy登录微信网页版，爬取好友所有头像并拼接成一张大图。然后删除所有子图。(注释相关代码可以不删除)<br><strong><em>文中涉及的图片涉及个人隐私，仅做举例，请勿传播</em></strong><br><strong>文中编码由Sunbelife提供，来自他的同名微信公众号，本博仅用于学习，侵删</strong></p></div><a id="more"></a><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><img src="/images/loading_img.gif" data-original="/posts/wximgpy/1.jpg" title="我的微信好友全家福"><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><ul><li>wxpy（Pythone登录微信）</li><li>pillow（拼接头像）</li><li>os（文件夹操作）</li><li>math（数学计算）</li></ul><blockquote><p><a href="https://github.com/youfou/wxpy" rel="external nofollow noopener noreferrer" target="_blank">wxpy</a>:<br>&ensp;&ensp;wxpy 在 itchat 的基础上，通过大量接口优化提升了模块的易用性，并进行丰富的功能扩展。<br><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320027235877860c87af5544f25a8deeb55141d60c5000" rel="external nofollow noopener noreferrer" target="_blank">PIL</a>：<br>&ensp;&ensp;Python Imaging Library，已经是Python平台事实上的图像处理标准库了。PIL功能非常强大，但API却非常简单易用。由于PIL仅支持到Python 2.7，加上年久失修，于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫Pillow，支持最新Python 3.x，又加入了许多新特性，因此，我们可以直接安装使用Pillow。</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install -U wxpy -i &quot;https://pypi.doubanio.com/simple/&quot;</span><br><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><blockquote><p>如果在Python IDE 运行出错，可能是因为微信好友的id是特殊字符，在IDE打印出错，注释掉代码36行即可。</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## 获取文件所在的绝对路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dir</span><span class="params">(sys_arg)</span>:</span></span><br><span class="line">sys_arg = sys_arg.split(<span class="string">"/"</span>)</span><br><span class="line"></span><br><span class="line">dir_str = <span class="string">""</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> cur_dir <span class="keyword">in</span> sys_arg:</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> count == len(sys_arg):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">dir_str = dir_str + cur_dir + <span class="string">"/"</span></span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> dir_str</span><br><span class="line"></span><br><span class="line">curr_dir = get_dir(sys.argv[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">bot = Bot()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 机器人账号自身</span></span><br><span class="line">myself = bot.self</span><br><span class="line">my_friends = bot.friends(update=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(curr_dir + <span class="string">"group-images/"</span>):</span><br><span class="line">os.mkdir(curr_dir + <span class="string">"group-images/"</span>)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> friend <span class="keyword">in</span> my_friends:</span><br><span class="line">print(friend.nick_name)</span><br><span class="line">friend.get_avatar(curr_dir + <span class="string">"group-images/"</span> + str(count) + <span class="string">".jpg"</span>)</span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取下载的头像文件</span></span><br><span class="line">ls = os.listdir(curr_dir + <span class="string">'group-images'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除非 .jpg 文件</span></span><br><span class="line"><span class="keyword">for</span> filter_ls <span class="keyword">in</span> ls:</span><br><span class="line"><span class="keyword">if</span> <span class="string">".jpg"</span> <span class="keyword">in</span> filter_ls:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">ls.remove(filter_ls)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">ls.sort(key=<span class="keyword">lambda</span> x:int(x[:<span class="number">-4</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像墙尺寸</span></span><br><span class="line">image_size = <span class="number">2560</span></span><br><span class="line"></span><br><span class="line">each_size = math.floor(image_size/math.floor(math.sqrt(len(ls))))</span><br><span class="line">x_lines = math.ceil(math.sqrt(len(ls)))</span><br><span class="line">y_lines = math.ceil(math.sqrt(len(ls)))</span><br><span class="line">image = Image.new(<span class="string">'RGB'</span>, (each_size * x_lines, each_size * y_lines))</span><br><span class="line"></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file_names <span class="keyword">in</span> ls:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">img = Image.open(curr_dir + <span class="string">"group-images/"</span> + file_names)</span><br><span class="line">print(<span class="string">"正在处理"</span> + file_names.split(<span class="string">'.jpg'</span>)[<span class="number">0</span>] + <span class="string">"/"</span> + str(len(ls)))</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">img = img.resize((each_size, each_size))</span><br><span class="line">image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">x += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> x == x_lines:</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">img = image.save(curr_dir + <span class="string">"all.jpg"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">shutil.rmtree(curr_dir + <span class="string">"group-images/"</span>)</span><br><span class="line">print(<span class="string">"收尾，清理临时文件"</span>)</span><br><span class="line"><span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">print(<span class="string">"没什么好删的"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"！！！\n生成完毕了，放在了目录"</span> + curr_dir + <span class="string">"，去看看吧。"</span>)</span><br><span class="line">print(<span class="string">"工具作者：@Sunbelife（新浪微博）"</span>)</span><br><span class="line">print(<span class="string">"公众号：Sunbelife"</span>)</span><br><span class="line">print(<span class="string">"感谢使用"</span>)</span><br><span class="line">print(<span class="string">"v1.2"</span>)</span><br><span class="line">print(<span class="string">"2019.4.18"</span>)</span><br></pre></td></tr></table></figure><h1 id="群友全家福"><a href="#群友全家福" class="headerlink" title="群友全家福"></a>群友全家福</h1><blockquote><p>修改11行群名称</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="keyword">False</span>)</span><br><span class="line">roomslist = itchat.get_chatrooms(update=<span class="keyword">True</span>)[<span class="number">0</span>:]</span><br><span class="line">itchat.dump_login_status() <span class="comment"># 显示所有的群聊信息，默认是返回保存到通讯录中的群聊</span></span><br><span class="line">myroom=itchat.search_chatrooms(name=<span class="string">u'绥宁一中高396班'</span>) <span class="comment">#群聊名称</span></span><br><span class="line">gsq=itchat.update_chatroom(myroom[<span class="number">0</span>][<span class="string">'UserName'</span>], detailedMember=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">"./group-images/"</span>):</span><br><span class="line">    os.mkdir(<span class="string">"./group-images/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gsq[<span class="string">'MemberList'</span>]:</span><br><span class="line">    print(i[<span class="string">"UserName"</span>])</span><br><span class="line">    img = itchat.get_head_img(userName=i[<span class="string">"UserName"</span>],chatroomUserName=myroom[<span class="number">0</span>][<span class="string">'UserName'</span>])</span><br><span class="line">    fileImage = open(<span class="string">"./group-images/"</span> + str(num) + <span class="string">".jpg"</span>,<span class="string">'wb'</span>)</span><br><span class="line">    fileImage.write(img)</span><br><span class="line">    fileImage.close()</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">ls = os.listdir(<span class="string">'./group-images'</span>)</span><br><span class="line">each_size = int(math.sqrt(float(<span class="number">640</span>*<span class="number">640</span>)/len(ls)))</span><br><span class="line">lines = int(<span class="number">640</span>/each_size)</span><br><span class="line">image = Image.new(<span class="string">'RGBA'</span>, (<span class="number">640</span>, <span class="number">640</span>))</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ls)+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        img = Image.open(<span class="string">"./group-images/"</span> + str(i) + <span class="string">".jpg"</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        print(<span class="string">"Error"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img = img.resize((each_size, each_size), Image.ANTIALIAS)</span><br><span class="line">        image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> x == lines:</span><br><span class="line">            x = <span class="number">0</span></span><br><span class="line">            y += <span class="number">1</span></span><br><span class="line">image.save(<span class="string">"all.png"</span>)</span><br><span class="line">shutil.rmtree(<span class="string">"./group-images"</span>)</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/wximgpy/2.png" title="绥宁一中高396班"><blockquote><p>加个列表，加个循环实现自动爬取所有群聊头像并发送</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="keyword">False</span>)</span><br><span class="line">roomslist = itchat.get_chatrooms(update=<span class="keyword">True</span>)[<span class="number">0</span>:]</span><br><span class="line">itchat.dump_login_status() <span class="comment"># 显示所有的群聊信息，默认是返回保存到通讯录中的群聊</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> room <span class="keyword">in</span> roomslist:</span><br><span class="line">    print(room[<span class="string">'UserName'</span>])</span><br><span class="line">    gsq=itchat.update_chatroom(room[<span class="string">'UserName'</span>], detailedMember=<span class="keyword">True</span>)</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">"./group-images/"</span>):</span><br><span class="line">        os.mkdir(<span class="string">"./group-images/"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> gsq[<span class="string">'MemberList'</span>]:</span><br><span class="line">        print(i[<span class="string">"UserName"</span>])</span><br><span class="line">        img = itchat.get_head_img(userName=i[<span class="string">"UserName"</span>],chatroomUserName=room[<span class="string">'UserName'</span>])</span><br><span class="line">        fileImage = open(<span class="string">"./group-images/"</span> + str(num) + <span class="string">".jpg"</span>,<span class="string">'wb'</span>)</span><br><span class="line">        fileImage.write(img)</span><br><span class="line">        fileImage.close()</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    ls = os.listdir(<span class="string">'./group-images'</span>)</span><br><span class="line">    each_size = int(math.sqrt(float(<span class="number">640</span>*<span class="number">640</span>)/len(ls)))</span><br><span class="line">    lines = int(<span class="number">640</span>/each_size)</span><br><span class="line">    image = Image.new(<span class="string">'RGB'</span>, (<span class="number">640</span>, <span class="number">640</span>))</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    y = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ls)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            img = Image.open(<span class="string">"./group-images/"</span> + str(i) + <span class="string">".jpg"</span>)</span><br><span class="line">        <span class="keyword">except</span> IOError:</span><br><span class="line">            print(<span class="string">"Error"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img = img.resize((each_size, each_size), Image.ANTIALIAS)</span><br><span class="line">            image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> x == lines:</span><br><span class="line">                x = <span class="number">0</span></span><br><span class="line">                y += <span class="number">1</span></span><br><span class="line">    image.save(<span class="string">"all.jpg"</span>)</span><br><span class="line">    itchat.send(<span class="string">"写了个好玩的… 测试一下"</span>, room[<span class="string">'UserName'</span>])</span><br><span class="line">    itchat.send_image(<span class="string">"all.jpg"</span>, room[<span class="string">'UserName'</span>])</span><br><span class="line">    shutil.rmtree(<span class="string">"./group-images"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;Python通过wxpy登录微信网页版，爬取好友所有头像并拼接成一张大图。然后删除所有子图。(注释相关代码可以不删除)&lt;br&gt;&lt;strong&gt;&lt;em&gt;文中涉及的图片涉及个人隐私，仅做举例，请勿传播&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;文中编码由Sunbelife提供，来自他的同名微信公众号，本博仅用于学习，侵删&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pillow" scheme="https://lruihao.cn/tags/pillow/"/>
    
  </entry>
  
  <entry>
    <title>用记事本编写第一个java程序</title>
    <link href="https://lruihao.cn/posts/HelloJava.html"/>
    <id>https://lruihao.cn/posts/HelloJava.html</id>
    <published>2019-04-19T11:49:54.000Z</published>
    <updated>2019-04-27T02:23:01.939Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>之所以用记事本来写不是为了装X或者什么的。反而恰恰是返璞归真，因为在用java语言进行程序开发时，首先是以纯文本的方式编写所有的java源程序，并保存成以<code>.java</code>为后缀的文件；然后将这些源程序用<code>javac</code>编译成<code>.class</code>后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被java虚拟机（JVM）执行的代码。最后用java运行工具在JVM执行java应用程序。<br>由于JVM可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。</p><ul><li>javac</li><li>java</li></ul></div><a id="more"></a> <img src="/images/loading_img.gif" data-original="/posts/HelloJava/2.png"><h1 id="编写java"><a href="#编写java" class="headerlink" title="编写java"></a>编写java</h1><p>用记事本编辑java文件，并且把后缀改成<code>.java</code>，文件名和类名要一样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="打开cmd"><a href="#打开cmd" class="headerlink" title="打开cmd"></a>打开cmd</h1><img src="/images/loading_img.gif" data-original="/posts/HelloJava/1.png">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;之所以用记事本来写不是为了装X或者什么的。反而恰恰是返璞归真，因为在用java语言进行程序开发时，首先是以纯文本的方式编写所有的java源程序，并保存成以&lt;code&gt;.java&lt;/code&gt;为后缀的文件；然后将这些源程序用&lt;code&gt;javac&lt;/code&gt;编译成&lt;code&gt;.class&lt;/code&gt;后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被java虚拟机（JVM）执行的代码。最后用java运行工具在JVM执行java应用程序。&lt;br&gt;由于JVM可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;javac&lt;/li&gt;&lt;li&gt;java&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="HelloWorld" scheme="https://lruihao.cn/tags/HelloWorld/"/>
    
  </entry>
  
  <entry>
    <title>java正则表达式练习</title>
    <link href="https://lruihao.cn/posts/RegexDemo.html"/>
    <id>https://lruihao.cn/posts/RegexDemo.html</id>
    <published>2019-04-18T14:04:21.000Z</published>
    <updated>2019-04-18T14:15:35.682Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//       Pattern类 正则表达式的编译表示。</span></span><br><span class="line">        Pattern pattern = Pattern.compile(<span class="string">"^[a-zA-Z0-9_!#$%&amp;'*+/=?`&#123;|&#125;~^.-]+@[a-zA-Z0-9.-]+$"</span>);</span><br><span class="line">        String[] emails = &#123;<span class="string">"admin@lruihao.cn"</span>, <span class="string">"lruihao.cn"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String email :</span><br><span class="line">                emails) &#123;</span><br><span class="line"><span class="comment">//Matcher 通过解释Pattern对字符序列执行匹配操作的引擎</span></span><br><span class="line">            Matcher matcher = pattern.matcher(email);</span><br><span class="line">            System.out.println(email + <span class="string">"匹配结果："</span> + matcher.matches());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="meta">@lruihao</span>.cn匹配结果：<span class="keyword">true</span></span><br><span class="line">lruihao.cn匹配结果：<span class="keyword">false</span></span><br></pre></td></tr></table></figure><h1 id="电话"><a href="#电话" class="headerlink" title="电话"></a>电话</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Pattern patter=Pattern.compile(<span class="string">"^[1][3,4,5,7,8][0-9]&#123;9&#125;$"</span>);</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String telnum=sc.nextLine();</span><br><span class="line">sc.close();</span><br><span class="line">Matcher matcher=patter.matcher(telnum);</span><br><span class="line">System.out.println(telnum+<span class="string">"匹配结果： "</span>+matcher.matches());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前的httpSession</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpSession <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> getRequest().getSession();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机号验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 验证通过返回true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMobile</span><span class="params">(<span class="keyword">final</span> String str)</span> </span>&#123;</span><br><span class="line">  Pattern p = <span class="keyword">null</span>;</span><br><span class="line">  Matcher m = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">  p = Pattern.compile(<span class="string">"^[1][3,4,5,7,8][0-9]&#123;9&#125;$"</span>); <span class="comment">// 验证手机号</span></span><br><span class="line">  m = p.matcher(str);</span><br><span class="line">  b = m.matches();</span><br><span class="line">  <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 电话号码验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 验证通过返回true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPhone</span><span class="params">(<span class="keyword">final</span> String str)</span> </span>&#123;</span><br><span class="line">  Pattern p1 = <span class="keyword">null</span>, p2 = <span class="keyword">null</span>;</span><br><span class="line">  Matcher m = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">  p1 = Pattern.compile(<span class="string">"^[0][1-9]&#123;2,3&#125;-[0-9]&#123;5,10&#125;$"</span>); <span class="comment">// 验证带区号的</span></span><br><span class="line">  p2 = Pattern.compile(<span class="string">"^[1-9]&#123;1&#125;[0-9]&#123;5,8&#125;$"</span>);     <span class="comment">// 验证没有区号的</span></span><br><span class="line">  <span class="keyword">if</span> (str.length() &gt; <span class="number">9</span>) &#123;</span><br><span class="line">    m = p1.matcher(str);</span><br><span class="line">    b = m.matches();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    m = p2.matcher(str);</span><br><span class="line">    b = m.matches();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="身份证"><a href="#身份证" class="headerlink" title="身份证"></a>身份证</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 身份证正则表达式16或18 */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String IDCARD=<span class="string">"((11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65)[0-9]&#123;4&#125;)"</span> +</span><br><span class="line">           <span class="string">"(([1|2][0-9]&#123;3&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;"</span> +</span><br><span class="line">           <span class="string">"[Xx0-9])|([0-9]&#123;2&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;))"</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="正则表达式" scheme="https://lruihao.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>
