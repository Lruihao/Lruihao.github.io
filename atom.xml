<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菠菜眾長</title>
  
  <subtitle>李瑞豪的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lruihao.cn/"/>
  <updated>2020-07-25T13:17:45.889Z</updated>
  <id>https://lruihao.cn/</id>
  
  <author>
    <name>李瑞豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cell-blog 功能介绍与安装</title>
    <link href="https://lruihao.cn/posts/cell-blog-install.html"/>
    <id>https://lruihao.cn/posts/cell-blog-install.html</id>
    <published>2020-07-25T12:51:11.000Z</published>
    <updated>2020-07-25T13:17:45.889Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>基于Laravel7开发，Markdown语法的个人独立博客。<a href="https://github.com/Lruihao/cell-blog" rel="external nofollow noopener noreferrer" target="_blank">Cell Blog</a>,也是我的毕业设计作品，目前已開源。</p></div><a id="more"></a><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul><li>支持Markdown,文章实时预览效果</li><li>支持多种编程语言代码高亮</li><li>编辑器图片上传</li><li>后台上传文件管理</li><li>文章搜索</li><li>文章分类</li><li>文章标签</li><li>热门文章</li><li>随机格言</li><li>文章管理(发布，评论开关，排序)</li><li>自定义导航(显示开关，排序)</li><li>自定义页面(发布开关)</li><li>友情链接(显示开关，排序)</li><li><a href="https://github.com/Lruihao/cos-album" rel="external nofollow noopener noreferrer" target="_blank">COS桶相册</a></li><li>丰富的博客配置(方便扩展，支持自定义JS脚本)</li><li>不蒜子计数</li><li>Leancloud计数</li><li>Valine评论插件</li><li>文章分享插件</li></ul><h1 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h1><p><img src="/images/loading_img.gif" data-original="https://i.loli.net/2020/05/11/vHeNRG4Qi7ljrM8.png" alt="前台首页.png"><br><img src="/images/loading_img.gif" data-original="https://i.loli.net/2020/05/11/tMEQe7WvYmw3jd4.png" alt="管理文章.png"><br><img src="/images/loading_img.gif" data-original="https://i.loli.net/2020/05/11/DeOWyJ3zluLKvBn.png" alt="编辑文章.png"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>注意事项：PHP取消禁用函数<code>putenv()</code>和<code>symlink()</code>，安装<code>fileinfo</code>扩展。</p></blockquote><p>下载<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Lruihao/cell-blog.git</span><br></pre></td></tr></table></figure><p></p><p>进入站点<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd cell-blog</span><br></pre></td></tr></table></figure><p></p><p>生成.env<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure><p></p><p>编辑.env环境配置<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">APP_URL=http://localhost #使用本地文件系统存储文件时，必须填写正确地址</span><br><span class="line">APP_DEBUG=false #关闭调试</span><br><span class="line">DB_HOST= #数据库地址</span><br><span class="line">DB_PORT=3306 #数据库端口</span><br><span class="line">DB_DATABASE= #数据库名称</span><br><span class="line">DB_USERNAME= #数据库用户</span><br><span class="line">DB_PASSWORD= #数据库密码</span><br></pre></td></tr></table></figure><p></p><p>打开<code>app\Providers\AppServiceProvider.php</code>,注释<code>SystemController:load()</code> 防止后续步骤报错<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function boot()</span><br><span class="line">&#123;</span><br><span class="line">    Schema::defaultStringLength(191);</span><br><span class="line">    //SystemController::load();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>安装项目依赖<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure><p></p><p>生成key<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure><p></p><p>运行数据迁移和后台数据填充</p><blockquote><p><code>php artisan admin:install</code>已包含数据迁移命令<code>php artisan migrate</code><br><code>G:\cell-blog\app\Admin directory already exists !</code>无需理会，继续执行剩下命令即可。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:install</span><br><span class="line"></span><br><span class="line">php artisan admin:import media-manager</span><br><span class="line"></span><br><span class="line">php artisan db:seed</span><br></pre></td></tr></table></figure><p>默认下使用了本地文件系统，创建storage目录在public的软链接<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan storage:link</span><br></pre></td></tr></table></figure><p></p><p>打开<code>app\Providers\AppServiceProvider.php</code>,取消注释<code>SystemController:load()</code><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function boot()</span><br><span class="line">&#123;</span><br><span class="line">    Schema::defaultStringLength(191);</span><br><span class="line">    SystemController::load();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>将博客网站根目录指向入口public目录</p><p>如果使用Nginx，要设置伪静态<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>启动服务后，在浏览器打开<code>http://localhost/admin/</code>,使用用户名<code>admin</code>和密码<code>admin</code>登录.</p><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>Cell Blog is open-sourced software licensed under the MIT license.</p><p><img src="/images/loading_img.gif" data-original="https://starchart.cc/Lruihao/cell-blog.svg" alt="Stargazers over time"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;基于Laravel7开发，Markdown语法的个人独立博客。&lt;a href=&quot;https://github.com/Lruihao/cell-blog&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Cell Blog&lt;/a&gt;,也是我的毕业设计作品，目前已開源。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Markdown" scheme="https://lruihao.cn/tags/Markdown/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
      <category term="Laravel" scheme="https://lruihao.cn/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>cell-blog 开发记录</title>
    <link href="https://lruihao.cn/posts/cell-blog-dev.html"/>
    <id>https://lruihao.cn/posts/cell-blog-dev.html</id>
    <published>2020-07-25T12:42:42.000Z</published>
    <updated>2020-07-25T12:50:11.153Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>Cell Blog 开发记录，<a href="https://github.com/Lruihao/cell-blog" rel="external nofollow noopener noreferrer" target="_blank">项目地址</a></p></div><a id="more"></a><h1 id="搭建php环境"><a href="#搭建php环境" class="headerlink" title="搭建php环境"></a>搭建php环境</h1><ol><li>安装wampserver</li><li>安装composer</li><li>更换aliyun源<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure></li></ol><h1 id="新建laravel项目"><a href="#新建laravel项目" class="headerlink" title="新建laravel项目"></a>新建laravel项目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist laravel/laravel cell-blog &quot;7.*&quot;</span><br></pre></td></tr></table></figure><p>或者<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer global require laravel/installer</span><br><span class="line">laravel new blog</span><br></pre></td></tr></table></figure><p></p><h1 id="下载debugbar"><a href="#下载debugbar" class="headerlink" title="下载debugbar"></a>下载debugbar</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require barryvdh/laravel-debugbar --dev</span><br></pre></td></tr></table></figure><h1 id="修改语言时区"><a href="#修改语言时区" class="headerlink" title="修改语言时区"></a>修改语言时区</h1><p>修改config/app.php，将local的值 en 改成 zh-CN(laravel-admin自带zh-CN)：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 时区</span><br><span class="line">&apos;timezone&apos; =&gt; &apos;Asia/Shanghai&apos;,</span><br><span class="line"># 语言</span><br><span class="line">&apos;locale&apos; =&gt; &apos;zh-CN&apos;,</span><br></pre></td></tr></table></figure><p></p><h1 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h1><p>首先确保安装好了laravel，并且数据库连接设置正确。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">APP_URL=http://cell.blog</span><br><span class="line"></span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=127.0.0.1</span><br><span class="line">DB_PORT=3307</span><br><span class="line">DB_DATABASE=cell_blog</span><br><span class="line">DB_USERNAME=root</span><br><span class="line">DB_PASSWORD=123456</span><br></pre></td></tr></table></figure><p></p><h1 id="下载laravel-admin"><a href="#下载laravel-admin" class="headerlink" title="下载laravel-admin"></a>下载laravel-admin</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd cell-blog</span><br><span class="line">composer require encore/laravel-admin</span><br></pre></td></tr></table></figure><blockquote><p>卸载命令<code>composer remove xxx</code></p></blockquote><p>然后运行下面的命令来发布资源：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=&quot;Encore\Admin\AdminServiceProvider&quot;</span><br></pre></td></tr></table></figure><p></p><p>在该命令会生成配置文件<code>config/admin.php</code>，可以在里面修改安装的地址、数据库连接、以及表名，建议都是用默认配置不修改。</p><p>然后运行下面的命令完成安装：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:install</span><br></pre></td></tr></table></figure><p></p><blockquote><p>运行这个命令的时候，如果遇到了下面的错误:<br><code>SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 1000 bytes (SQL: alter tableusersadd uniqueusers_email_unique(email))</code><br>参考这个issue来解决 <a href="https://github.com/z-song/laravel-admin/issues/1541" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/z-song/laravel-admin/issues/1541</a><br>在<code>app\Providers\AppServiceProvider.php</code>添加默认值<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Providers;</span><br><span class="line"></span><br><span class="line">use Illuminate\Support\ServiceProvider;</span><br><span class="line">use Illuminate\Support\Facades\Schema; //add fixed sql</span><br><span class="line"></span><br><span class="line">class AppServiceProvider extends ServiceProvider</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Bootstrap any application services.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function boot()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::defaultStringLength(191); //add fixed sql</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Register any application services.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function register()</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><p>启动服务后，在浏览器打开 <code>http://localhost/admin/</code> ,使用用户名 <code>admin</code> 和密码 <code>admin</code> 登录.</p><blockquote><p>报错<code>Disk [admin] not configured, please add a disk config in config/filesystems.php</code></p></blockquote><p>在<code>config/filesystems.php</code>中disks处添加以下配置后执行<code>php artisan storage:link</code>来创建软链接（windows和linux的软链接不一样不能直接复制！）</p><blockquote><p>宝塔执行时删除禁用函数putenv(),symlink()</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&apos;admin&apos; =&gt; [</span><br><span class="line">    &apos;driver&apos; =&gt; &apos;local&apos;,</span><br><span class="line">    &apos;root&apos; =&gt; storage_path(&apos;app/public/system&apos;),</span><br><span class="line">    &apos;url&apos; =&gt; env(&apos;APP_URL&apos;).&apos;/storage/system&apos;,</span><br><span class="line">    &apos;visibility&apos; =&gt; &apos;public&apos;,</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">&apos;admin&apos; =&gt; [</span><br><span class="line">    &apos;driver&apos; =&gt; &apos;local&apos;,</span><br><span class="line">    &apos;root&apos; =&gt; public_path(&apos;uploads&apos;),</span><br><span class="line">    &apos;url&apos; =&gt; env(&apos;APP_URL&apos;).&apos;/public/uploads/&apos;,</span><br><span class="line">    &apos;visibility&apos; =&gt; &apos;public&apos;,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h1 id="下载dcat-admin"><a href="#下载dcat-admin" class="headerlink" title="下载dcat-admin"></a>下载dcat-admin</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require dcat/laravel-admin</span><br></pre></td></tr></table></figure><p>然后运行下面的命令来发布资源：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:publish</span><br></pre></td></tr></table></figure><p></p><p>在该命令会生成配置文件<code>config/admin.php</code>，可以在里面修改安装的地址、数据库连接、以及表名，建议都是用默认配置不修改。</p><p>然后运行下面的命令完成安装：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:install</span><br></pre></td></tr></table></figure><p></p><h1 id="迁移文件创建表"><a href="#迁移文件创建表" class="headerlink" title="迁移文件创建表"></a>迁移文件创建表</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_articles_table</span><br><span class="line">php artisan make:migration create_tags_table</span><br><span class="line">php artisan make:migration create_categories_table</span><br><span class="line">php artisan make:migration create_article_tags_table</span><br><span class="line">php artisan make:migration create_navigations_table</span><br><span class="line">php artisan make:migration create_friendship_links_table</span><br><span class="line">php artisan make:migration create_pages_table</span><br><span class="line">php artisan make:migration create_systems_table</span><br><span class="line">php artisan make:migration create_mottoes_table</span><br></pre></td></tr></table></figure><p>运行迁移<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><p></p><h1 id="创建模型model"><a href="#创建模型model" class="headerlink" title="创建模型model"></a>创建模型model</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model Models/Article</span><br><span class="line">php artisan make:model Models/Category</span><br><span class="line">php artisan make:model Models/Tag</span><br><span class="line">php artisan make:model Models/Navigation</span><br><span class="line">php artisan make:model Models/FriendshipLink</span><br><span class="line">php artisan make:model Models/Page</span><br><span class="line">php artisan make:model Models/System</span><br><span class="line">php artisan make:model Models/Motto</span><br></pre></td></tr></table></figure><h1 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:make ArticleController --model=App\Models\Article</span><br><span class="line">php artisan admin:make CategoryController --model=App\Models\Category</span><br><span class="line">php artisan admin:make TagController --model=App\Models\Tag</span><br><span class="line">php artisan admin:make NavigationController --model=App\Models\Navigation</span><br><span class="line">php artisan admin:make FriendshipLinkController --model=App\Models\FriendshipLink</span><br><span class="line">php artisan admin:make PageController --model=App\Models\Page</span><br><span class="line">php artisan admin:make SystemController --model=App\Models\System</span><br><span class="line">php artisan admin:make MottoController --model=App\Models\Motto</span><br></pre></td></tr></table></figure><h1 id="添加后台路由"><a href="#添加后台路由" class="headerlink" title="添加后台路由"></a>添加后台路由</h1><p>app/Admin/routes.php<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$router-&gt;resource(&apos;articles&apos;, ArticleController::class);</span><br><span class="line">$router-&gt;resource(&apos;categories&apos;, CategoryController::class);</span><br><span class="line">$router-&gt;resource(&apos;tags&apos;, TagController::class);</span><br><span class="line">$router-&gt;resource(&apos;navigations&apos;, NavigationController::class);</span><br><span class="line">$router-&gt;resource(&apos;friendship-links&apos;, FriendshipLinkController::class);</span><br><span class="line">$router-&gt;resource(&apos;pages&apos;, PageController::class);</span><br><span class="line">$router-&gt;resource(&apos;systems&apos;, SystemController::class);</span><br><span class="line">$router-&gt;resource(&apos;mottoes&apos;, MottoController::class);</span><br></pre></td></tr></table></figure><p></p><h1 id="editormd安装"><a href="#editormd安装" class="headerlink" title="editormd安装"></a>editormd安装</h1><p><a href="https://github.com/ShareManT/laravel-admin-ext-editormd" rel="external nofollow noopener noreferrer" target="_blank">editormd</a><br><a href="https://github.com/ShareManT/laravel-admin-ext-editormd/issues/3" rel="external nofollow noopener noreferrer" target="_blank">github图像问题</a></p><h2 id="存放本地表情"><a href="#存放本地表情" class="headerlink" title="存放本地表情"></a>存放本地表情</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public\vendor\laravel-admin-ext\editormd\editormd-1.5.0\images\emojis</span><br></pre></td></tr></table></figure><p>修改editormd.js及editormd.min.js<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Emoji graphics files url path</span><br><span class="line">editormd.emoji     = &#123;</span><br><span class="line">    path  : &quot;/iamges/emojis/&quot;,</span><br><span class="line">    ext   : &quot;.png&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><h2 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h2><h3 id="csrf-419错误"><a href="#csrf-419错误" class="headerlink" title="csrf 419错误"></a>csrf 419错误</h3><p>可以在<code>VerifyCsrfToken.php</code>中添加白名单跳过验证，或者手动添加csrf验证器：</p><p>修改image-dialog.js的<code>var dialogContent</code><br><a href="https://www.jianshu.com/p/8101f7bc80f6" rel="external nofollow noopener noreferrer" target="_blank">参考</a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if (settings.crossDomainUpload)</span><br><span class="line">&#123;</span><br><span class="line">    action += &quot;&amp;callback=&quot; + settings.uploadCallbackURL + &quot;&amp;dialog_id=editormd-image-dialog-&quot; + guid;</span><br><span class="line">&#125;</span><br><span class="line">//添加csrf验证</span><br><span class="line">var csrfToken = $(&apos;meta[name=&quot;csrf-token&quot;]&apos;).attr(&apos;content&apos;);</span><br><span class="line">var csrfField = &quot;&quot;;</span><br><span class="line">if (csrfToken) &#123;</span><br><span class="line">    csrfField = &quot;&lt;input type=&apos;hidden&apos; name=&apos;_token&apos; value=&apos;&quot; + csrfToken + &quot;&apos; /&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h1 id="markdown转HTML"><a href="#markdown转HTML" class="headerlink" title="markdown转HTML"></a>markdown转HTML</h1><p><a href="https://www.zhiqiexing.com/119.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhiqiexing.com/119.html</a><br><a href="https://github.com/GrahamCampbell/Laravel-Markdown" rel="external nofollow noopener noreferrer" target="_blank">Laravel Markdown安装</a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer require graham-campbell/markdown</span><br><span class="line">php artisan vendor:publish</span><br></pre></td></tr></table></figure><p></p><p>扩展表格<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require league/commonmark</span><br></pre></td></tr></table></figure><p></p><p>config/markdown.php<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;extensions&apos; =&gt; [</span><br><span class="line">        League\CommonMark\Extension\TaskList\TaskListExtension::class,</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><p></p><h1 id="Eloquent-模型事件"><a href="#Eloquent-模型事件" class="headerlink" title="Eloquent 模型事件"></a>Eloquent 模型事件</h1><p>Eloquent 模型可以触发事件，允许你在模型生命周期中的多个时间点调用如下这些方法：retrieved, creating, created, updating, updated, saving, saved, deleting, deleted, restoring, restored。事件允许你在一个指定模型类每次保存或更新的时候执行代码。</p><p>retrieved 事件会在从数据库中获取已存在模型时触发。当一个新模型被首次保存的时候，creating 和 created 事件会被触发。如果一个模型已经在数据库中存在并调用 save 方法，updating/updated 事件会被触发，无论是创建还是更新，saving/saved 事件都会被触发。</p><h1 id="添加后台验证码"><a href="#添加后台验证码" class="headerlink" title="添加后台验证码"></a>添加后台验证码</h1><p>依赖php扩展<code>fileinfo</code><br><a href="https://learnku.com/articles/32842" rel="external nofollow noopener noreferrer" target="_blank">添加验证码</a></p><h1 id="Media-manager"><a href="#Media-manager" class="headerlink" title="Media manager"></a>Media manager</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer require laravel-admin-ext/media-manager</span><br><span class="line">php artisan admin:import media-manager</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&apos;extensions&apos; =&gt; [</span><br><span class="line">    &apos;media-manager&apos; =&gt; [</span><br><span class="line">        // Select a local disk that you configured in `config/filesystem.php`</span><br><span class="line">        &apos;disk&apos; =&gt; &apos;public&apos;</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h1 id="给laravel-admin增加锁屏功能"><a href="#给laravel-admin增加锁屏功能" class="headerlink" title="给laravel-admin增加锁屏功能"></a>给laravel-admin增加锁屏功能</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require laravel-admin-ext/lock-screen</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&apos;route&apos; =&gt; [</span><br><span class="line">    &apos;prefix&apos; =&gt; &apos;demo&apos;,</span><br><span class="line"></span><br><span class="line">    &apos;namespace&apos;     =&gt; &apos;App\\Admin\\Controllers&apos;,</span><br><span class="line"></span><br><span class="line">    // 在中间件数组中加上&apos;admin.lock&apos;</span><br><span class="line">    &apos;middleware&apos;    =&gt; [&apos;web&apos;, &apos;admin&apos;, &apos;admin.lock&apos;],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h1 id="前台设计"><a href="#前台设计" class="headerlink" title="前台设计"></a>前台设计</h1><p>创建控制器<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller HomeController</span><br><span class="line">php artisan make:controller ArticleController</span><br><span class="line">php artisan make:controller CategoryController</span><br><span class="line">php artisan make:controller TagController</span><br><span class="line">php artisan make:controller PageController</span><br></pre></td></tr></table></figure><p></p><h1 id="后台img灯箱"><a href="#后台img灯箱" class="headerlink" title="后台img灯箱"></a>后台img灯箱</h1><p><a href="https://github.com/laravel-admin-extensions/grid-lightbox" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/laravel-admin-extensions/grid-lightbox</a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">composer require laravel-admin-ext/grid-lightbox</span><br><span class="line"></span><br><span class="line">php artisan vendor:publish --tag=laravel-admin-grid-lightbox</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;Cell Blog 开发记录，&lt;a href=&quot;https://github.com/Lruihao/cell-blog&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Markdown" scheme="https://lruihao.cn/tags/Markdown/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
      <category term="Laravel" scheme="https://lruihao.cn/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>使用Python刷csdn访问量</title>
    <link href="https://lruihao.cn/posts/csdnvisiter.html"/>
    <id>https://lruihao.cn/posts/csdnvisiter.html</id>
    <published>2020-03-26T03:08:38.000Z</published>
    <updated>2020-03-26T03:26:25.486Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note default no-icon"><p>使用python模拟浏览器行为刷csdn访问量，脚本仅做学习，请勿滥用~</p></div><a id="more"></a><p>直接丢代码，把代码挂到服务器上可以策马奔腾~，也可以生成二进制文件放到Windows桌面上随时使用~<br><a href="/posts/pyinstallererror.html">打包exe参考</a><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'lruihao.cn'</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">opener = urllib.request.build_opener()</span><br><span class="line">opener.addheaders = [(<span class="string">'User-agent'</span>,</span><br><span class="line">                      <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_article_url</span><span class="params">(page,name)</span>:</span></span><br><span class="line">    endurl = <span class="string">"/"</span>+name+<span class="string">"/article/details/........"</span></span><br><span class="line">    print(name)</span><br><span class="line">    p = re.compile(endurl)</span><br><span class="line">    url = <span class="string">"http://blog.csdn.net/"</span>+name+<span class="string">"/article/list/"</span>+str(page)</span><br><span class="line">    <span class="comment"># 使用build_opener()是为了让python程序模仿浏览器进行访问</span></span><br><span class="line">    html = opener.open(url).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    allfinds = p.findall(html)</span><br><span class="line">    <span class="keyword">return</span> allfinds</span><br><span class="line">    <span class="comment">#print('allfinds',allfinds)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_do</span><span class="params">(allfinds)</span>:</span></span><br><span class="line">    urlBase = <span class="string">"http://blog.csdn.net"</span>  <span class="comment"># 需要将网址合并的部分</span></span><br><span class="line">    <span class="comment"># 页面中的网址有重复的，需要使用set进行去重复</span></span><br><span class="line">    mypages = list(set(allfinds))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(mypages)):</span><br><span class="line">        mypages[i] = urlBase + mypages[i]</span><br><span class="line">    print(<span class="string">'要刷的网页有：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        print(str(index), page)</span><br><span class="line">    <span class="comment"># 设置每个网页要刷的次数</span></span><br><span class="line">    brushNum = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 所有的页面都刷</span></span><br><span class="line">    print(<span class="string">'下面开始刷了哦：'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, page <span class="keyword">in</span> enumerate(mypages):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(brushNum):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pageContent = opener.open(page).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="comment"># 使用BeautifulSoup解析每篇博客的标题</span></span><br><span class="line">                soup = BeautifulSoup(pageContent)</span><br><span class="line">                blogTitle = str(soup.title.string)</span><br><span class="line">                blogTitle = blogTitle[<span class="number">0</span>:blogTitle.find(<span class="string">'-'</span>)]</span><br><span class="line">                print(str(j), blogTitle)</span><br><span class="line">            <span class="keyword">except</span> urllib.error.HTTPError:</span><br><span class="line">                print(<span class="string">'urllib.error.HTTPError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">            <span class="keyword">except</span> urllib.error.URLError:</span><br><span class="line">                print(<span class="string">'urllib.error.URLError'</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)  <span class="comment"># 出现错误，停几秒先</span></span><br><span class="line">                time.sleep(<span class="number">0.5</span>)  <span class="comment"># 正常停顿，以免服务器拒绝访问</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        print(<span class="string">"************第"</span>+str(page)+<span class="string">"页*************"</span>)</span><br><span class="line">        endurl = get_article_url(page,name)</span><br><span class="line">        start_do(endurl)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  name = input(<span class="string">"输入你的csdn用户名："</span>)</span><br><span class="line">  <span class="keyword">if</span> name==<span class="string">""</span>:</span><br><span class="line">    name = <span class="string">"qq_39520417"</span> <span class="comment">#cheung99857</span></span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    main(name)</span><br><span class="line">        print(<span class="string">"开始休息..."</span>)</span><br><span class="line">        time.sleep(<span class="number">40</span>)</span><br></pre></td></tr></table></figure><p></p><p>主函数也可以这样写实现同时刷多人的访问量，人多可以适当减少休眠时间，当然有兴趣的可以尝试一下多线程~<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 多用户</span></span><br><span class="line">    names = [<span class="string">"qq_39520417"</span>,<span class="string">"cheung99857"</span>]</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">            main(name)</span><br><span class="line">            print(<span class="string">"开始休息..."</span>)</span><br><span class="line">            <span class="comment"># 控制休眠时间相当于控制刷新的速度</span></span><br><span class="line">            time.sleep(<span class="number">30</span>)</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default no-icon&quot;&gt;&lt;p&gt;使用python模拟浏览器行为刷csdn访问量，脚本仅做学习，请勿滥用~&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="Python" scheme="https://lruihao.cn/categories/Backend/Python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="Python" scheme="https://lruihao.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CRON表达式的基本语法</title>
    <link href="https://lruihao.cn/posts/cron.html"/>
    <id>https://lruihao.cn/posts/cron.html</id>
    <published>2020-03-25T01:19:44.000Z</published>
    <updated>2020-03-25T04:49:38.749Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p><code>&lt;秒&gt; &lt;分钟&gt; &lt;小时&gt; &lt;日期 day-of-month&gt; &lt;月份&gt; &lt;星期 day-of-week&gt;</code></p></div><a id="more"></a><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><table><thead><tr><th>位置</th><th>字段</th><th>约束</th><th>取值</th><th>可使用的特殊符号</th></tr></thead><tbody><tr><td>1</td><td>秒</td><td>必须</td><td>0-59</td><td><code>, - * /</code></td></tr><tr><td>2</td><td>分钟</td><td>必须</td><td>0-59</td><td><code>, - * /</code></td></tr><tr><td>3</td><td>小时</td><td>必须</td><td>0-23（0 为午夜）</td><td><code>, - * /</code></td></tr><tr><td>4</td><td>日期</td><td>必须</td><td>1-31</td><td><code>, - * ? /</code></td></tr><tr><td>5</td><td>月份</td><td>必须</td><td>1-12、JAN-DEC</td><td><code>, - * /</code></td></tr><tr><td>6</td><td>星期</td><td>必须</td><td>1-7、SUN-SAT</td><td><code>, - ? /</code></td></tr></tbody></table><h1 id="特殊符号的用法"><a href="#特殊符号的用法" class="headerlink" title="特殊符号的用法"></a>特殊符号的用法</h1><table><thead><tr><th>符号</th><th>含义</th><th>用法</th></tr></thead><tbody><tr><td><code>*</code></td><td>所有值</td><td>代表一个字段的所有可能取值。如将<code>&lt;分钟&gt;</code> 设为<strong>*</strong>，表示每一分钟。</td></tr><tr><td><code>?</code></td><td>不指定值</td><td>用于可以使用该符号的两个字段中的一个，在一个表达式中只能出现一次。如任务执行时间为每月 10 号，星期几无所谓，那么表达式中<code>&lt;日期&gt;</code> 设为<strong>10</strong>，<code>&lt;星期&gt;</code> 设为<strong>?</strong>。</td></tr><tr><td><code>-</code></td><td>范围</td><td>如<code>&lt;小时&gt;</code> 为<strong>10-12</strong>，即10 点、11 点、12 点。</td></tr><tr><td><code>,</code></td><td><span class="text-nowrap">分隔多个值</span></td><td>如<code>&lt;星期&gt;</code> 为<strong>MON,WED,FRI</strong>，即周一、周三、周五。</td></tr><tr><td><code>/</code></td><td>增量</td><td>如<code>&lt;秒&gt;</code> 设为<strong>0/15</strong>，即从 0 秒开始，以 15 秒为增量，包括 0、15、30、45 秒；<strong>5/15</strong> 即 5、20、35、50 秒。<strong>*/</strong> 与<strong>0/</strong> 等效，如<code>&lt;日期&gt;</code> 设为<strong>1/3</strong>，即从每个月的第一天开始，每 3 天（即每隔 2 天）执行一次任务。</td></tr></tbody></table>各字段以空格或空白隔开。JAN-DEC、SUN-SAT 这些值不区分大小写，比如 MON 和 mon 效果一样。<br><h1 id="举例如下">举例如下</h1><table><thead><tr><th>表达式</th><th>说明</th></tr></thead><tbody><tr><td><code>0 0/5 * * * ?</code></td><td>每隔 5 分钟执行一次</td></tr><tr><td><code>10 0/5 * * * ?</code></td><td>每隔 5 分钟执行一次，每次执行都在分钟开始的 10 秒，例如 10:00:10、10:05:10 等等。</td></tr><tr><td><code style="white-space:nowrap">0 30 10-13 ? * WED,FRI</code></td><td>每周三和每周五的 10:30、11:30、12:30、13:30 执行。</td></tr><tr><td><code>0 0/30 8-9 5,20 * ?</code></td><td>每个月的 5 号和 20 号的 8 点和 10 点之间每隔 30 分钟执行一次，也就是 8:00、8:30、9:00 和 9:30。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;秒&amp;gt; &amp;lt;分钟&amp;gt; &amp;lt;小时&amp;gt; &amp;lt;日期 day-of-month&amp;gt; &amp;lt;月份&amp;gt; &amp;lt;星期 day-of-week&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="shell" scheme="https://lruihao.cn/tags/shell/"/>
    
      <category term="定时任务" scheme="https://lruihao.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>新冠疫情未返校未返工第N天之“自动打卡”</title>
    <link href="https://lruihao.cn/posts/daka.html"/>
    <id>https://lruihao.cn/posts/daka.html</id>
    <published>2020-03-25T00:22:42.000Z</published>
    <updated>2020-03-25T04:51:31.395Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>这件事还得从一只蝙蝠说起…<br>算了，昨天下午3点半，我还在王者峡谷Timing,突然潇X巴哥打了个电话给我说关于自动打卡的想法…<br>哎，反正就是由于疫情需要每天健康打卡汇报给学校，然后每天提交一样的太麻烦了，就想写个程序自动打卡…<br>我和潇X巴哥确定思路后兵分两路：</p><ol><li>他用java写个后台自动刷多人的，再弄个网页给用户填写账号密码保存在数据库；</li><li>我想的就很直接，只刷一个人的，python模拟浏览器登录后打卡,再设置定时任务（多人则设定多个）；</li></ol></div><a id="more"></a><h1 id="Windows运行效果"><a href="#Windows运行效果" class="headerlink" title="Windows运行效果"></a>Windows运行效果</h1><img src="/images/loading_img.gif" data-original="/posts/daka/result1.png" title="打卡成功"> <img src="/images/loading_img.gif" data-original="/posts/daka/result.png" title="重复打卡"> <img src="/images/loading_img.gif" data-original="/posts/daka/result2.png" title="定时任务日志"><h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><blockquote><p>适用湖南工程学院的打卡系统。<br>请勿滥用代码提交不实健康信息，隐瞒疫情将受到相关法律处理！</p></blockquote><figure class="highlight py"><figcaption><span>模拟登录打卡</span><a href="https://github.com/Lruihao/python-funny-code/blob/master/%E6%98%93%E7%8F%AD%E6%89%93%E5%8D%A1.py" rel="external nofollow noopener noreferrer" target="_blank">完整代码</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lajaDaka</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="comment"># 登录</span></span><br><span class="line">  r1 = requests.post(login_url, data=login,headers=headers,verify=<span class="keyword">False</span>)</span><br><span class="line">  <span class="keyword">if</span> r1.status_code == <span class="number">200</span>:</span><br><span class="line">    print(time.strftime(<span class="string">"%Y:%m:%d:%H:%M"</span>, time.localtime()))</span><br><span class="line">    print(login[<span class="string">"username"</span>] + <span class="string">" 登录成功！"</span>)</span><br><span class="line">    <span class="comment"># 拿到登录后的cookie并添加到header中</span></span><br><span class="line">    header1 = r1.headers</span><br><span class="line">    headers[<span class="string">"Cookie"</span>] = header1[<span class="string">"Set-Cookie"</span>]</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 打卡</span></span><br><span class="line">  r2 = requests.post(daka_url, data=daka,headers=headers,verify=<span class="keyword">False</span>)</span><br><span class="line">  response2=r2.json()</span><br><span class="line">  <span class="keyword">if</span> r2.status_code != <span class="number">200</span>:</span><br><span class="line">    print(<span class="string">"打卡失败！"</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">if</span> response2[<span class="string">"result"</span>] == <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">"打卡成功！"</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    print(response2[<span class="string">"errorInfoList"</span>][<span class="number">0</span>][<span class="string">"message"</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">  lajaDaka()</span><br></pre></td></tr></table></figure><h1 id="自动运行"><a href="#自动运行" class="headerlink" title="自动运行"></a>自动运行</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>适用python代码控制休眠时间<br></p><figure class="highlight py"><figcaption><span>定时</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    now_hour = time.strftime(<span class="string">"%H"</span>, time.localtime())</span><br><span class="line">    now_min = time.strftime(<span class="string">"%M"</span>, time.localtime())</span><br><span class="line">    <span class="comment"># 设置每天8点发送</span></span><br><span class="line">    <span class="keyword">if</span> now_hour &lt; <span class="string">"08"</span>:</span><br><span class="line">      rest = <span class="number">8</span> - int(now_hour)</span><br><span class="line">      sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">      print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t脚本将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后打卡"</span>)</span><br><span class="line">      time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour &gt; <span class="string">"08"</span>:</span><br><span class="line">      rest = <span class="number">8</span> - int(now_hour) + <span class="number">24</span></span><br><span class="line">      sleeptime = (rest<span class="number">-1</span>)*<span class="number">3600</span> + (<span class="number">60</span>-int(now_min))*<span class="number">60</span></span><br><span class="line">      print(<span class="string">"启动时北京时间为："</span>+time.strftime(<span class="string">"%H:%M"</span>, time.localtime()),<span class="string">"\t脚本将在"</span>,rest<span class="number">-1</span>,<span class="string">"小时"</span>,int((sleeptime-(rest<span class="number">-1</span>)*<span class="number">3600</span>)/<span class="number">60</span>),<span class="string">"分钟后打卡"</span>)</span><br><span class="line">      time.sleep(sleeptime)</span><br><span class="line">    <span class="keyword">elif</span> now_hour == <span class="string">"08"</span>:</span><br><span class="line">      print(<span class="string">"软件明天开始将在每天8点发送数据！"</span>)</span><br><span class="line">      lajaDaka()</span><br><span class="line">      time.sleep(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>-int(now_min)*<span class="number">60</span>)</span><br></pre></td></tr></table></figure><p></p><h2 id="linux-云服务器"><a href="#linux-云服务器" class="headerlink" title="linux(云服务器)"></a>linux(云服务器)</h2><p>搭建python环境下载依赖后，使用shell脚本定时执行。<br></p><figure class="highlight bash"><figcaption><span>脚本内容设定</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python /home/python/yiban_daka/daka.py</span><br></pre></td></tr></table></figure><p></p><p><a href="/posts/cron.html">CRON表达式的基本语法</a></p><h1 id="潇x巴哥的java-web版本"><a href="#潇x巴哥的java-web版本" class="headerlink" title="潇x巴哥的java web版本"></a>潇x巴哥的java web版本</h1><p>符合程序员的应该有的简洁和方便，干净又卫生！<br><code>http://39.105.174.214/index.html</code><br><img src="/images/loading_img.gif" data-original="/posts/daka/javaweb.png" title="java web版"></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这件事还得从一只蝙蝠说起…&lt;br&gt;算了，昨天下午3点半，我还在王者峡谷Timing,突然潇X巴哥打了个电话给我说关于自动打卡的想法…&lt;br&gt;哎，反正就是由于疫情需要每天健康打卡汇报给学校，然后每天提交一样的太麻烦了，就想写个程序自动打卡…&lt;br&gt;我和潇X巴哥确定思路后兵分两路：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;他用java写个后台自动刷多人的，再弄个网页给用户填写账号密码保存在数据库；&lt;/li&gt;&lt;li&gt;我想的就很直接，只刷一个人的，python模拟浏览器登录后打卡,再设置定时任务（多人则设定多个）；&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="Python" scheme="https://lruihao.cn/categories/Backend/Python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="Python" scheme="https://lruihao.cn/tags/Python/"/>
    
      <category term="POST" scheme="https://lruihao.cn/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>2019年度总结</title>
    <link href="https://lruihao.cn/posts/year-2019.html"/>
    <id>https://lruihao.cn/posts/year-2019.html</id>
    <published>2020-01-16T12:01:22.000Z</published>
    <updated>2020-01-17T11:37:49.151Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>回顾2019，是从“迷茫”到“忙”的一年，何为“迷茫”，何为“忙”。</p></div><a id="more"></a><figure class="highlight java"><figcaption><span>上半年·湘潭·湖南工程学院</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>年伊始，步入大三下学期，</span><br><span class="line">回顾大学前段生涯，无论是ACM是实验室里所学的所谓算法(甚至现在已经忘记怎么写了)，</span><br><span class="line">还是自己一时兴起折腾的简单网页，似乎都无法支撑自己找到工作，甚至实习。</span><br><span class="line">于是乎，浓浓的<span class="string">"迷茫"</span>和<span class="string">"焦虑"</span>感来了。</span><br><span class="line">由于<span class="string">"卓越计划"</span>的缘故，大四我们就不在学校了，要去企业实习。</span><br><span class="line">这正是我所担心的，没有一技之长，哪家公司会收我。</span><br><span class="line">不得不走上新的学习旅程，我选择了java，我也不知道为什么选java，反正就是选了。</span><br><span class="line">制定了计划当然要执行啊，所以从<span class="number">2019</span>年刚开始，我先把java的基础复习了一遍，</span><br><span class="line">然后在慕课网上开始刷课，然后碰到一些小例子时都会编程练习。</span><br><span class="line">从我的博客记录显示，java学习一直持续到<span class="number">5</span>月初。</span><br><span class="line">期间还折腾了一段时间python，正是这小段时间的python，</span><br><span class="line">让我有机会接触到了<span class="string">"麻小科技"</span>，这里非常感谢捷哥，算起来也是认识多年的朋友了，</span><br><span class="line">后来也认识了涛哥，非常感谢涛哥在技术方面给了我很多的指导。</span><br><span class="line">后来机缘巧合之下，一场面试让我不得不考虑暂停我的java计划，</span><br><span class="line">这场面试就是富士康C次的一场面试，面试官庆哥也就是我未来的主管，</span><br><span class="line">当时庆哥面试时问了我们三个很简单的问题一个css选择器，一个数据库的查询，还有一个是css的盒子模型。</span><br><span class="line">我当时数据库的那个联合查询没答出来，一紧张内外边距的英文padding和margin也忘记怎么拼写了。</span><br><span class="line">双方还问了一些了解性的问题面试就这样结束了。</span><br><span class="line">很幸运过了一两天就收到了邮件。</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>下半年·深圳·富士康科技集团</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">然后时间一晃而过来到了下半年，我来到了陌生的深圳，来到了富士康。</span><br><span class="line">来到深圳后一周，捷哥说一起吃个饭，晚上一起走走，</span><br><span class="line">然后那天我就去找捷哥吃饭了，吃的是顺德公的猪肚包鸡，很好吃。</span><br><span class="line">然后也见到了涛哥，感觉涛哥是一个很谦逊很和蔼的人。非常感谢捷哥和涛哥在我刚来深圳的热情款待。</span><br><span class="line">安顿好后，也开始实习工作了，前面的我所说的<span class="string">"忙"</span>呢其实指的是<span class="string">"充实"</span>，</span><br><span class="line">在庆哥带领下的学习工作让我每天都过很充实，每天都能感觉到自己一点点的进步，真的非常庆哥的悉心培养。</span><br><span class="line">从html5到php，然后ajax交互，SQL等等，几乎是从零开始教学，效果完全比得上外面的培训机构。</span><br><span class="line">那段时间每天上班测试，学习MES系统流程，然后下班后学习新的知识，每天都能感觉充实带来的愉悦感。</span><br><span class="line">不仅只有学习还有测试，公司的测试比在学校的考试真实多了，公司是要你真的掌握，所以会有理论知识学习，还会有实际操作。</span><br><span class="line">后来大概<span class="number">12</span>月初又学习了，部门平台的模组开发，<span class="number">12</span>月份汇报，自己整体评价很行，松了一口气。</span><br><span class="line"><span class="number">12</span>月底正式接手了项目，拿到的新项目是两支论坛模组。</span><br><span class="line">由于手上不够的原因，我被安排做前端开发，本以为前端会很容易。一直以来大家也都这样认为。</span><br><span class="line">可是自己实际开发后才知道前端也是很容易出bug的，并且有时候前端的bug往往让你不知所措。</span><br><span class="line">一切还需继续努力！</span><br><span class="line"><span class="number">12</span>月<span class="number">26</span>日，zxm考研结束，来深圳找我玩，和她一起在深圳逛了逛，去了深圳湾。</span><br><span class="line">本来她还想去动物园的，但是老是睡过头，所以就没去了哈哈哈哈。</span><br><span class="line">虽然我知道zxm喜欢吃肯德基，以前在湘潭也常陪她去，</span><br><span class="line">但这一次深圳之旅，我才发现她真的太爱吃了，搞的我的不敢给她吃太多。</span><br><span class="line">又不忍心拒绝她吃，所以来深圳就吃了好几次肯德基和麦当劳。</span><br><span class="line">来到<span class="number">20</span>年初，部门聚餐吃海鲜，和大家部门内的同事也都熟了，大家都很好相处，</span><br><span class="line">很庆幸所在部门大家都是很好的学习工作氛围，没有那种老练职场的尔虞我诈。</span><br><span class="line"><span class="number">1</span>月初的一个周末还很荣幸的受邀参加了麻小科技的年会，和捷哥涛哥一起爬南山，然后一起在粗茶淡饭吃饭，</span><br><span class="line">认识了很多很优秀的朋友，有在华为的，有腾讯的，也有清华博士在读的等等，</span><br><span class="line">听他们说了一些话都觉得很有道理。</span><br><span class="line">下午还一起去打了棋牌室打了桌球和麻将。</span><br><span class="line">感觉陕西麻将和长沙麻将有点像，但和我们那的麻将打法略有不同。（输了十块哈哈哈哈）</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">总的来说，<span class="number">19</span>年还算顺利，下半年的实习没向家里要钱，凭自己能力<span class="string">"活着"</span>，只希望<span class="number">20</span>年和zxm更好，顺利毕业，活的更好！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;回顾2019，是从“迷茫”到“忙”的一年，何为“迷茫”，何为“忙”。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://lruihao.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="总结" scheme="https://lruihao.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>SQL总结</title>
    <link href="https://lruihao.cn/posts/sql.html"/>
    <id>https://lruihao.cn/posts/sql.html</id>
    <published>2020-01-16T11:28:05.000Z</published>
    <updated>2020-01-17T11:39:13.474Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note danger no-icon"><p>SQL增删改查(CRUD)语句与常用函数总结。</p></div><a id="more"></a><h2 id="SQL-Introduction"><a href="#SQL-Introduction" class="headerlink" title="SQL Introduction"></a>SQL Introduction</h2><p>一般我们对数据库的操作主要分为四种，增<strong>C</strong>(CREATE)、删<strong>D</strong>(DELETE)、改<strong>U</strong>(UPDATE)、查<strong>R</strong>(READ)，所以，我就从<strong>CRUD</strong>这四个方面来制作查询表。</p><p><strong>开发规则:</strong></p><ol><li><p>尽量减少对数据库的访问次数，且不能查询无用的数据，浪费效能（例如：我只要男生的数据，你把所有人的数据都查询出来）。</p></li><li><p>属于<code>SQL</code>语法的要使用大写 （SELECT, WHERE, INSERT etc…）。</p></li><li><p>属于使用者自己定义的要使用小写（表名、列名 etc…）。</p></li><li><p>表名与列名前后使用 ` 包起来，防止与关键字冲突（例如： INSERT INTO `user` VALUES(‘a’,’b’); ）。</p></li><li><p>禁止使用 Table Join。</p></li><li><p>禁止使用 Oracle Trigger。</p></li><li><p>禁止使用 SELECT * （为了加强代码可读性）。</p></li><li><p>不能将查询数据库的 SQL 放在循环中查询。</p></li></ol><h2 id="新增（CREATE）"><a href="#新增（CREATE）" class="headerlink" title="新增（CREATE）"></a>新增（CREATE）</h2><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:left">语句</th></tr></thead><tbody><tr><td style="text-align:left">创建数据库</td><td style="text-align:left"><code>CREATE DATABASE &lt;数据库名&gt;;</code></td></tr><tr><td style="text-align:left">创建数据表</td><td style="text-align:left"><code>CREATE TABLE &lt;表名&gt; (</code><br><code>&lt;列名1&gt; &lt;数据类型&gt; &lt;约束条件&gt;,</code><br><code>&lt;列名2&gt; &lt;数据类型&gt; &lt;约束条件&gt;,</code><br><code>&lt;列名3&gt; &lt;数据类型&gt; &lt;约束条件&gt;,</code><br><code>......</code><br><code>&lt;该表的的约束条件1&gt;</code><br><code>&lt;该表的的约束条件2&gt;...);</code></td></tr><tr><td style="text-align:left">插入数据</td><td style="text-align:left"><code>INSERT INTO &lt;表名&gt; (列名1,列名2,...) VALUES (值1,值2,...);</code><br>（每列都有数据插入时，可省略列名。但是为了代码的可读性，不建议如此操作。）</td></tr><tr><td style="text-align:left">增加列</td><td style="text-align:left"><code>ALTER TABLE &lt;表名&gt; ADD &lt;列名&gt; &lt;数据类型&gt; &lt;约束条件&gt; AFTER &lt;前一列列名&gt;;</code><br>（默认插入到最后一列）</td></tr></tbody></table><h2 id="删除（DELETE）"><a href="#删除（DELETE）" class="headerlink" title="删除（DELETE）"></a>删除（DELETE）</h2><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:left">语句</th></tr></thead><tbody><tr><td style="text-align:left">删除数据库</td><td style="text-align:left"><code>DROP DATABASE &lt;数据库名&gt;;</code></td></tr><tr><td style="text-align:left">删除数据表</td><td style="text-align:left"><code>DROP TABLE &lt;表名&gt;;</code></td></tr><tr><td style="text-align:left">清空表数据</td><td style="text-align:left"><code>DELETE FROM &lt;表名&gt;;</code> 或者 <code>TRUNCATE TABLE &lt;表名&gt;;</code></td></tr><tr><td style="text-align:left">删除行数据</td><td style="text-align:left"><code>DELETE FROM &lt;表名&gt; WHERE &lt;条件&gt;;</code></td></tr><tr><td style="text-align:left">删除列数据</td><td style="text-align:left"><code>ALTER TABLE &lt;表名&gt; DROP &lt;列名&gt;;</code></td></tr></tbody></table><h2 id="修改（UPDATE）"><a href="#修改（UPDATE）" class="headerlink" title="修改（UPDATE）"></a>修改（UPDATE）</h2><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:left">语句</th></tr></thead><tbody><tr><td style="text-align:left">修改数据库名</td><td style="text-align:left"><code>RENAME DATABASE &lt;旧名称&gt; TO &lt;新名称&gt;;</code></td></tr><tr><td style="text-align:left">修改表名</td><td style="text-align:left"><code>RENAME TABLE &lt;旧名称&gt; TO &lt;新名称&gt;;</code></td></tr><tr><td style="text-align:left">修改数据</td><td style="text-align:left"><code>UPDATE &lt;表名&gt; SET &lt;列名1&gt; = &lt;新值1&gt;,&lt;列名2&gt; = &lt;新值2&gt; WHERE &lt;条件&gt;;</code></td></tr><tr><td style="text-align:left">修改列名</td><td style="text-align:left"><code>ALTER TABLE &lt;表名&gt; CHANGE &lt;旧列名&gt; &lt;新列名&gt; &lt;数据类型&gt; &lt;约束条件&gt;;</code></td></tr></tbody></table><blockquote><p>注意：重命名数据库与数据表一般不推荐使用，若想测试，请先备份好自己的数据库~</p></blockquote><h2 id="查询（-nbsp-R-nbsp-E-nbsp-A-nbsp-D-nbsp-）"><a href="#查询（-nbsp-R-nbsp-E-nbsp-A-nbsp-D-nbsp-）" class="headerlink" title="查询（&nbsp;R&nbsp;E&nbsp;A&nbsp;D&nbsp;）"></a>查询（&nbsp;R&nbsp;E&nbsp;A&nbsp;D&nbsp;）</h2><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:left">语句</th></tr></thead><tbody><tr><td style="text-align:left">查询所有数据库</td><td style="text-align:left"><code>SHOW DATABASES;</code></td></tr><tr><td style="text-align:left">查询指定数据库中所有表名</td><td style="text-align:left"><code>USE &lt;数据库名&gt;;</code> 然后 <code>SHOW TABLES;</code><br>或者 <code>SHOW TABLES FROM &lt;数据库名&gt;;</code></td></tr><tr><td style="text-align:left">查询表中所有列信息</td><td style="text-align:left"><code>SHOW COLUMNS FROM &lt;表名&gt;;</code></td></tr><tr><td style="text-align:left">查询表中所有数据</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt;;</code></td></tr><tr><td style="text-align:left">查询表中某个数据</td><td style="text-align:left"><code>SELECT &lt;列名&gt; FROM &lt;表名&gt;;</code></td></tr><tr><td style="text-align:left">查询表中指定多个数据</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt; WHERE &lt;条件&gt;;</code></td></tr><tr><td style="text-align:left">查询表中指定一个数据</td><td style="text-align:left"><code>SELECT &lt;列名&gt; FROM &lt;表名&gt; WHERE &lt;条件&gt;;</code></td></tr><tr><td style="text-align:left">查询指定范围数据</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt; WHERE</code><br><code>&lt;某列名&gt; BETWEEN &lt;某列名范围值-小&gt; AND &lt;某列名范围值-大&gt;;</code></td></tr><tr><td style="text-align:left">字符串模式匹配查询</td><td style="text-align:left"><code>SELECT &lt;列名&gt; FROM &lt;表名&gt; WHERE name LIKE &#39;Y%&#39;;</code><br>（查询以Y开头的，更多匹配方式自行百度哦~。）</td></tr><tr><td style="text-align:left">指定多个值数据查询</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt; WHERE</code><br><code>&lt;某列名&gt; IN (&#39;&lt;某列名值1&gt;&#39;,&#39;&lt;某列名值2&gt;&#39;,&#39;&lt;某列名值3&gt;&#39;,...);</code></td></tr><tr><td style="text-align:left">查询结果排序</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt; ORDER BY &lt;某列名&gt; DESC;</code><br>（此处为递减排列，默认为递增<code>ASC</code>）</td></tr><tr><td style="text-align:left">查询指定几笔数据</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,... FROM &lt;表名&gt; LIMIT n,m;</code><br>（从<code>n</code>到<code>m</code>笔数据）</td></tr><tr><td style="text-align:left">分群查询</td><td style="text-align:left"><code>SELECT &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,...,&lt;函数&gt; FROM &lt;表名&gt; GROUP BY &lt;列名1&gt;,&lt;列名2&gt;,&lt;列名3&gt;,...;</code><br>（常搭配函数有：<code>SUM()</code>、<code>AVG()</code>、<code>COUNT()</code>、<code>MAX()</code>、<code>MIN()</code>）</td></tr></tbody></table><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><table><thead><tr><th style="text-align:left">函数名</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left"><code>ABS</code>(数值)</td><td style="text-align:left">ABS函数（求绝对值）</td></tr><tr><td style="text-align:left"><code>MOD</code>(被除数,除数)</td><td style="text-align:left">MOD函数（求余）</td></tr><tr><td style="text-align:left"><code>ROUND</code>(对象数值,保留小数的位数)</td><td style="text-align:left">ROUND函数（四舍五入）</td></tr><tr><td style="text-align:left">字符串1 &Iota;&Iota; 字符串2</td><td style="text-align:left">&Iota;&Iota; 函数（拼接）</td></tr><tr><td style="text-align:left"><code>LENGTH</code>(字符串)</td><td style="text-align:left">LENGTH函数（求字符串长度）</td></tr><tr><td style="text-align:left"><code>LOWER</code>(字符串)</td><td style="text-align:left">LOWER函数（小写转换）</td></tr><tr><td style="text-align:left"><code>UPPER</code>(字符串)</td><td style="text-align:left">UPPER函数（大写转换）</td></tr><tr><td style="text-align:left"><code>REPLACE</code>(对象字符串,替换前的字符串,替换后的字符串)</td><td style="text-align:left">REPLACE函数（字符串的替换）</td></tr><tr><td style="text-align:left"><code>SUBSTRING</code> (对象字符串,截取的起始位置,截取的字符数)</td><td style="text-align:left">SUBSTRING函数（字符串的截取）</td></tr><tr><td style="text-align:left"><code>CURRENT_DATE</code></td><td style="text-align:left">CURRENT_DATE函数（当前日期）</td></tr><tr><td style="text-align:left"><code>CURRENT_TIME</code></td><td style="text-align:left">CURRENT_TIME函数（当前时间）</td></tr><tr><td style="text-align:left"><code>CURRENT_TIMESTAMP</code></td><td style="text-align:left">CURRENT_TIMESTAMP函数（当前日期和时间）</td></tr><tr><td style="text-align:left"><code>EXTRACT</code>(日期元素 FROM 日期)</td><td style="text-align:left">EXTRACT函数（截取日期元素）</td></tr><tr><td style="text-align:left"><code>CAST</code>(转换前的值 AS 想要转换的数据类型)</td><td style="text-align:left">CAST函数（类型转换）</td></tr><tr><td style="text-align:left"><code>COALESCE</code>(数据1,数据2,数据3….)</td><td style="text-align:left">COALESCE函数（将NULL转换为其他值）</td></tr></tbody></table><p>补充：CASE表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE WHEN &lt;求值表达式&gt; THEN &lt;表达式&gt;            </span><br><span class="line">     WHEN &lt;求值表达式&gt; THEN &lt;表达式&gt;            </span><br><span class="line">     WHEN &lt;求值表达式&gt; THEN &lt;表达式&gt; </span><br><span class="line">     ......            </span><br><span class="line">     ELSE &lt;表达式&gt; </span><br><span class="line"> END</span><br></pre></td></tr></table></figure><h2 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h2><h3 id="常见数据类型"><a href="#常见数据类型" class="headerlink" title="常见数据类型"></a>常见数据类型</h3><p><img src="/images/loading_img.gif" data-original="/posts/sql/data_type1.png" alt="data_type"><br><img src="/images/loading_img.gif" data-original="/posts/sql/data_type2.png" alt="data_type"></p><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>给表设置别名，让SQL更简洁。例如：</p><p><code>SELECT &lt;col-1&gt;,&lt;col-2&gt;,&lt;col-3&gt;,... FROM &lt;table1&gt; &lt;alias-a&gt;,&lt;table2&gt; &lt;alias-b&gt; WHERE &lt;alias-a&gt;.&lt;id&gt; = &lt;alias-b&gt;.&lt;id&gt;;</code></p><p>列名也可以设置别名。例如：</p><p><code>SELECT &lt;col-1&gt; &lt;alias-a&gt;,&lt;col-2&gt; &lt;alias-b&gt;,&lt;col-3&gt; &lt;alias-c&gt;,... FROM &lt;table&gt;;</code><br>或者<br><code>SELECT &lt;col-1&gt; AS &lt;alias-a&gt;,&lt;col-2&gt; AS &lt;alias-b&gt;,&lt;col-3&gt; AS &lt;alias-c&gt;,... FROM &lt;table&gt;;</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上整理的内容均为基础内容，更多进阶知识还需各位自行Google。</p>]]></content>
    
    <summary type="html">
    
      SQL增删改查(CRUD)语句
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
    
      <category term="SQL" scheme="https://lruihao.cn/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>利用腾讯云为静态页面添加“动态”相册</title>
    <link href="https://lruihao.cn/posts/cos-album.html"/>
    <id>https://lruihao.cn/posts/cos-album.html</id>
    <published>2019-11-24T02:52:34.000Z</published>
    <updated>2020-03-25T00:41:17.687Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>cos桶相册，终于！！终于来了！！，思路参考自<a href="https://me.idealli.com/post/73ad4183.html" rel="external nofollow noopener noreferrer" target="_blank">给hexo静态博客添加动态相册功能</a>，修改整理了一下代码，分割功能为函数，并写了注释，更加方便<a href="https://github.com/Lruihao/cos-album" rel="external nofollow noopener noreferrer" target="_blank">伸手党</a>，当然别吝啬你的star哦！<br><strong><span style="color:#428bca">功能虽好，但是还是先友情提示！</span></strong><br>开放API是一个<strong>很危险</strong>的操作，意味着你的cos桶里面的所有资源包括目录结构都暴露的整个世界中，所以建议不要放一些比较私密的照片，保护自己的隐私，提防不良用心之人。下面就开始吧！</p></div><a id="more"></a><h1 id="创建腾讯云cos存储桶"><a href="#创建腾讯云cos存储桶" class="headerlink" title="创建腾讯云cos存储桶"></a>创建腾讯云cos存储桶</h1><p>就创建一个COS就好了！有几点注意事项：</p><ol><li>权限设置为共有读私有写</li><li>policy权限设置整个桶的读操作</li><li>跨域访问CORS设置，自己随意</li></ol><h1 id="上传照片"><a href="#上传照片" class="headerlink" title="上传照片"></a>上传照片</h1><p>首先我这个cos相册，相册分类就是文件夹分类，所以cos桶里面先新建不同的文件夹，<strong>文件夹名称就是相册名称</strong>，<br>每个相册里面需要放置一张名称为<strong>“封面.jpg”</strong>的图片作为该相册的封面。</p><h2 id="上传工具"><a href="#上传工具" class="headerlink" title="上传工具"></a>上传工具</h2><ul><li><strong>COSBrowser</strong> GUI工具,桌面/移动版 【官方、推荐】</li><li><strong>COSCMD</strong> 命令行工具 【官方】</li><li><strong>PicGo</strong> 图床上传工具 【第三方、推荐】</li></ul><h1 id="食用方式"><a href="#食用方式" class="headerlink" title="食用方式"></a>食用方式</h1><p><a href="https://github.com/Lruihao/cos-album" target="_blank" class="LinkCard" rel="external nofollow noopener noreferrer">下载地址，别忘点赞哈</a><br>首先，下载源码，修改<code>cos-album.js</code>中前面的配置信息，xmlLink后不需要添加<code>/</code>。<br></p><figure class="highlight js"><figcaption><span>config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要解析的騰訊云COS桶XML鏈接</span></span><br><span class="line"><span class="keyword">let</span> xmlLink = <span class="string">"https://img-xxxxx.cos.ap-chengdu.myqcloud.com"</span>;</span><br><span class="line"><span class="comment">//添加相册到指定节点下，如: ".myalbum","#myalbum"，默认"body"</span></span><br><span class="line"><span class="keyword">let</span> appendTo = <span class="string">""</span>;</span><br><span class="line"><span class="comment">//顯示數目,整數</span></span><br><span class="line"><span class="keyword">let</span> showNum = <span class="number">8</span>;</span><br></pre></td></tr></table></figure><p></p><p>然后，在你的html里面引入<code>cos-album.css</code>,<code>cos-album.js</code>,<code>viewport</code>视个人爱好添加。<br>hexo中使用时css和js都需要做适当调整，配合加密功能使用等等，这里不再展开。<br><strong><em>注：代码设定不加载根目录文件，所以可以利用静态服务把源码部署在根目录，配合PicGo、COSBrowser上传来搭建个人图床。</em></strong><br></p><figure class="highlight xml"><figcaption><span>demo</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>cos-album<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"cos-album.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"cos-album.js"</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 你的其他内容，如评论等 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p><a href="https://img.lruihao.cn" target="_blank" class="LinkCard" rel="external nofollow noopener noreferrer">cos-album demo</a><br><img src="/images/loading_img.gif" data-original="/posts/cos-album/view.png" title="大屏显示"><br><img src="/images/loading_img.gif" data-original="/posts/cos-album/mobile.png" title="手机显示"></p><h1 id="未实现"><a href="#未实现" class="headerlink" title="未实现"></a>未实现</h1><ul><li>fancybox</li><li>加密功能</li><li>分页显示</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;cos桶相册，终于！！终于来了！！，思路参考自&lt;a href=&quot;https://me.idealli.com/post/73ad4183.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;给hexo静态博客添加动态相册功能&lt;/a&gt;，修改整理了一下代码，分割功能为函数，并写了注释，更加方便&lt;a href=&quot;https://github.com/Lruihao/cos-album&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;伸手党&lt;/a&gt;，当然别吝啬你的star哦！&lt;br&gt;&lt;strong&gt;&lt;span style=&quot;color:#428bca&quot;&gt;功能虽好，但是还是先友情提示！&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;开放API是一个&lt;strong&gt;很危险&lt;/strong&gt;的操作，意味着你的cos桶里面的所有资源包括目录结构都暴露的整个世界中，所以建议不要放一些比较私密的照片，保护自己的隐私，提防不良用心之人。下面就开始吧！&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Frontend" scheme="https://lruihao.cn/categories/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/categories/Frontend/JavaScript/"/>
    
    
      <category term="Frontend" scheme="https://lruihao.cn/tags/Frontend/"/>
    
      <category term="腾讯云cos桶" scheme="https://lruihao.cn/tags/%E8%85%BE%E8%AE%AF%E4%BA%91cos%E6%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>RESTful</title>
    <link href="https://lruihao.cn/posts/restful.html"/>
    <id>https://lruihao.cn/posts/restful.html</id>
    <published>2019-11-14T11:06:05.000Z</published>
    <updated>2019-11-14T11:17:21.338Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>RESTful 是一種系統開發設計風格、原則。可視情況調整，以下參考來源 RFC5789 <a href="https://tools.ietf.org/html/rfc5789" rel="external nofollow noopener noreferrer" target="_blank">https://tools.ietf.org/html/rfc5789</a></p></blockquote><h2 id="Noun"><a href="#Noun" class="headerlink" title="Noun"></a>Noun</h2><ul><li>一般資源<br>通用於一律使用複數名詞<br>例如：/books 或 /books/123。但有部分人認為應該使用單數名詞，因為： /book/123 看似比 /books/123 合理。但想想檔案系統的目錄命名 (例如/Users或/Documents)，其實用複數也沒問題。複數可以保持API endpoint的一致性，所以一般資源建議用複數。</li><li>唯一資源：對 client 而言只有一份的資源<br>通用於單數名詞<br>例如：user 是指目前驗證的使用者，使用者永遠只能同時登入一個使用者</li></ul><h2 id="Http-Method"><a href="#Http-Method" class="headerlink" title="Http Method"></a>Http Method</h2><table><tbody><tr><th>Method</th><th>Idempotent</th><th>Safe</th><th>CRUD</th><th>OO</th><th>生活動詞</th><th>用途</th></tr><tr><td rowspan="2">GET</td><td rowspan="2" style="text-align:center">Y</td><td rowspan="2" style="text-align:center">Y</td><td rowspan="2"><b>R</b>ead</td><td rowspan="2">get</td><td>get</td><td>取得資料</td></tr><tr><td>list</td><td>列出資料</td></tr><tr><td rowspan="2">POST</td><td rowspan="2"></td><td rowspan="2"></td><td rowspan="2"><b>C</b>reate</td><td rowspan="2">add</td><td>create</td><td>建立一個可以完全獨立存在的實體</td></tr><tr><td>add</td><td>增加一個必須依賴於某個實體的實體</td></tr><tr><td rowspan="2">PUT</td><td rowspan="2" style="text-align:center">Y</td><td rowspan="2"></td><td rowspan="3"><b>U</b>pdate</td><td rowspan="3">set</td><td>replace</td><td>取代一個關係，已存在時先刪除後建立，不存在時直接建立</td></tr><tr><td>add</td><td>附加唯一關係，兩個關係實體可以互相獨立存在，且已經存在</td></tr><tr><td>PATCH</td><td></td><td></td><td>edit</td><td>編輯某個實體</td></tr><tr><td>DELETE</td><td></td><td></td><td><b>D</b>elete</td><td>remove</td><td>remove<br>delete</td><td>刪除某個實體</td></tr></tbody></table><ul><li>Safe：該操作不會改變伺服器端的資源狀態 (而且結果可以被cache)，屬於 Safe 的操作必定屬於 Idempotent</li><li>Idempotent (冪等性)：該操作不管做1遍或做n遍，都會得到同樣的資源狀態結果 (但不一定得到同樣的回傳值，例如第2次DELETE請求可能回傳404)，因此client端可以放心retry。</li></ul><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><ul><li>SAFE：每次執行操作時，GET 只有讀取 Resource，不會改變到任何的 Resource (資源, 資料)</li><li>Idempotent：每次執行操作時，GET 只有讀取 Resource，不會改變到任何的 Resource (資源, 資料)，所以任何資源的任何狀態都是一樣的</li></ul><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><ul><li>每次執行操作時，POST 都會建立一個 Resource (資源, 資料)</li><li><p>範例：建立使用者<br>執行第一次時：建立一個 name = “帥小慶” 的 user，但其 id = 1執行第二次時：建立一個 name = “帥小慶” 的 user，但其 id = 2，發送同樣的請求，可每次都是不同的 Resource</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /users</span><br><span class="line">Data:</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;帥小慶&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>Create：建立一個可以完全獨立存在的實體</p></li><li><p>範例：建立使用者<br>建立使用者前不需要建立任何的東西，就可以建立使用者了，使用者是可以完全獨立的存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /users</span><br><span class="line">Data:</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;帥小慶&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>Add：增加一個必須依賴於某個實體的實體<br>資料結構：1對多的關係</p></li><li>範例：Add a public key on behalf of a user 增加一個代表使用者的公鑰 (Gitea API)<br>增加這個公鑰之前，使用者必須存在，公鑰必須歸屬於某個使用者之下公鑰跟姓名一樣，使用相同電腦的公鑰就會相同，但不表示是同一個使用者，故公鑰也會有自己的 ID我每次增加公鑰時，都將生成不同的公鑰 ID<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST ​/admin​/users​/&#123;username&#125;​/keys</span><br></pre></td></tr></table></figure></li></ul><h3 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h3><ul><li>Idempotent：每次執行操作時，PUT 都會取代 Resource，不管操作幾次，使用者獲取得 Resource 結果都是一樣的</li><li>Replace：不論資源如何，最終的資源狀態都是一樣的<br>Resource 已存在時，或許不理會、或許先刪除後建立 (取代)Resource 不存在時，直接建立</li><li>Add：添加唯一關係，建立這個唯一關係前，兩個關連實體都必須存在。在沒有建立關係前，兩個關連實體都可以互相獨立存在</li><li>資料結構應為：多對多，且兩個關連實體的 PK，同時也是關係實體的 PK、FK</li><li><p>範例：增加使用者與角色的關係<br>增加使用者跟角色的關係前，使用者跟角色都必須存在；增加使用者跟角色的關係前，使用者跟角色可以獨立存在使用者 23240，跟角色 2，的關係最多只能有一條關係 (使用者 23240 有角色 2 )，最少沒有關係 (使用者 23240 沒有角色 2 )執行第二次操作時，使用者 23240 跟角色 2 的從屬關係仍然存在，也不會跑出第二條使用者 23240 跟角色 2 的從屬關係</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT user/&#123;account&#125;/roles</span><br><span class="line">Data</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;role_id&quot;: &quot;2&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>範例：Follow a user 關注一個使用者 (Gitea)<br>增加關注關係時，關注者與被關注者 (都是使用者) 都必須存在；增加關注關係時，關注者與被關注者 (都是使用者) 都必須存在關注者使用者 23240，跟被關注者使用者 F3860056，的關係最多只能有一條關係 (23240 關注 F3860056)，最少沒有關係 (23240 不關注 F3860056)執行第二次操作時，關注者 23240 跟被關注者 F3860056 的關注關係仍然存在，也不會跑出第二條關注者 23240 跟被關注者 F3860056 的關注關係</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT  ​/user​/following​/&#123;username&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="PATCH"><a href="#PATCH" class="headerlink" title="PATCH"></a>PATCH</h3><ul><li>Edit：編輯可獨立存在、且已經存在的實體，也就是產生新版本的實體，可能會影響其他 Resource</li><li>範例：編輯使用者<br>編輯使用者，使用者已經存在，且我們可能有紀錄編輯時間、編輯人、編輯IP，所以每次的編輯都會造成不一樣的結果<br>第一次編輯使用者，更新時間變為 08:00，編輯人 23240，IP 10.151.110.165第二次編輯使用者，更新時間變為 09:00，編輯人 23241，IP 10.151.110.144<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATCH /users/&#123;account&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><ul><li>Idempotent：每次執行操作時，DELETE 都會刪除相同的東西</li><li>範例：刪除使用者<br>第一次刪除使用者23240，刪除使用者23240第二次刪除使用者23240，還是刪除使用者23240，只不過使用者 23240 不存在了。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /users/&#123;account&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="HTTP-Status-Code"><a href="#HTTP-Status-Code" class="headerlink" title="HTTP Status Code"></a>HTTP Status Code</h2><p>HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。所有状态码的第一个数字代表了响应的五种状态之一。 除非另有说明，状态码是HTTP / 1.1标准（RFC 7231）的一部分。</p><p>而关于 RESTful API 的请求状态，通常有以下两种设计方案：</p><ul><li>方案一：使用 HTTP 状态码来表示请求状态，200 时返回的内容就是数据；</li><li>方案二：所有接口都返回 200 ，在响应内容里约定 错误码 或 錯誤信息；</li></ul><p>在實際應用中，應據具體情景及需要進行選擇與調整。</p><table><tbody><tr><th>方案</th><th colspan="2">優劣比較</th></tr><tr><td rowspan="2">方案一</td><td>優點</td><td>對服務端來說較為簡單方便</td></tr><tr><td>缺點</td><td>客戶端難以根據狀態碼處理複雜問題</td></tr><tr><td rowspan="2">方案二</td><td>優點</td><td>方便對返回資料進行統一處理和細細微性的控制</td></tr><tr><td>缺點</td><td>相當於放棄了HTTP狀態碼的語義</td></tr></tbody></table><h3 id="常用HTTP狀態碼"><a href="#常用HTTP狀態碼" class="headerlink" title="常用HTTP狀態碼"></a>常用HTTP狀態碼</h3><table><tbody><tr><th>Code</th><th>Message</th><th>用途</th></tr><tr><th>1XX</th><th>Informational response</th><th>此類狀態碼通常代表的響應都是信息性的，告訴客戶端可以進行下一步操作。</th></tr><tr><td>100</td><td>Continue</td><td>表示服務端已接收到請求頭，客戶端可以繼續發送請求體(如POST請求)。</td></tr><tr><td>101</td><td>Switching Protocols</td><td>表示服務端支持更優協議，讓客戶端在服務端更換協議後重新訪問。</td></tr><tr><th>2XX</th><th>Successful</th><th>此類狀態碼通常代表請求已成功被服務端接收、理解并接受。</th></tr><tr><td>200</td><td>OK</td><td>表示請求成功。</td></tr><tr><td>201</td><td>Created</td><td>表示請求已被實現，通常是在成功創建了某個資源。</td></tr><tr><td>202</td><td>Accepted</td><td>表示請求已被服務端接收，但尚未進行處理。</td></tr><tr><td>204</td><td>No Content</td><td>表示請求成功，但不會返回任何內容。</td></tr><tr><td>205</td><td>Reset Content</td><td>表示請求成功，但不會返回任何內容，並且要求客戶端重置表單。</td></tr><tr><th>3XX</th><th>Redirect</th><th>此類狀態碼通常代表本次請求需要客戶端採取進一步操作才能完成。通常用於重定向。</th></tr><tr><td>300</td><td>Multiple Choices</td><td>表示請求的資源有多個供可選擇，客戶端可自行選擇一個進行請求的重定向。</td></tr><tr><td>301</td><td>Moved Permanently</td><td>表示請求的資源已經永久地移動到了新位置，並且將在Location域中攜帶該資源新的URI。</td></tr><tr><td>304</td><td>Not Modified</td><td>表示請求的資源無發生修改，將不會返回任何資源。</td></tr><tr><th>4XX</th><th>Client Error</th><th>此類狀態碼通常代表客戶端可能出現了錯誤。</th></tr><tr><td>400</td><td>Bad Request</td><td>表示客戶端發出的請求有誤(格式、大小、無效的…)，服務端不能/不會處理該請求。</td></tr><tr><td>401</td><td>Unauthorized</td><td>表示客戶端未能提供必要的驗證，服務端拒絕提供資源。</td></tr><tr><td>403</td><td>Forbidden</td><td>表示服務端理解了該請求，但客戶端沒有足夠權限以訪問，遂拒絕提供該資源。</td></tr><tr><td>404</td><td>Not Found</td><td>表示服務端無法找到請求的資源，其可能已經暫時(永久)失效。</td></tr><tr><td>408</td><td>Request Timeout</td><td>表示請求超時。</td></tr><tr><td>409</td><td>Conflict</td><td>表示請求的資源發送了衝突，通常是PUT請求。</td></tr><tr><td>410</td><td>Gone</td><td>表示請求的資源已經永久失效，客戶端不應再次請求。</td></tr><tr><td>411</td><td>Length Required</td><td>表示服務端拒絕在沒有定義Content-Length頭的情況下接收該請求。</td></tr><tr><th>5XX</th><th>Server Error</th><th>此類狀態碼通常代表由於服務端的原因，導致無法完成請求。</th></tr><tr><td>500</td><td>Internal Server Error</td><td>表示由於服務端遇到意料之外的變故，導致無法完成請求。</td></tr><tr><td>501</td><td>Not Implemented</td><td>表示服務端不支持完成請求所需的功能，導致無法完成請求。</td></tr><tr><td>502</td><td>Bad Gateway</td><td>表示作為網関或代理的服務段在執行請求時，從上游服務器獲得了無效的響應。</td></tr><tr><td>503</td><td>Service Unavailable</td><td>表示由於某些原因(服務器超載或系統維護等)，導致暫時無法完成請求。</td></tr><tr><td>504</td><td>Gatewy Timeout</td><td>表示作為網関或代理的服務段在執行請求時，未能及時從上游服務器獲得響應。</td></tr><tr><td>505</td><td>HTTP Version Not Supported</td><td>表示服務端不支持請求的HTTP協議版本，導致無法完成請求。</td></tr></tbody></table><blockquote><p>以上內容參考自<a href="https://zh.wikipedia.org/zh-tw/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" rel="external nofollow noopener noreferrer" target="_blank">https://zh.wikipedia.org/zh-tw/HTTP%E7%8A%B6%E6%80%81%E7%A0%81</a>，<br>需要查看完整HTTP狀態碼請點擊<a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="Fullstack" scheme="https://lruihao.cn/tags/Fullstack/"/>
    
      <category term="REST" scheme="https://lruihao.cn/tags/REST/"/>
    
  </entry>
  
  <entry>
    <title>php同时主动推送链接到百度，神马等站长平台</title>
    <link href="https://lruihao.cn/posts/phpPushUrl.html"/>
    <id>https://lruihao.cn/posts/phpPushUrl.html</id>
    <published>2019-09-28T10:32:42.000Z</published>
    <updated>2019-10-19T02:42:10.209Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>php主动推送站点链接到百度站长，神马站长进行SEO。</p></div><a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>把需要提交的链接和各站长api分别放在两个txt文件里面,然后运行php文件进行提交，不同站长提交成功一般返回的都是<code>200</code>状态码。<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//链接存放路径和站长api文件存放路径</span></span><br><span class="line">  $urls_path = <span class="string">"H:\\lruihao.cn\\public\\baidu_urls.txt"</span>;</span><br><span class="line">  $apis_path = <span class="string">"G:\\Demo\\lrh01\\zhanzhang_api.txt"</span>;</span><br><span class="line">  <span class="comment">//将文件每一行读到一个数组里面去</span></span><br><span class="line">  $urls = file($urls_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);</span><br><span class="line">  $apis = file($apis_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>($x=<span class="number">0</span>;$x&lt;count($apis);$x++)&#123;</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    $options =  <span class="keyword">array</span>(</span><br><span class="line">      CURLOPT_URL =&gt; $apis[$x],</span><br><span class="line">      CURLOPT_POST =&gt; <span class="keyword">true</span>,</span><br><span class="line">      CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,</span><br><span class="line">      CURLOPT_POSTFIELDS =&gt; implode(<span class="string">"\n"</span>, $urls),</span><br><span class="line">      CURLOPT_HTTPHEADER =&gt; <span class="keyword">array</span>(<span class="string">'Content-Type: text/plain'</span>),</span><br><span class="line">    );</span><br><span class="line">    curl_setopt_array($ch, $options);</span><br><span class="line">    $result = curl_exec($ch);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"API: &lt;br/&gt;&amp;emsp;"</span>.$apis[$x].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"result: &lt;br/&gt;&amp;emsp;"</span>.$result.<span class="string">"&lt;hr/&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p></p><h1 id="提交结果"><a href="#提交结果" class="headerlink" title="提交结果"></a>提交结果</h1><img src="/images/loading_img.gif" data-original="/posts/phpPushUrl/result.png" title="提交结果">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;php主动推送站点链接到百度站长，神马站长进行SEO。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Backend" scheme="https://lruihao.cn/tags/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>php按行读取文件信息</title>
    <link href="https://lruihao.cn/posts/phpfile.html"/>
    <id>https://lruihao.cn/posts/phpfile.html</id>
    <published>2019-09-28T09:11:17.000Z</published>
    <updated>2019-10-19T02:42:02.251Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="普通方法"><a href="#普通方法" class="headerlink" title="普通方法"></a>普通方法</h1><p>首先采用<code>fopen()</code>函数打开文件，得到返回值的就是资源类型。接着采用while循环一行行地读取文件，然后输出每行的文字。<code>feof()</code>判断是否到最后一行,<code>fgets()</code>读取一行文本。<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//首先采用“fopen”函数打开文件，得到返回值的就是资源类型。</span></span><br><span class="line">  $file_handle = fopen(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\备忘录.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> ($file_handle)&#123;</span><br><span class="line">      <span class="comment">//接着采用while循环一行行地读取文件，然后输出每行的文字</span></span><br><span class="line">      <span class="keyword">while</span> (!feof($file_handle)) &#123; <span class="comment">//判断是否到最后一行</span></span><br><span class="line">          $line = fgets($file_handle); <span class="comment">//读取一行文本</span></span><br><span class="line">          <span class="keyword">echo</span> $line; <span class="comment">//输出一行文本</span></span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>; <span class="comment">//换行</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  fclose($file_handle);<span class="comment">//关闭文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p></p><p><code>readfile（）</code>函数，返回一整个String<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> readfile(<span class="string">"C:\\Users\\李瑞豪\\Desktop\\备忘录.txt"</span>);</span><br></pre></td></tr></table></figure><p></p><h1 id="快速方法"><a href="#快速方法" class="headerlink" title="快速方法"></a>快速方法</h1><p><code>file()</code>函数把整个文件读入一个数组中。<br>数组中的每个元素都是文件中相应的一行，包括换行符在内。<br><strong>语法</strong><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file(path,include_path,context)</span><br></pre></td></tr></table></figure><p></p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">path</td><td style="text-align:left">必需。规定要读取的文件。</td></tr><tr><td style="text-align:center">include_path</td><td style="text-align:left">可选参数<code>include_path</code> 可以是以下一个或多个常量：<br><strong><code>FILE_USE_INCLUDE_PATH</code></strong>在 include_path 中查找文件。<br><strong><code>FILE_IGNORE_NEW_LINES</code></strong>在数组每个元素的末尾不要添加换行符<br><strong><code>FILE_SKIP_EMPTY_LINES</code></strong>跳过空行</td></tr><tr><td style="text-align:center">context</td><td style="text-align:left">可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。若使用 NULL，则忽略。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">  $filepath=<span class="string">"H:\\lruihao.cn\\public\\baidu_urls.txt"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr/&gt;"</span>;</span><br><span class="line">  <span class="comment">//将文件每一行读到一个数组里面去</span></span><br><span class="line">  $texts = file($filepath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);</span><br><span class="line">  var_dump($texts);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><img src="/images/loading_img.gif" data-original="/posts/phpfile/readFile.png" title="读取文件结果">]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;普通方法&quot;&gt;&lt;a href=&quot;#普通方法&quot; class=&quot;headerlink&quot; title=&quot;普通方法&quot;&gt;&lt;/a&gt;普通方法&lt;/h1&gt;&lt;p&gt;首先采用&lt;code&gt;fopen()&lt;/code&gt;函数打开文件，得到返回值的就是资源类型。接着采用while循环一行行地读取文件，然后输出每行的文字。&lt;code&gt;feof()&lt;/code&gt;判断是否到最后一行,&lt;code&gt;fgets()&lt;/code&gt;读取一行文本。&lt;br&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Backend" scheme="https://lruihao.cn/tags/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>设置网站运行时间</title>
    <link href="https://lruihao.cn/posts/site-time.html"/>
    <id>https://lruihao.cn/posts/site-time.html</id>
    <published>2019-09-19T14:03:29.000Z</published>
    <updated>2019-10-19T02:18:16.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>使用<code>javascript</code>计算博客等网站的运行时间。</p></div><a id="more"></a><blockquote><p>话不多说，直接贴码！</p></blockquote><figure class="highlight js"><figcaption><span>网站运行时间计算JS和HTML</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> run = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"05/28/2018 20:01:01"</span>);</span><br><span class="line">  <span class="comment">//總的秒數</span></span><br><span class="line">  <span class="keyword">var</span> runTime = (now - run) / <span class="number">1000</span>,</span><br><span class="line">    days = <span class="built_in">Math</span>.floor(runTime / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>),</span><br><span class="line">    hours = <span class="built_in">Math</span>.floor(runTime / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * days)),</span><br><span class="line">    minutes = <span class="built_in">Math</span>.floor(runTime / <span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * days) - (<span class="number">60</span> * hours)),</span><br><span class="line">    seconds = <span class="built_in">Math</span>.floor((now - run) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * days) - (<span class="number">60</span> * <span class="number">60</span> * hours) - (<span class="number">60</span> * minutes));</span><br><span class="line">  <span class="comment">//前置零</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">String</span>(hours).length === <span class="number">1</span>) &#123;</span><br><span class="line">    hours = <span class="string">"0"</span> + hours;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">String</span>(minutes).length === <span class="number">1</span>) &#123;</span><br><span class="line">    minutes = <span class="string">"0"</span> + minutes;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">String</span>(seconds).length === <span class="number">1</span>) &#123;</span><br><span class="line">    seconds = <span class="string">"0"</span> + seconds;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*document.querySelector(".run-times").innerHTML = days + "&amp;thinsp;天&amp;thinsp;" + hours</span></span><br><span class="line"><span class="comment">          + "&amp;thinsp;时&amp;thinsp;" + minutes + "&amp;thinsp;分&amp;thinsp;" + seconds + "&amp;thinsp;秒";</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".run-times"</span>).innerHTML = <span class="string">"RunTime: "</span> + days + <span class="string">","</span> + hours</span><br><span class="line">          + <span class="string">":"</span> + minutes + <span class="string">":"</span> + seconds + <span class="string">""</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//setInterval("createTime()", 500);</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">  <span class="keyword">var</span> siteTime = setInterval(<span class="string">"createTime()"</span>, <span class="number">500</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  clearInterval(siteTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HTML写法</span></span><br><span class="line"><span class="comment">&lt;span class="run-times" title="网站运行时间"&gt;载入时分秒...&lt;/span&gt;</span></span><br><span class="line"><span class="comment">&lt;p class="run-times" title="主頁运行时间"&gt;RunTime Loading...&lt;/p&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;使用&lt;code&gt;javascript&lt;/code&gt;计算博客等网站的运行时间。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Frontend" scheme="https://lruihao.cn/categories/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/categories/Frontend/JavaScript/"/>
    
    
      <category term="Frontend" scheme="https://lruihao.cn/tags/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>script的三种加载方式（async、defer）</title>
    <link href="https://lruihao.cn/posts/async-defer.html"/>
    <id>https://lruihao.cn/posts/async-defer.html</id>
    <published>2019-09-08T03:47:50.000Z</published>
    <updated>2019-10-19T02:18:27.970Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>JS的加载分为两个部分：下载和执行。<br>浏览器在执行HTML的时候如果遇到<code>&lt;script&gt;</code>时会停止页面的渲染,去下载和执行js的文件直接遇见<code>&lt;/scirpt&gt;</code>会继续渲染页面。故浏览器在执行js文件的时候浏览器表现为一片空白,为了解决这个问题ECMAScript定义了defer和async两个属性用于控制JS的下载和执行。</p></div><a id="more"></a> <img src="/images/loading_img.gif" data-original="/posts/async-defer/async_vs_defer.svg" title="三种加载模式"><h1 id="不带任何属性"><a href="#不带任何属性" class="headerlink" title="不带任何属性"></a>不带任何属性</h1><blockquote><p>同步模式，又称阻塞模式，我们平时使用的最多的一种方式。当浏览器解析到<code>&lt;script&gt;</code>标签时，浏览器会停止解析其后的内容，而优先下载脚本文件，并执行其中的代码，是个同步阻塞的过程。<br>一般建议把<code>&lt;script&gt;</code>标签放在<code>&lt;body&gt;</code>结尾处，这样尽可能减少页面阻塞。<br>而如果想要异步执行script，则可以给其加上async或defer属性。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br></pre></td></tr></table></figure><h1 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h1><blockquote><p>defer属性在HTML解析期间异步下载文件，并且只在HTML解析完成后才执行它。对于defer，我们可以理解是将外链的js放在了页面底部。js的加载不会阻塞页面的渲染和资源的加载。不过defer会按照原本的js的顺序执行，<strong>所以如果前后有依赖关系的js可以放心使用。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script defer&gt;</span><br></pre></td></tr></table></figure><h1 id="async"><a href="#async" class="headerlink" title="async"></a>async</h1><blockquote><p>async属性会在HTML解析期间异步下载文件，并在完成下载后立即暂停HTML解析器去执行script中的代码。在执行过程中浏览器处于阻塞状态，响应不了任何需求。<strong>如果js前后有依赖性，用async，就很有可能出错。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async&gt;</span><br></pre></td></tr></table></figure><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p><strong>相同点：</strong></p><ol><li>加载文件时不阻塞页面渲染</li><li>对于inline的script无效（只适用有<code>src</code>的外部js）</li><li>使用这两个属性的脚本中不能调用document.write方法</li><li>有脚本的onload的事件回调</li></ol><p><strong>区别点：</strong></p><ol><li>html4.0中定义了defer；html5.0中定义了async</li><li>浏览器支持不同</li><li>每一个async属性的脚本都在它下载结束之后立刻执行，同时会在window的load事件之前执行。所以就有可能出现脚本执行顺序被打乱的情况；每一个defer属性的脚本都是在页面解析完毕之后，按照原本的顺序执行，同时会在document的DOMContentLoaded之前执行。</li></ol><h1 id="那么这三种方式各在什么情况下使用呢？"><a href="#那么这三种方式各在什么情况下使用呢？" class="headerlink" title="那么这三种方式各在什么情况下使用呢？"></a>那么这三种方式各在什么情况下使用呢？</h1><p>通常来说，尽可能使用<code>async</code>，然后是<code>defer</code>，最后不使用属性。<br>并遵循以下规则：</p><ul><li>如果脚本是模块化的，并且不依赖于任何脚本，则使用<code>async</code>。</li><li>如果脚本依赖于或依赖于另一个脚本，则使用<code>defer</code>。</li><li>如果脚本很小并且有<code>async</code>脚本依赖该脚本，则不加属性。</li></ul><h1 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h1><ol><li>Internet Explorer 10、Firefox、Opera、Chrome 和 Safari 支持 async 属性。</li><li>所有主流浏览器都支持defer属性。</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html</a></li><li><a href="https://www.jianshu.com/p/17dc82bf08f1" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/17dc82bf08f1</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;JS的加载分为两个部分：下载和执行。&lt;br&gt;浏览器在执行HTML的时候如果遇到&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;时会停止页面的渲染,去下载和执行js的文件直接遇见&lt;code&gt;&amp;lt;/scirpt&amp;gt;&lt;/code&gt;会继续渲染页面。故浏览器在执行js文件的时候浏览器表现为一片空白,为了解决这个问题ECMAScript定义了defer和async两个属性用于控制JS的下载和执行。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Frontend" scheme="https://lruihao.cn/categories/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/categories/Frontend/JavaScript/"/>
    
    
      <category term="async" scheme="https://lruihao.cn/tags/async/"/>
    
      <category term="defer" scheme="https://lruihao.cn/tags/defer/"/>
    
      <category term="Frontend" scheme="https://lruihao.cn/tags/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3快捷键大全</title>
    <link href="https://lruihao.cn/posts/Sublime-Text3.html"/>
    <id>https://lruihao.cn/posts/Sublime-Text3.html</id>
    <published>2019-08-15T12:59:10.000Z</published>
    <updated>2019-10-19T03:07:49.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p><a href="https://www.cnblogs.com/rudong/p/7889114.html" rel="external nofollow noopener noreferrer" target="_blank">转自--入冬</a><br>补充tab转space设置</p></div><a id="more"></a><h1 id="tab转space"><a href="#tab转space" class="headerlink" title="tab转space"></a>tab转space</h1><p>打开Settings,加入几行配置<br></p><figure class="highlight diff"><figcaption><span>Preferences.sublime-setting--User</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "color_scheme": "Packages/Color Scheme - Default/Monokai.sublime-color-scheme",</span><br><span class="line">  "font_size": 14,</span><br><span class="line">  "ignored_packages":</span><br><span class="line">  [</span><br><span class="line">    "Vintage"</span><br><span class="line">  ],</span><br><span class="line">  "theme": "Adaptive.sublime-theme",</span><br><span class="line"><span class="addition">+  "expand_tabs_on_save": true,</span></span><br><span class="line"><span class="addition">+  "tab_size": 2,</span></span><br><span class="line"><span class="addition">+  "translate_tabs_to_spaces": true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h1 id="选择类"><a href="#选择类" class="headerlink" title="选择类"></a>选择类</h1><ul><li>Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。</li><li>Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。</li><li>Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。</li><li>Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</li><li>Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</li><li>Ctrl+M 光标移动至括号内结束或开始的位置。</li><li>Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</li><li>Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</li><li>Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。</li><li>Ctrl+Shift+] 选中代码，按下快捷键，展开代码。</li><li>Ctrl+K+0 展开所有折叠代码。</li><li>Ctrl+← 向左单位性地移动光标，快速移动光标。</li><li>Ctrl+→ 向右单位性地移动光标，快速移动光标。</li><li>shift+↑ 向上选中多行。</li><li>shift+↓ 向下选中多行。</li><li>Shift+← 向左选中文本。</li><li>Shift+→ 向右选中文本。</li><li>Ctrl+Shift+← 向左单位性地选中文本。</li><li>Ctrl+Shift+→ 向右单位性地选中文本。</li><li>Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</li><li>Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</li><li>Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。</li><li>Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。</li></ul><h1 id="编辑类"><a href="#编辑类" class="headerlink" title="编辑类"></a>编辑类</h1><ul><li>Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</li><li>Ctrl+Shift+D 复制光标所在整行，插入到下一行。</li><li>Tab 向右缩进。</li><li>Shift+Tab 向左缩进。</li><li>Ctrl+K+K 从光标处开始删除代码至行尾。</li><li>Ctrl+Shift+K 删除整行。</li><li>Ctrl+/ 注释单行。</li><li>Ctrl+Shift+/ 注释多行。</li><li>Ctrl+K+U 转换大写。</li><li>Ctrl+K+L 转换小写。</li><li>Ctrl+Z 撤销。</li><li>Ctrl+Y 恢复撤销。</li><li>Ctrl+U 软撤销，感觉和 Gtrl+Z 一样。</li><li>Ctrl+F2 设置书签</li><li>Ctrl+T 左右字母互换。</li><li>F6 单词检测拼写</li></ul><h1 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h1><ul><li>Ctrl+F 打开底部搜索框，查找关键字。</li><li>Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</li><li>Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。</li><li>Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</li><li>Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</li><li>Ctrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</li><li>Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</li><li>Esc 退出光标多行选择，退出搜索框，命令框等。</li></ul><h1 id="显示类"><a href="#显示类" class="headerlink" title="显示类"></a>显示类</h1><ul><li>Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。</li><li>Ctrl+PageDown 向左切换当前窗口的标签页。</li><li>Ctrl+PageUp 向右切换当前窗口的标签页。</li><li>Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字）</li><li>Alt+Shift+2 左右分屏-2列</li><li>Alt+Shift+3 左右分屏-3列</li><li>Alt+Shift+4 左右分屏-4列</li><li>Alt+Shift+5 等分4屏</li><li>Alt+Shift+8 垂直分屏-2屏</li><li>Alt+Shift+9 垂直分屏-3屏</li><li>Ctrl+K+B 开启/关闭侧边栏。</li><li>F11 全屏模式</li><li>Shift+F11 免打扰模式</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/rudong/p/7889114.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;转自--入冬&lt;/a&gt;&lt;br&gt;补充tab转space设置&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="总结" scheme="https://lruihao.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="Sublime Text3" scheme="https://lruihao.cn/tags/Sublime-Text3/"/>
    
  </entry>
  
  <entry>
    <title>netBeans IDE开发设置</title>
    <link href="https://lruihao.cn/posts/netBeans.html"/>
    <id>https://lruihao.cn/posts/netBeans.html</id>
    <published>2019-08-15T10:36:15.000Z</published>
    <updated>2019-10-19T02:44:11.153Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p><a href="https://netbeans.org/" rel="external nofollow noopener noreferrer" target="_blank">官方下載點</a></p><h1 id="擴充功能"><a href="#擴充功能" class="headerlink" title="擴充功能"></a>擴充功能</h1><h2 id="安裝擴充功能"><a href="#安裝擴充功能" class="headerlink" title="安裝擴充功能"></a>安裝擴充功能</h2><ol><li>下載擴充套件包<ul><li><a href="http://plugins.netbeans.org/PluginPortal/" rel="external nofollow noopener noreferrer" target="_blank">官方套件庫</a></li><li>或者在netbenas IDE裏面下載插件（方便）</li></ul></li><li>開啟 Netbeans→Tools→Plugins→Downloaded→Add Plugins</li><li>選擇要安裝的擴充套件包</li></ol><h2 id="啟用已安裝的擴充功能"><a href="#啟用已安裝的擴充功能" class="headerlink" title="啟用已安裝的擴充功能"></a>啟用已安裝的擴充功能</h2><ol><li>開啟 Netbeans→Tools→Plugins→Installed</li><li>選擇要啟用的套件 (*.npm)</li><li>點擊 Activate</li></ol><h2 id="匯入設定"><a href="#匯入設定" class="headerlink" title="匯入設定"></a>匯入設定</h2><ol><li>開啟 Netbeans→Tools→Options</li><li>點擊 Import 匯入設定</li><li>選擇要匯入的套件包 (*.zip)</li></ol><h1 id="常用設定"><a href="#常用設定" class="headerlink" title="常用設定"></a>常用設定</h1><h2 id="程式碼排版"><a href="#程式碼排版" class="headerlink" title="程式碼排版"></a>程式碼排版</h2><blockquote><p>在程式開發中，程式碼排版很重要。一個好的排版利於開發人員程式閱讀，也便於後期維護人員閱讀。</p></blockquote><p>在NetBeans中設置程式碼排版</p><ol><li>打開NetBeans-&gt;Tools-&gt;Options-&gt;Editor-&gt;Formatting；</li><li>Language選擇 All Languages，勾選”Expand Tabs to Spaces”,用兩個空格鍵代替Tab鍵，首行留兩個Tab鍵。</li><li>點擊Apply或Ok完成設置。具體設置及效果如下圖所示：</li></ol><img src="/images/loading_img.gif" data-original="/posts/netBeans/Formatting.png" title="Formatting设置"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/Javascript.png" title="Javascript"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/Php.png" title="Php"><h2 id="程式碼樣板"><a href="#程式碼樣板" class="headerlink" title="程式碼樣板"></a>程式碼樣板</h2><blockquote><p>　程式碼樣板可以幫助你快速書寫程序，不必繁瑣地聲明函數或其他代碼塊，更專注與邏輯的書寫。</p></blockquote><p>在NetBeans中設置程式碼樣板</p><ol><li>打開NetBeans→Tools→Options→Editor→Code Templates；</li><li>選擇你所用的語言（這裡以JavaScript為例）；</li><li>點擊”New”新建屬於你的或修改原有的程式碼樣板（例子僅為演示）；</li><li>在編程中應用它。</li></ol><img src="/images/loading_img.gif" data-original="/posts/netBeans/FindTemplate.png" title="FindTemplate"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/BeforeEdit.png" title="BeforeEdit"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/OpenInEditor.png" title="OpenInEditor"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/AfterEdit.png" title="AfterEdit"><h2 id="前端壓縮"><a href="#前端壓縮" class="headerlink" title="前端壓縮"></a>前端壓縮</h2><p>下載擴充套件<code>netbeans minify</code> 或者 <code>minifierBeans</code></p><ol><li>開啟 Netbeans→Tools→Plugins→Downloaded→Add Plugins</li><li>選擇你下載的擴充套件開啟</li><li>開啟Netbeans→Tools→options</li></ol><img src="/images/loading_img.gif" data-original="/posts/netBeans/Example1.png" title="Example1"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/Example2.png" title="Example2"><h2 id="快捷鍵"><a href="#快捷鍵" class="headerlink" title="快捷鍵"></a>快捷鍵</h2><table><thead><tr><th style="text-align:left">键位</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">Ctrl+/</td><td style="text-align:left">注释一行（或选中部分）</td></tr><tr><td style="text-align:left">Ctrl+X</td><td style="text-align:left">剪切一行（或选中部分）</td></tr><tr><td style="text-align:left">Ctrl+E</td><td style="text-align:left">删除一行（或选中部分）</td></tr><tr><td style="text-align:left">Shift+Alt+上下方向键</td><td style="text-align:left">移动当前行</td></tr><tr><td style="text-align:left">Ctrl+Shift+上下方向键</td><td style="text-align:left">复制当前行(该操作并非复制到粘贴板)</td></tr><tr><td style="text-align:left">Shift+Alt+F</td><td style="text-align:left">整理代码</td></tr><tr><td style="text-align:left">TAB</td><td style="text-align:left">代碼自動補全/缩进/選中文字同時缩进</td></tr><tr><td style="text-align:left">Shift+TAB</td><td style="text-align:left">選中文字同時取消缩进</td></tr><tr><td style="text-align:left">Ctrl+F</td><td style="text-align:left">查找某个字</td></tr><tr><td style="text-align:left">Ctrl+Shift+F</td><td style="text-align:left">整个项目中查找某个字</td></tr><tr><td style="text-align:left">Ctrl+H</td><td style="text-align:left">替换某个字</td></tr><tr><td style="text-align:left">Ctrl+Enter</td><td style="text-align:left">增加空白行，光标不动。</td></tr><tr><td style="text-align:left">Ctrl+(0~7)</td><td style="text-align:left">打开各种小窗口</td></tr><tr><td style="text-align:left">Shift+方向键</td><td style="text-align:left">選中文字</td></tr><tr><td style="text-align:left">Ctrl+Alt+Space</td><td style="text-align:left">代码输入提示,不习惯的可以设置为(Alt+/)，超级好用！！！</td></tr><tr><td style="text-align:left">Ctrl+Shift+F5</td><td style="text-align:left">调试当前程序</td></tr><tr><td style="text-align:left">Shift+F6</td><td style="text-align:left">运行当前程序</td></tr><tr><td style="text-align:left">F6</td><td style="text-align:left">运行主程序</td></tr><tr><td style="text-align:left">Alt+Enter</td><td style="text-align:left">显示程式bug建议或者警示等</td></tr></tbody></table><ul><li>NetBeans中常用的快捷鍵↑：</li><li>三種複製行方法<ol><li>复制一行: Ctrl + Shift + 上下方向键(该操作并非复制到粘贴板)；</li><li>复制一行: 在该行任何地方连续三击选中一样,然后Ctrl + C即可复制一行.；</li><li>复制一行(使用宏): 编辑-开始录制宏(Home,Shift + End,Ctrl + C)-停止录制宏-设置宏名称(如select-entire-line)-设置快捷键(如Ctrl + Alt + C)；</li></ol></li><li>也可自己修改快捷鍵(Tools→Options→Keympa),如下圖</li></ul><img src="/images/loading_img.gif" data-original="/posts/netBeans/quickkey.png" title="quickkey"><h2 id="遠程開發-FTP"><a href="#遠程開發-FTP" class="headerlink" title="遠程開發 (FTP)"></a>遠程開發 (FTP)</h2><blockquote><p>工作为例</p></blockquote><ol><li>新建项目<ol><li>打开软件，进入新建项目页面（File-New Project），新建php项目，选择第一个（PHP-PHP Application）</li><li>项目名和地址自己选择（注意，选择地址后需在地址最后面加上”/项目名”）</li></ol></li><li>FTP设置<ol><li>点击下一步，进入FTP设置，Run As选择Remote Web Site(FTP,SFTP)</li><li>Project URL填写<code>http://10.151.110.165/training/工号</code></li></ol></li><li>Manage设置<ol><li>点击Manage,进入页面.名字自取.Host Name填写：10.151.110.165</li><li>Encryption选择Pure FTP,User Name和Password（填写工号/课务系统登录密码）</li><li>Initial Directory填写_training</li><li>点击Test Connection测试是否连接成功</li></ol></li><li>其他设置<ol><li>Upload Directory,上传目录不填，直接上传至个人根目录</li><li>Upload File改为保存时上传文件（On Save）</li></ol></li></ol><h2 id="Chrome-with-NetNeans-Connector"><a href="#Chrome-with-NetNeans-Connector" class="headerlink" title="Chrome with NetNeans Connector"></a>Chrome with NetNeans Connector</h2><ol><li>打開chrome中的應用程式商店（使用chrome瀏覽器點擊下方鏈接即可）<br><a href="https://chrome.google.com/webstore/category/themes?hl=en-US/" rel="external nofollow noopener noreferrer" target="_blank">chrome應用程式商店</a></li><li>在搜索框中輸入NetNeans Connector后搜索，然後點擊右邊的加到Chrome即可，安裝成功后右上角會顯示Netbeans圖標。</li><li>開啟netbeans 選擇Run→Set Project Browser→選中Chrome with NetBeans Connector</li><li>選擇default下的Customize → 選擇Browser → 選擇Browser下 Chrome with NetBeans Connector即可</li></ol><img src="/images/loading_img.gif" data-original="/posts/netBeans/01.png" title="第一步"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/02.png" title="第二步"> <img src="/images/loading_img.gif" data-original="/posts/netBeans/03.png" title="第三步">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
      <category term="netBeans" scheme="https://lruihao.cn/tags/netBeans/"/>
    
  </entry>
  
  <entry>
    <title>web开发规则，代码规范</title>
    <link href="https://lruihao.cn/posts/dev-rules.html"/>
    <id>https://lruihao.cn/posts/dev-rules.html</id>
    <published>2019-08-15T10:30:31.000Z</published>
    <updated>2020-06-06T11:46:11.603Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="精神"><a href="#精神" class="headerlink" title="精神"></a>精神</h1><ul><li>絕對不寫死程式</li><li>不留不要用的、垃圾程式碼<a id="more"></a></li></ul><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><ul><li>Master 的 BUG 必須最少且趨近於零，为最稳定的版本</li><li>每次 Commit 訊息應該確實填寫。不可模稜兩可，eg: 修复BUG、增加功能</li><li>禁止 Commit IDE 的 project data</li><li>禁止上傳垃圾程式碼</li><li>Gitea編輯內容類似里程碑和版本描述時要使用Markdown格式</li></ul><h2 id="分支（Branch）"><a href="#分支（Branch）" class="headerlink" title="分支（Branch）"></a>分支（Branch）</h2><ul><li>命名規則：應以此分支主要目的命名（修復什麼BUG，新增特定功能）<br>不可出現版本號，模組ID</li><li>合併後的分支應刪除</li></ul><h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><ul><li>遵循一個功能一個commit的原則</li></ul><h1 id="Restful"><a href="#Restful" class="headerlink" title="Restful"></a>Restful</h1><ul><li>資源名詞站在API的角度思考<ul><li>複數名詞：可以複數筆資料，回傳結果為Array<br>舉例：GET/users 取得多筆使用者資料<ul><li>刪除，放在複數名詞內，讓Router保持一致性</li><li>增加，放在複數名詞內，讓Router保持一致性</li></ul></li><li>單數名詞：僅取得單筆資料，必須指定PK，兩兩一組，回傳結果為Object<br>舉例：GET/user/{accont} 取得單筆使用者資料，必須指定PK</li></ul></li><li>URL中一律不帶id參數<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正確範例： calendar_manager/calendar/29</span><br><span class="line">錯誤範例： calendar_manager/calendar/29?id=29</span><br></pre></td></tr></table></figure></li></ul><h1 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h1><ul><li>命名應根據內容做有意義的命名，讓後續維護人員可以顧名思義!</li><li>即使不會發生錯誤，程式碼英文大小寫也需明確區分。</li></ul><h2 id="語意"><a href="#語意" class="headerlink" title="語意"></a>語意</h2><table><thead><tr><th style="text-align:left">類型</th><th style="text-align:left">命名規則</th><th style="text-align:left">說明</th></tr></thead><tbody><tr><td style="text-align:left">屬性 (Attribute, Property)</td><td style="text-align:left">名詞<br>user_name、userName</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">方法 (Method, Function)</td><td style="text-align:left">動詞+名詞<br>getUserName、get_user_name</td><td style="text-align:left">常見的動詞有：get、set、update、delete、remove</td></tr></tbody></table><h2 id="字母與分隔"><a href="#字母與分隔" class="headerlink" title="字母與分隔"></a>字母與分隔</h2><table style="background:#fff"><tbody><tr><th>語言</th><th>變數 (Variable, Parameter, Argument)</th><th>常數 (Constant)</th><th>物件導向 - 類名 (Class Name)</th><th>物件導向 - 成員 (mebmer)</th></tr><tr><td>HTML、CSS</td><td>全部小寫，不同單字以「-」分隔<br>user-id</td><td colspan="3"></td></tr><tr><td>JavaScript</td><td><div style="color:#428bca;font-weight:700;text-align:center">駝峰式命名法</div>首字小寫，不同單字「首字以大寫」分隔<br>userId</td><td rowspan="2">全部大寫，不同單字以「_」分隔<br>MAX_COUNT</td><td rowspan="2"><div style="color:#428bca;font-weight:700;text-align:center">駝峰式命名法</div>首字大寫，不同單字「首字以大寫」分隔<br>一個檔案放一個 Class<br>檔名即為 Class Name<br>User</td><td rowspan="2"><div style="color:#428bca;font-weight:700;text-align:center">駝峰式命名法</div>公有 (public)&nbsp;: 首字小寫，不同單字「首字以大寫」分隔<br>name, getName<br>私有 (private): _公有命名規則<br>_name, <em>getName</em></td></tr><tr><td>PHP</td><td>全部小寫，不同單字以「」分隔<br>user_id</td></tr><tr><td>SQL</td><td>由使用者定義的：表名、欄位名<br>全部小寫，不同單字以「_」分隔</td><td>SQL語法、函數<br>全部大寫<br>SELECT、INSERT INTO</td><td colspan="2">-</td></tr></tbody></table><h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><ul><li>程式碼撰寫</li><li>每個函數應該註解，註解應包含函數工能說明、引數說明。</li><li>不必要的代碼不要寫，也禁止放到註解裡面!</li><li>if-else 的 {} 嚴禁省略。</li><li>{} 起始一律跟在 前一個功能的尾巴，禁止分行</li></ul><h2 id="正確寫法"><a href="#正確寫法" class="headerlink" title="正確寫法"></a>正確寫法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function test()&#123;</span><br><span class="line">  //do something</span><br><span class="line">  if($a === $b)&#123;</span><br><span class="line">    //do something</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="錯誤寫法"><a href="#錯誤寫法" class="headerlink" title="錯誤寫法"></a>錯誤寫法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public function test()</span><br><span class="line">&#123;</span><br><span class="line">  //do something</span><br><span class="line">  if($a === $b)</span><br><span class="line">  &#123;</span><br><span class="line">    //do something</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>程式碼排版<ul><li>任何程式碼應該以 2 個 space 為一個階層做好排版、不可使用 tab。</li></ul></li><li>函數 (Function, Methd)<ul><li>函數宣告時需在函數上方加上函數註解，註解應包含函數說明、引數內容 (引數型態、引數英文名稱、引數說明)、 回傳值內容 (回傳值型態、回傳值說明)</li></ul></li><li>類 (Class)<ul><li>一個類 (Class) 的宣告只能存在一個檔案。</li><li>類 (Class) 的宣告檔，檔名必須為類名。</li></ul></li><li>其他<ul><li>連結本地任何其他資源 (圖片、檔案、網站) 皆使用相對路徑，禁止使用絕對路徑，非本地資源除外。</li></ul></li></ul><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="程式碼撰寫"><a href="#程式碼撰寫" class="headerlink" title="程式碼撰寫"></a>程式碼撰寫</h2><ul><li>禁止在 HTML 使用 <code>&lt;style&gt;</code>、<code>&lt;script&gt;</code>，一律使用外部檔案引用方式引用 CSS、JavaScript檔案。</li><li>HTML 標籤需成雙成對，有頭有尾。</li><li>區塊標籤：<code>&lt;tag&gt;&lt;/tag&gt;</code></li><li>單標籤：<code>&lt;tag /&gt;</code></li><li>禁止使用已被 HTML 捨棄的舊標籤、屬性，如：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html tag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">basefont</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strike</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listing</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plaintext</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xmp</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- html attribute --&gt;</span></span><br><span class="line">align</span><br><span class="line">bgcolor</span><br><span class="line">color</span><br></pre></td></tr></table></figure><h2 id="資安禁止："><a href="#資安禁止：" class="headerlink" title="資安禁止："></a>資安禁止：</h2><blockquote><p>禁止使用 readonly 做為參數傳遞</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>連結本地任何其他資源 (圖片、檔案、網站) 皆使用相對路徑，禁止使用絕對路徑，非本地資源除外。</p></blockquote><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="程式碼撰寫-1"><a href="#程式碼撰寫-1" class="headerlink" title="程式碼撰寫"></a>程式碼撰寫</h2><blockquote><p>CSS 的定義應該獨立一個 CSS 檔案，禁止使用 <code>&lt;style&gt;</code> 或 <code>style</code> 屬性直接在 HTML 中定義樣式。</p></blockquote><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="程式碼撰寫-2"><a href="#程式碼撰寫-2" class="headerlink" title="程式碼撰寫"></a>程式碼撰寫</h2><ul><li>禁止使用 HTML 字串，一律使用 Dom 產生 HTML</li><li>禁止省略箭頭函數 (Arrow function) 的括弧</li></ul><p>正確<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = (a, b) =&gt; &#123;</span><br><span class="line">  c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>錯誤 (這是允許的，但造成程式碼閱讀困難，故禁止)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a  =&gt; c;</span><br></pre></td></tr></table></figure><p></p><h2 id="註解"><a href="#註解" class="headerlink" title="註解"></a>註解</h2><p>JavaScript 註解應該遵循 JSDoc 的標準撰寫</p><h3 id="全域變數-Global"><a href="#全域變數-Global" class="headerlink" title="全域變數 (Global)"></a>全域變數 (Global)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/* global $t, Tiger */</span><br></pre></td></tr></table></figure><h3 id="常數-Constant"><a href="#常數-Constant" class="headerlink" title="常數 (Constant)"></a>常數 (Constant)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 常數說明</span><br><span class="line"> * @type &#123;常數型態&#125;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p><strong>Example</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 使用者ID</span><br><span class="line"> * @type &#123;String&#125;</span><br><span class="line"> */</span><br><span class="line">var userId = &apos;Hello&apos;;</span><br></pre></td></tr></table></figure><p></p><h3 id="函數、方法-Function-Method"><a href="#函數、方法-Function-Method" class="headerlink" title="函數、方法 (Function, Method)"></a>函數、方法 (Function, Method)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 函數用途說明</span><br><span class="line"> * @param &#123;引數型態&#125; 引數名稱 引數說明</span><br><span class="line"> * @param &#123;引數型態&#125; [選擇性引數名稱] 引數說明</span><br><span class="line"> * @param &#123;引數型態&#125; [選擇性引數名稱=引數預設值] 引數說明</span><br><span class="line"> * @returns &#123;回傳值型態&#125; 回傳值說明</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p><strong>Example</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 取得使用者</span><br><span class="line"> * @param &#123;Int&#125; userId 使用者ID</span><br><span class="line"> * @param &#123;Object&#125; [options] 其他選項</span><br><span class="line"> * @param &#123;String&#125; [options.query=&apos;a&apos;] 查詢關鍵字 預設為 a</span><br><span class="line"> * @returns &#123;Object&#125; 使用者資料</span><br><span class="line"> */</span><br><span class="line">var getUser = function(userId, options)&#123;</span><br><span class="line">  //do something</span><br><span class="line">  return user;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="前端參數取得"><a href="#前端參數取得" class="headerlink" title="前端參數取得"></a>前端參數取得</h2><p>參數取得需透過 filter_input 函數取得，不得使用 $_GET、 $_POST</p><h2 id="輸出到前台"><a href="#輸出到前台" class="headerlink" title="輸出到前台"></a>輸出到前台</h2><p>參數命名必須為：全部小寫，不同單字以「_」分隔</p><h2 id="註解-1"><a href="#註解-1" class="headerlink" title="註解"></a>註解</h2><p>PHP 註解應該遵循 PHPDoc 的標準撰寫</p><h2 id="成員變數-Member"><a href="#成員變數-Member" class="headerlink" title="成員變數 (Member)"></a>成員變數 (Member)</h2><p>成員變數只的是 Class 內的成員變數，我們都會要求替成員變數增加註解說明。通常 Function 的變數除非太特別否則都不需要特別註解說明。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 成員變數說明</span><br><span class="line"> * @type &#123;型態&#125;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p></p><p><strong>Example</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 使用者ID</span><br><span class="line"> * @type &#123;String&#125;</span><br><span class="line"> */</span><br><span class="line">$userId = &apos;Hello&apos;;</span><br></pre></td></tr></table></figure><p></p><h2 id="函數、方法-Function-Method-1"><a href="#函數、方法-Function-Method-1" class="headerlink" title="函數、方法 (Function, Method)"></a>函數、方法 (Function, Method)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 函數用途說明</span><br><span class="line"> * @param 引數型態 引數名稱 引數說明</span><br><span class="line"> * @option 引數選項型態 引數選項名稱 引數選項說明</span><br><span class="line"> * @uses 全域變數 全域變數說明</span><br><span class="line"> * @returns 回傳值型態 回傳值說明</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p><strong>Example</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 取得使用者</span><br><span class="line"> * @param int userId 使用者ID</span><br><span class="line"> * @param object options 其他選項</span><br><span class="line"> * @option string options[&apos;query&apos;] 查詢關鍵字</span><br><span class="line"> * @uses $_POST[&apos;role_id&apos;] 從前端以POST取得角色ID</span><br><span class="line"> * @returns object 使用者資料</span><br><span class="line"> */</span><br><span class="line">function getUser($userId, $options)&#123;</span><br><span class="line">  //do something</span><br><span class="line">  return $user;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><h1 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h1><ul><li>禁止使用 Table Join。</li><li>禁止使用 Oracle Trigger。</li><li>禁止將查詢資料庫的 SQL 放在迴圈中查詢<h2 id="SQL-撰寫"><a href="#SQL-撰寫" class="headerlink" title="SQL 撰寫"></a>SQL 撰寫</h2></li><li>屬於 SQL 語法使用大寫 (SELECT, WHERE, INSERT etc..)</li><li>屬於使用者自己定義的使用小寫 (表名 table name, 欄位名 column name etc..)</li><li>表名、欄位名前後需加上 `</li></ul><p><strong>Example</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `user` VALUES(&apos;a&apos;, &apos;b&apos;);</span><br></pre></td></tr></table></figure><p></p><h1 id="統一用詞"><a href="#統一用詞" class="headerlink" title="統一用詞"></a>統一用詞</h1><blockquote><p>僅為舉例，不限與此。</p></blockquote><table><thead><tr><th style="text-align:left">用詞</th><th style="text-align:left">統一</th></tr></thead><tbody><tr><td style="text-align:left">最后</td><td style="text-align:left">最後</td></tr><tr><td style="text-align:left">關閉</td><td style="text-align:left">取消</td></tr><tr><td style="text-align:left">存儲<br>保存<br>修改</td><td style="text-align:left">儲存</td></tr><tr><td style="text-align:left">搜尋</td><td style="text-align:left">查詢</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;精神&quot;&gt;&lt;a href=&quot;#精神&quot; class=&quot;headerlink&quot; title=&quot;精神&quot;&gt;&lt;/a&gt;精神&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;絕對不寫死程式&lt;/li&gt;&lt;li&gt;不留不要用的、垃圾程式碼
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="总结" scheme="https://lruihao.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="Frontend" scheme="https://lruihao.cn/tags/Frontend/"/>
    
      <category term="JavaScript" scheme="https://lruihao.cn/tags/JavaScript/"/>
    
      <category term="Git" scheme="https://lruihao.cn/tags/Git/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>简单评论模块--php表单练习</title>
    <link href="https://lruihao.cn/posts/phpform.html"/>
    <id>https://lruihao.cn/posts/phpform.html</id>
    <published>2019-07-19T03:38:59.000Z</published>
    <updated>2019-10-19T02:41:56.681Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>简单模仿了一个评论模板，当然肯定是没有博客的valine这么强大的hhhh，<br><span class="label warning">PHP表单安全性的重要提示!</span><br><code>$_SERVER[&quot;PHP_SELF&quot;]</code>变量能够被黑客利用！<br>如果页面中使用了<code>PHP_SELF</code>，用户能够输入下划线然后执行跨站点脚本（XSS）。<br>比如说注入js脚本等，valine以前的版本也有过这样的漏洞。</p><p><code>跨站点脚本（Cross-site scripting，XSS）</code>是一种计算机安全漏洞类型，常见于 Web 应用程序。XSS 能够使攻击者向其他用户浏览的网页中输入客户端脚本。</p></div><a id="more"></a><p>可以像valine一样在用户输入完后保留输入，还有一些正则控制输入提示等简单功能。UI就丑爆了算了。。。<br></p><figure class="highlight xml"><figcaption><span>完整表单</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.error</span> &#123;<span class="attribute">color</span>: <span class="number">#FF0000</span>;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.main</span>&#123;</span></span><br><span class="line"><span class="undefined">   width: 20%;</span></span><br><span class="line"><span class="undefined">   height: 100%;</span></span><br><span class="line"><span class="css">   <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-id">#000</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line"><span class="undefined">   padding: 20px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// 定义变量并设置为空值</span></span></span><br><span class="line"><span class="php">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $nameErr = <span class="string">"Name is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $name = test_input($_POST[<span class="string">"name"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查名字是否包含字母和空格</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span></span><br><span class="line"><span class="php">      $nameErr = <span class="string">"Only letters and white space allowed"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"email"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $emailErr = <span class="string">"Email is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $email = test_input($_POST[<span class="string">"email"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查电邮地址语法是否有效</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span></span><br><span class="line"><span class="php">      $emailErr = <span class="string">"Invalid email format"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"website"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $website = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $website = test_input($_POST[<span class="string">"website"</span>]);</span></span><br><span class="line"><span class="php">    <span class="comment">// 检查 URL 地址语言是否有效（此正则表达式同样允许 URL 中的下划线）</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span></span></span><br><span class="line"><span class="php">    =~_|]/i<span class="string">",$website)) &#123;</span></span></span><br><span class="line"><span class="php">      $websiteErr = <span class="string">"Invalid URL"</span>; </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"comment"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $comment = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $comment = test_input($_POST[<span class="string">"comment"</span>]);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"gender"</span>])) &#123;</span></span><br><span class="line"><span class="php">    $genderErr = <span class="string">"Gender is required"</span>;</span></span><br><span class="line"><span class="php">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $gender = test_input($_POST[<span class="string">"gender"</span>]);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span></span><br><span class="line"><span class="php">   $data = trim($data);</span></span><br><span class="line"><span class="php">   $data = stripslashes($data);</span></span><br><span class="line"><span class="php">   $data = htmlspecialchars($data);</span></span><br><span class="line"><span class="php">   <span class="keyword">return</span> $data;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>PHP 验证实例<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER['PHP_SELF']);?&gt;"</span>&gt;</span> </span><br><span class="line">      姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $name;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nameErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      性别:</span><br><span class="line">      &lt;input type="radio" name="gender" &lt;?php if (isset($gender) &amp;&amp; $gender=="女性") echo "checked";?&gt; value="女性"&gt;女性</span><br><span class="line">      &lt;input type="radio" name="gender" &lt;?php if (isset($gender) &amp;&amp; $gender=="男性") echo "checked";?&gt; value="男性"&gt;男性</span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $genderErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      电邮：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $email;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $emailErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      网址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $website;?&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $websiteErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      评论：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $comment;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你的输入是：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $name.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $gender.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $email.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $website.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $comment.<span class="string">"&lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">      <span class="meta">?&gt;</span></span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><img src="/images/loading_img.gif" data-original="/posts/phpform/comment.png" title="实际效果">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;简单模仿了一个评论模板，当然肯定是没有博客的valine这么强大的hhhh，&lt;br&gt;&lt;span class=&quot;label warning&quot;&gt;PHP表单安全性的重要提示!&lt;/span&gt;&lt;br&gt;&lt;code&gt;$_SERVER[&amp;quot;PHP_SELF&amp;quot;]&lt;/code&gt;变量能够被黑客利用！&lt;br&gt;如果页面中使用了&lt;code&gt;PHP_SELF&lt;/code&gt;，用户能够输入下划线然后执行跨站点脚本（XSS）。&lt;br&gt;比如说注入js脚本等，valine以前的版本也有过这样的漏洞。&lt;/p&gt;&lt;p&gt;&lt;code&gt;跨站点脚本（Cross-site scripting，XSS）&lt;/code&gt;是一种计算机安全漏洞类型，常见于 Web 应用程序。XSS 能够使攻击者向其他用户浏览的网页中输入客户端脚本。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Backend" scheme="https://lruihao.cn/tags/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>php函数学习</title>
    <link href="https://lruihao.cn/posts/phpfunc.html"/>
    <id>https://lruihao.cn/posts/phpfunc.html</id>
    <published>2019-07-15T03:37:33.000Z</published>
    <updated>2019-10-19T02:41:31.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary no-icon"><p>练习php函数的基本使用。<br>注：<br>必选参数在可选参数的前面。<br>可在函数中定义函数，需要先调用外层函数才能调用内层函数。</p></div><a id="more"></a><figure class="highlight php"><figcaption><span>php函数动态创建表格</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建表格</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createTable</span><span class="params">($rows,$cols,$bgcolor=<span class="string">'pink'</span>,$content=<span class="string">'x'</span>)</span></span>&#123;</span><br><span class="line">$table = <span class="string">"&lt;table border='1' bgcolor='&#123;$bgcolor&#125;' cellpadding='10' cellspacing='0' width='50%' &gt;"</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=$rows;$i++)&#123;</span><br><span class="line">$table.=<span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">1</span>;$j&lt;=$cols;$j++)&#123;</span><br><span class="line">$table.=<span class="string">"&lt;td&gt;&#123;$content&#125;&lt;/td&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$table .=<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$table.=<span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> $table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> createTable(<span class="number">5</span>,<span class="number">5</span>,<span class="string">'pink'</span>,<span class="string">'hello lruihao'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/phpfunc/table.png" title="php创建表格">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary no-icon&quot;&gt;&lt;p&gt;练习php函数的基本使用。&lt;br&gt;注：&lt;br&gt;必选参数在可选参数的前面。&lt;br&gt;可在函数中定义函数，需要先调用外层函数才能调用内层函数。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/categories/Backend/PHP/"/>
    
    
      <category term="Backend" scheme="https://lruihao.cn/tags/Backend/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>WAMPServer自定义网站根目录等设置</title>
    <link href="https://lruihao.cn/posts/wamproot.html"/>
    <id>https://lruihao.cn/posts/wamproot.html</id>
    <published>2019-07-12T10:44:36.000Z</published>
    <updated>2019-10-19T02:43:18.289Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>使用WAMPServer时自定义网站根目录。</p></div><a id="more"></a><h1 id="WAMPServer自定义网站根目录"><a href="#WAMPServer自定义网站根目录" class="headerlink" title="WAMPServer自定义网站根目录"></a>WAMPServer自定义网站根目录</h1><h2 id="修改apache配置文件"><a href="#修改apache配置文件" class="headerlink" title="修改apache配置文件"></a>修改apache配置文件</h2><p>打开<code>httpd.conf</code>文件搜索<code>documentroot</code>后，找到路径修改为自定义的。<br><img src="/images/loading_img.gif" data-original="/posts/wamproot/httpd.png" title="修改httpd.conf文件"></p><p>再打开<code>httpd-vhost.conf</code>文件修改对应的路径。<br><code>修改完配置文件需要重启所有服务！</code></p><h2 id="修改wampmanager文件"><a href="#修改wampmanager文件" class="headerlink" title="修改wampmanager文件"></a>修改wampmanager文件</h2><p>在wampserver安装路径根目录知道<code>wampmanager.ini</code>和<code>wampmanager.tpl</code>两个文件。搜索<code>menu.left</code>,然后也修改为自定义的路径。<br><code>然后退出，重启软件！</code><br><img src="/images/loading_img.gif" data-original="/posts/wamproot/wampmanager-ini.png" title="修改wampmanager.ini文件"><br><img src="/images/loading_img.gif" data-original="/posts/wamproot/wampmanager-tpl.png" title="修改wampmanager.tpl文件"></p><h2 id="编写php文件测试"><a href="#编写php文件测试" class="headerlink" title="编写php文件测试"></a>编写php文件测试</h2><figure class="highlight php"><figcaption><span>test.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"hello world"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/wamproot/test.png" title="测试结果"><h1 id="WAMPServer多站点配置"><a href="#WAMPServer多站点配置" class="headerlink" title="WAMPServer多站点配置"></a>WAMPServer多站点配置</h1><p>打开<code>httpd-vhost.conf</code>文件，复制原有的几行配置文件，粘贴修改路径和域名等配置。比如<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Virtual Hosts</span><br><span class="line">#</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName localhost</span><br><span class="line">  ServerAlias localhost</span><br><span class="line">  DocumentRoot &quot;g:/Demo&quot;</span><br><span class="line">  &lt;Directory &quot;g:/Demo&quot;&gt;</span><br><span class="line">    Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require local</span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName test01.com</span><br><span class="line">  DocumentRoot &quot;g:/Demo/test01&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName test02.com</span><br><span class="line">  DocumentRoot &quot;g:/Demo/test02&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p></p><p>再打开<code>C:\Windows\System32\drivers\etc\hosts</code>文件,在文件最后添加类似于云服务器的域名解析，进行本地域名解析，当输入域名时优先从本地申请资源。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"># For example:</span><br><span class="line">#</span><br><span class="line"># 102.54.94.97 rhino.acme.com # source server</span><br><span class="line"># 38.25.63.10 x.acme.com # x client host</span><br><span class="line"># localhost name resolution is handled within DNS itself.</span><br><span class="line">#127.0.0.1 localhost</span><br><span class="line">#::1 localhost</span><br><span class="line">127.0.0.1 steamcommunity.com</span><br><span class="line">192.168.28.1 windows10.microdone.cn</span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">::1 localhost</span><br><span class="line">127.0.0.1 test01.com</span><br><span class="line">127.0.0.1 test02.com</span><br></pre></td></tr></table></figure><p></p><h1 id="WAMPServer自拟定端口"><a href="#WAMPServer自拟定端口" class="headerlink" title="WAMPServer自拟定端口"></a>WAMPServer自拟定端口</h1><p>WAMP服务我安装了好几次，每次因为修改配置文件搞崩了。。第一次装的时候发现80端口被占用了，因为以前玩了一下Windows的IIS，暂停IIS的网站，再使用命令或者直接在控制面板关掉就好了。</p><ol><li><p>如果不使用80多为默认端口，比如修改为8080，还是在<code>httpd.conf</code>文件里修改。搜索<code>80</code>都改成<code>8080</code>然后，Ctrl+S保存，重新启动WampServer<br>在浏览器地址栏输入<code>localhost:8000</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#监听端口</span><br><span class="line">Listen 0.0.0.0:8080</span><br><span class="line">Listen [::0]:8080</span><br><span class="line">ServerName localhost:8080</span><br></pre></td></tr></table></figure></li><li><p>使用Notepad++打开 C:\wamp 目录下的wampmanager.ini和wampmanager.tpl<br>Ctrl+F查找 <code>localhost</code><br>将其全部替换为<code>localhost:8000</code><br>然后，Ctrl+S保存，重新启动WampServer</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;使用WAMPServer时自定义网站根目录。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Fullstack" scheme="https://lruihao.cn/categories/Fullstack/"/>
    
    
      <category term="server" scheme="https://lruihao.cn/tags/server/"/>
    
      <category term="PHP" scheme="https://lruihao.cn/tags/PHP/"/>
    
      <category term="windows" scheme="https://lruihao.cn/tags/windows/"/>
    
      <category term="WAMPServer" scheme="https://lruihao.cn/tags/WAMPServer/"/>
    
  </entry>
  
  <entry>
    <title>python实训总结Ⅱ</title>
    <link href="https://lruihao.cn/posts/pysx2.html"/>
    <id>https://lruihao.cn/posts/pysx2.html</id>
    <published>2019-06-21T10:46:41.000Z</published>
    <updated>2019-10-19T02:46:42.761Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info no-icon"><p>后面几天讲的有点杂，简单记录一下知识点。</p></div><a id="more"></a><h1 id="6-19"><a href="#6-19" class="headerlink" title="6.19"></a>6.19</h1><blockquote><p>这些知识点在课上都只是简单的提到了一下。<br>比如一些库的使用与安装都不会再课上详细讲解，需要课后再去研究。</p></blockquote><h2 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a><a href="https://www.jianshu.com/p/15715d6f4dad" rel="external nofollow noopener noreferrer" target="_blank">切片操作</a></h2><p>列表切片操作</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="python原始字符串"><a href="#python原始字符串" class="headerlink" title="python原始字符串"></a>python原始字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">r"D:\three\two"</span>)</span><br></pre></td></tr></table></figure><h3 id="长字符串"><a href="#长字符串" class="headerlink" title="长字符串"></a>长字符串</h3><p>用三个单引号或者双引号包裹，前后呼应，成双成对。</p><h3 id="用-换行字符表示字符未结束"><a href="#用-换行字符表示字符未结束" class="headerlink" title="用\换行字符表示字符未结束"></a>用\换行字符表示字符未结束</h3><h2 id="格式化输出format"><a href="#格式化输出format" class="headerlink" title="格式化输出format"></a>格式化输出format</h2><p><code>&quot;=={}==&quot;</code>，<code>{}</code>表示占位符，其前后字符保持原样输出。</p><figure class="highlight py"><figcaption><span>TempConvert.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TempConvert.py</span></span><br><span class="line">TempStr = input(<span class="string">"请输入带有符号的温度值: "</span>)</span><br><span class="line"><span class="keyword">if</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'F'</span>,<span class="string">'f'</span>]:</span><br><span class="line">    C = (eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) - <span class="number">32</span>)/<span class="number">1.8</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;C"</span>.format(C))</span><br><span class="line"><span class="keyword">elif</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'C'</span>,<span class="string">'c'</span>]:</span><br><span class="line">    F = <span class="number">1.8</span>*eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) + <span class="number">32</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;F"</span>.format(F))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"输入格式错误"</span>)</span><br></pre></td></tr></table></figure><h2 id="多变量赋值与交换（斐波那契数列）"><a href="#多变量赋值与交换（斐波那契数列）" class="headerlink" title="多变量赋值与交换（斐波那契数列）"></a>多变量赋值与交换（斐波那契数列）</h2><p>python 3.x版本 <code>end=&quot;&quot;</code> 可使输出不换行<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(x, end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p></p><figure class="highlight py"><figcaption><span>斐波那契数列</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#斐波那契数列</span></span><br><span class="line">a, b = <span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">500</span>: <span class="comment"># 输出不大于500 的序列</span></span><br><span class="line">    print(a,end=<span class="string">","</span>)</span><br><span class="line">    a,b = b,a + b <span class="comment">#交换变量</span></span><br></pre></td></tr></table></figure><h2 id="笑傲江湖统计字符-dict-文件流"><a href="#笑傲江湖统计字符-dict-文件流" class="headerlink" title="笑傲江湖统计字符(dict,文件流)"></a>笑傲江湖统计字符(dict,文件流)</h2><blockquote><p>统计《笑傲江湖》小说中出现的所有中文字符及标点符号的数量，每个字符及数目间用冒号<code>:</code>隔开，例如”笑:1024”，将所有字符及数量的对应采用逗号分隔，以CSV文件格式保存到<code>“笑傲江湖--字符统计.txt”</code>文件中。注意，统计字符不包括空格和回车。</p></blockquote><blockquote><p>csv文件格式： ‘,’逗号连接元素</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">fi = open(<span class="string">"data/笑傲江湖-网络版.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">fo = open(<span class="string">"data/笑傲江湖-字符统计.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">txt = fi.read() <span class="comment">#打开文件</span></span><br><span class="line"><span class="comment">#txt</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> txt:</span><br><span class="line">    d[c] = d.get(c,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">' '</span>] <span class="comment">#删除字典中的空格和回车的键值对</span></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">'\n'</span>]</span><br><span class="line"></span><br><span class="line">ls = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">    ls.append(<span class="string">"&#123;&#125;:&#123;&#125;"</span>.format(key,d[key]))</span><br><span class="line"></span><br><span class="line">fo.write(<span class="string">","</span>.join(ls)) </span><br><span class="line">fi.close()</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/tj.png" title="文件读取及字符统计结果"><h2 id="numpy模块"><a href="#numpy模块" class="headerlink" title="numpy模块"></a>numpy模块</h2><p><strong>…</strong></p><h2 id="pandas模块"><a href="#pandas模块" class="headerlink" title="pandas模块"></a>pandas模块</h2><p><strong>…</strong></p><h1 id="6-20"><a href="#6-20" class="headerlink" title="6.20"></a>6.20</h1><h2 id="matplotlib绘图"><a href="#matplotlib绘图" class="headerlink" title="matplotlib绘图"></a>matplotlib绘图</h2><figure class="highlight py"><figcaption><span>指数函数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.arange(<span class="number">-5</span>,<span class="number">5</span>,<span class="number">0.01</span>)</span><br><span class="line">y = <span class="number">2</span>**x+<span class="number">1</span></span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">"y=2^x+1"</span>,fontsize=<span class="number">24</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X"</span>,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y"</span>,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.tick_params(axis=<span class="string">"both"</span>,labelsize=<span class="number">14</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/zhishu.png" title="Y=2<sup>X</sup>+1"><h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><p>举了一个金融界，炒股，获取数据的爬虫<br>（今天没仔细听课，这数据爬过什么意思，咱不懂，咱也不敢问！）<br></p><figure class="highlight py"><figcaption><span>stock15</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python </span></span><br><span class="line"><span class="comment">#-*- encoding: utf-8 -*- </span></span><br><span class="line"><span class="comment">#author pythontab.com </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_datareader.data <span class="keyword">as</span> web</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment">#import tushare as ts</span></span><br><span class="line"></span><br><span class="line">df_stockload = web.DataReader(<span class="string">"000001.SS"</span>, <span class="string">"yahoo"</span>, datetime.datetime(<span class="number">2017</span>,<span class="number">1</span>,<span class="number">1</span>), datetime.date.today())</span><br><span class="line"><span class="comment">#print(type(datetime.datetime.now().strftime('%Y-%m-%d')))</span></span><br><span class="line"><span class="comment">#df_stockload = ts.get_hist_data('sh',start='2017-01-01',end=datetime.datetime.now().strftime('%Y-%m-%d'))</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.columns)<span class="comment">#查看列名</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.index)<span class="comment">#查看索引</span></span><br><span class="line"><span class="keyword">print</span> (df_stockload.describe())<span class="comment">#查看各列数据描述性统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#绘制移动平均线</span></span><br><span class="line">df_stockload.Close.plot(c=<span class="string">'b'</span>)</span><br><span class="line">df_stockload.Close.rolling(window=<span class="number">30</span>).mean().plot(c=<span class="string">'r'</span>) <span class="comment">#pd.rolling_mean(df_stockload.Close,window=30).plot(c='r')</span></span><br><span class="line">df_stockload.Close.rolling(window=<span class="number">60</span>).mean().plot(c=<span class="string">'g'</span>) <span class="comment">#pd.rolling_mean(df_stockload.Close,window=60).plot(c='g')</span></span><br><span class="line">plt.legend([<span class="string">'Close'</span>,<span class="string">'30ave'</span>,<span class="string">'60ave'</span>],loc=<span class="string">'best'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p></p><figure class="highlight py"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Index([<span class="string">'High'</span>, <span class="string">'Low'</span>, <span class="string">'Open'</span>, <span class="string">'Close'</span>, <span class="string">'Volume'</span>, <span class="string">'Adj Close'</span>], dtype=<span class="string">'object'</span>)</span><br><span class="line">DatetimeIndex([<span class="string">'2017-01-03'</span>, <span class="string">'2017-01-04'</span>, <span class="string">'2017-01-05'</span>, <span class="string">'2017-01-06'</span>,</span><br><span class="line">               <span class="string">'2017-01-09'</span>, <span class="string">'2017-01-10'</span>, <span class="string">'2017-01-11'</span>, <span class="string">'2017-01-12'</span>,</span><br><span class="line">               <span class="string">'2017-01-13'</span>, <span class="string">'2017-01-16'</span>,</span><br><span class="line">               ...</span><br><span class="line">               <span class="string">'2019-06-05'</span>, <span class="string">'2019-06-06'</span>, <span class="string">'2019-06-10'</span>, <span class="string">'2019-06-11'</span>,</span><br><span class="line">               <span class="string">'2019-06-12'</span>, <span class="string">'2019-06-13'</span>, <span class="string">'2019-06-14'</span>, <span class="string">'2019-06-19'</span>,</span><br><span class="line">               <span class="string">'2019-06-20'</span>, <span class="string">'2019-06-21'</span>],</span><br><span class="line">              dtype=<span class="string">'datetime64[ns]'</span>, name=<span class="string">'Date'</span>, length=<span class="number">596</span>, freq=<span class="keyword">None</span>)</span><br><span class="line">              High          Low         Open        Close        Volume  \</span><br><span class="line">count   <span class="number">596.000000</span>   <span class="number">596.000000</span>   <span class="number">596.000000</span>   <span class="number">596.000000</span>  <span class="number">5.960000e+02</span>   </span><br><span class="line">mean   <span class="number">3076.147753</span>  <span class="number">3039.201569</span>  <span class="number">3056.960338</span>  <span class="number">3060.169056</span>  <span class="number">5.098201e+06</span>   </span><br><span class="line">std     <span class="number">269.276147</span>   <span class="number">273.757358</span>   <span class="number">271.612122</span>   <span class="number">272.072346</span>  <span class="number">1.199107e+08</span>   </span><br><span class="line">min    <span class="number">2488.479004</span>  <span class="number">2440.906982</span>  <span class="number">2446.019043</span>  <span class="number">2464.363037</span>  <span class="number">8.820000e+04</span>   </span><br><span class="line"><span class="number">25</span>%    <span class="number">2845.308228</span>  <span class="number">2800.168762</span>  <span class="number">2825.239502</span>  <span class="number">2827.754822</span>  <span class="number">1.375250e+05</span>   </span><br><span class="line"><span class="number">50</span>%    <span class="number">3153.184937</span>  <span class="number">3118.613525</span>  <span class="number">3134.300537</span>  <span class="number">3139.085449</span>  <span class="number">1.666500e+05</span>   </span><br><span class="line"><span class="number">75</span>%    <span class="number">3280.115234</span>  <span class="number">3244.825256</span>  <span class="number">3265.322021</span>  <span class="number">3268.600342</span>  <span class="number">2.091250e+05</span>   </span><br><span class="line">max    <span class="number">3587.031982</span>  <span class="number">3534.195068</span>  <span class="number">3563.639893</span>  <span class="number">3559.465088</span>  <span class="number">2.927580e+09</span>   </span><br><span class="line"></span><br><span class="line">         Adj Close  </span><br><span class="line">count   <span class="number">596.000000</span>  </span><br><span class="line">mean   <span class="number">3060.169056</span>  </span><br><span class="line">std     <span class="number">272.072346</span>  </span><br><span class="line">min    <span class="number">2464.363037</span>  </span><br><span class="line"><span class="number">25</span>%    <span class="number">2827.754822</span>  </span><br><span class="line"><span class="number">50</span>%    <span class="number">3139.085449</span>  </span><br><span class="line"><span class="number">75</span>%    <span class="number">3268.600342</span>  </span><br><span class="line">max    <span class="number">3559.465088</span></span><br></pre></td></tr></table></figure><img src="/images/loading_img.gif" data-original="/posts/pysx2/stock15.png" title="生成的图"><h1 id="6-21"><a href="#6-21" class="headerlink" title="6.21"></a>6.21</h1><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>比第一天稍微仔细一点讲了一下类,有点需要注意：</p><ul><li><code>self</code>相当于<code>this</code>表示当前对象</li><li>python类的所有函数的第一个参数都要写<code>self</code>参数，self也可以是其他的比如<code>lrh</code>等字符替代，但是必须保持一致。</li><li><code>__</code>表示私有的</li><li>class的定义可以不加(),()内可写继承的父类</li></ul><h2 id="GUI设计-wxPython"><a href="#GUI设计-wxPython" class="headerlink" title="GUI设计 wxPython"></a>GUI设计 <a href="https://blog.csdn.net/mist99/article/details/80742548" rel="external nofollow noopener noreferrer" target="_blank">wxPython</a></h2><figure class="highlight plain"><figcaption><span>安装</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wxPython</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>导入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>基本架构</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx <span class="comment">#导入wxPython库</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Panel</span><span class="params">(wx.Panel)</span>:</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent)</span>:</span>  </span><br><span class="line"></span><br><span class="line">        wx.Panel.__init__(self,parent=parent, id=<span class="number">-1</span>)  </span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span>     </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Frame</span><span class="params">(wx.Frame)</span>:</span>   </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line"></span><br><span class="line">        wx.Frame.__init__(self, parent = <span class="keyword">None</span>, title = <span class="string">u'量化软件'</span>, size=(<span class="number">1000</span>,<span class="number">600</span>), style=wx.DEFAULT_FRAME_STYLE^wx.MAXIMIZE_BOX)   </span><br><span class="line"></span><br><span class="line">        self.DispPanel= Panel(self)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span>            </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(wx.App)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.frame = Frame()  </span><br><span class="line"></span><br><span class="line">        self.frame.Show()</span><br><span class="line"></span><br><span class="line">        self.SetTopWindow(self.frame)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:   </span><br><span class="line"></span><br><span class="line">    app = App()</span><br><span class="line"></span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>helloworld</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"></span><br><span class="line">app = wx.App()</span><br><span class="line">window = wx.Frame(<span class="keyword">None</span>, title=<span class="string">"wxPython 你好！"</span>, size=(<span class="number">400</span>, <span class="number">300</span>))</span><br><span class="line">panel = wx.Panel(window)</span><br><span class="line">label = wx.StaticText(panel, label=<span class="string">"Hello World"</span>, pos=(<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">window.Show(<span class="keyword">True</span>)</span><br><span class="line">app.MainLoop()</span><br></pre></td></tr></table></figure><h2 id="talib库的安装"><a href="#talib库的安装" class="headerlink" title="talib库的安装"></a>talib库的安装</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib" rel="external nofollow noopener noreferrer" target="_blank">下载whl文件</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install TA_Lib-0.4.17-cp37-cp37m-win_amd64.whl</span><br><span class="line">pip install TA-Lib</span><br></pre></td></tr></table></figure><h2 id="选择排序递归版"><a href="#选择排序递归版" class="headerlink" title="选择排序递归版"></a>选择排序递归版</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SelectSort</span><span class="params">(L)</span>:</span></span><br><span class="line">    L=L[:]</span><br><span class="line">    <span class="keyword">if</span> len(L)&lt;=<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> L</span><br><span class="line">    min = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(L)):</span><br><span class="line">        <span class="keyword">if</span> L[i]&lt;L[min]:</span><br><span class="line">            min = i</span><br><span class="line">    L[min],L[<span class="number">0</span>] = L[<span class="number">0</span>],L[min]</span><br><span class="line">    <span class="keyword">return</span> [L[<span class="number">0</span>]]+SelectSort(L[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">L = [<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">0</span>]</span><br><span class="line">print(SelectSort(L))</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h2 id="机房上机系统-自我实践"><a href="#机房上机系统-自我实践" class="headerlink" title="机房上机系统(自我实践)"></a>机房上机系统(自我实践)</h2><figure class="highlight py"><figcaption><span>简单机房上机系统源码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,stu_no=<span class="string">""</span>,stu_name=<span class="string">""</span>,stu_xi=<span class="string">""</span>,stu_time=<span class="string">""</span>)</span>:</span></span><br><span class="line">        self.stu_no = stu_no</span><br><span class="line">        self.stu_name = stu_name</span><br><span class="line">        self.stu_xi = stu_xi</span><br><span class="line">        self.stu_time = stu_time</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"学号："</span>+self.stu_no+<span class="string">"\t姓名："</span>+self.stu_name+<span class="string">"\t系别："</span>+self.stu_xi+<span class="string">"\t机时(h)："</span>+self.stu_time)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_stu_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.stu_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_stu_time</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> int(self.stu_time)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_stu_time</span><span class="params">(self,add_time)</span>:</span></span><br><span class="line">        self.stu_time = add_time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">menu</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"\t机房上机系统V0.1"</span>)</span><br><span class="line">    print(<span class="string">"********************************"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;1.录入学生信息"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;2.上机"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;3.下机"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;4.缴费"</span>)</span><br><span class="line">    print(<span class="string">"\t—&gt;5.退出"</span>)</span><br><span class="line">    print(<span class="string">"********************************"</span>)</span><br><span class="line">    select = eval(input(<span class="string">"请输入序号："</span>))</span><br><span class="line">    <span class="keyword">while</span> select <span class="keyword">not</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入！"</span>)</span><br><span class="line">        select = eval(input(<span class="string">"请输入序号："</span>))</span><br><span class="line">    <span class="keyword">return</span> select</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span> <span class="comment">#获取当前时间</span></span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime()) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 全局变量</span></span><br><span class="line">    text = [] <span class="comment"># 上机记录列表</span></span><br><span class="line">    start_time = <span class="string">""</span></span><br><span class="line">    end_time = <span class="string">""</span></span><br><span class="line">    sum = <span class="number">0</span> <span class="comment"># 本系统按小时计费，不足一小时按一小时算</span></span><br><span class="line">    people = student()</span><br><span class="line">    online_flag = <span class="keyword">False</span></span><br><span class="line">    down_flag = <span class="keyword">False</span></span><br><span class="line">    input_flag = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        select = menu() <span class="comment"># 启用菜单</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> select == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> input_flag:</span><br><span class="line">                print(<span class="string">"已录入，无需重复操作，缴费请输入4:"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                input_flag = <span class="keyword">True</span></span><br><span class="line">                stu_no = input(<span class="string">"请输入学号："</span>)</span><br><span class="line">                stu_name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">                stu_xi = input(<span class="string">"请输入系别："</span>)</span><br><span class="line">                stu_time = input(<span class="string">"请输入机时："</span>)</span><br><span class="line">                people = student(stu_no,stu_name,stu_xi,stu_time)</span><br><span class="line">                people.print()</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> input_flag:</span><br><span class="line">                print(<span class="string">"未录入学生信息，请录入！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> online_flag:</span><br><span class="line">                online_flag = <span class="keyword">True</span></span><br><span class="line">                start_time = get_time()</span><br><span class="line">                start_num = int(start_time[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">                <span class="comment">#print(start_num)</span></span><br><span class="line"></span><br><span class="line">                text.append(<span class="string">"上机时间："</span>+start_time)</span><br><span class="line">                print(<span class="string">"已上机！上机时间为："</span>+start_time)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"已上机！上机时间为："</span>+start_time)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> online_flag:</span><br><span class="line">                print(<span class="string">"还未上机，请上机！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                end_time = get_time()</span><br><span class="line">                end_num = int(end_time[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">                sum = end_num - start_num</span><br><span class="line">                sum = sum <span class="keyword">if</span>(sum&gt;=<span class="number">0</span>) <span class="keyword">else</span> sum+<span class="number">24</span></span><br><span class="line">                sum = sum+<span class="number">1</span> <span class="keyword">if</span>(sum==<span class="number">0</span>) <span class="keyword">else</span> sum</span><br><span class="line">                print(<span class="string">"已下机！下机时间为："</span>+end_time+<span class="string">"\n上机时长(h)："</span>+str(sum)+<span class="string">"\t剩余机时(h)："</span>+str(people.get_stu_time()-sum))</span><br><span class="line">                text.append(<span class="string">"下机时间："</span>+end_time+<span class="string">"\n上机时长(h)："</span>+str(sum)+<span class="string">"\t"</span>+people.get_stu_name()+<span class="string">"剩余机时(h)："</span>+str(people.get_stu_time()-sum))</span><br><span class="line">                people.set_stu_time(str(people.get_stu_time()-sum))</span><br><span class="line">                down_flag = <span class="keyword">True</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> input_flag:</span><br><span class="line">                print(<span class="string">"未录入学生信息，请录入！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                people.print()</span><br><span class="line">                add_time = eval(input(<span class="string">"请输入机时："</span>))</span><br><span class="line">                people.set_stu_time(str(add_time+people.get_stu_time()))</span><br><span class="line">                people.print()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> down_flag:</span><br><span class="line">                print(<span class="string">"3s后退出系统，感谢使用！"</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>) <span class="comment"># 延迟3s，显示提示文字</span></span><br><span class="line">                <span class="keyword">break</span> <span class="comment"># 退出系统 写入文件</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"请下机！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入computer.txt文件</span></span><br><span class="line">    fo = open(<span class="string">"D:\\computer.txt"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    fo.write(<span class="string">"\n"</span>.join(text)) </span><br><span class="line">    fo.close()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="量化交易代码分析与调试"><a href="#量化交易代码分析与调试" class="headerlink" title="量化交易代码分析与调试"></a>量化交易代码分析与调试</h2><p>由于python的版本问题和一些库的导入问题所以还未调试成功，先挂上代码。以后改篇再论。<br></p><figure class="highlight py"><figcaption><span>主要代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python </span></span><br><span class="line"><span class="comment">#-*- encoding: utf-8 -*- </span></span><br><span class="line"><span class="comment">#author pythontab.com </span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">import</span> wx.adv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_datareader.data <span class="keyword">as</span> web</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.figure <span class="keyword">import</span> Figure  </span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdates</span><br><span class="line"><span class="keyword">import</span> mpl_finance <span class="keyword">as</span> mpf</span><br><span class="line"><span class="keyword">from</span> matplotlib.backends.backend_wxagg <span class="keyword">import</span> FigureCanvasWxAgg <span class="keyword">as</span> FigureCanvas</span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec<span class="comment">#分割子图</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> talib</span><br><span class="line"><span class="keyword">import</span> csv,os</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> RedefPanelMod <span class="keyword">import</span> MPL_Panel_Base,Loop_Panel_Base</span><br><span class="line"><span class="keyword">from</span> StockDataMod <span class="keyword">import</span> GetStockDatPro</span><br><span class="line"><span class="keyword">from</span> IndicatStrateMod <span class="keyword">import</span> Excave_Indic_Base, QuantPickTimeSys,FactorPickStockAng</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] <span class="comment">#用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="keyword">False</span> <span class="comment">#用来正常显示负号</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDialog</span><span class="params">(wx.Dialog)</span>:</span><span class="comment"># user-defined</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent,text)</span>:</span></span><br><span class="line">        wx.Dialog.__init__(self,parent,<span class="number">-1</span>,<span class="string">u"选股提示"</span>,size=(<span class="number">400</span>,<span class="number">500</span>),style=wx.CAPTION|wx.CLOSE_BOX|wx.MAXIMIZE_BOX|wx.MINIMIZE_BOX)</span><br><span class="line">        </span><br><span class="line">        sizer = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        </span><br><span class="line">        pstock_Text = wx.StaticText(self, <span class="number">-1</span>, <span class="string">u'选股策略筛选结果'</span>) </span><br><span class="line">        pstock_Text.SetFont(wx.Font(<span class="number">18</span>,wx.DEFAULT,wx.NORMAL,wx.BOLD))</span><br><span class="line">        pstock_sure = wx.TextCtrl(self, <span class="number">-1</span>, <span class="string">"角度值:\n"</span>,size=(<span class="number">350</span>,<span class="number">300</span>),style = wx.TE_MULTILINE|wx.TE_READONLY)<span class="comment">#多行|只读</span></span><br><span class="line">        pstock_sure.SetFont(wx.Font(<span class="number">10</span>,wx.DEFAULT,wx.NORMAL,wx.BOLD))</span><br><span class="line"></span><br><span class="line">        okbtn = wx.Button(self,wx.ID_OK,<span class="string">u"确认"</span>)</span><br><span class="line">        okbtn.SetDefault()</span><br><span class="line">       </span><br><span class="line">        sizer.Add(pstock_Text,flag=wx.ALIGN_CENTER)</span><br><span class="line">        sizer.Add(pstock_sure,flag=wx.ALIGN_CENTER)</span><br><span class="line">        sizer.Add(okbtn,flag=wx.ALIGN_CENTER)       </span><br><span class="line">        self.SetSizer(sizer)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> text:pstock_sure.AppendText(i)</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Frame</span><span class="params">(wx.Frame)</span>:</span>   </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line">        wx.Frame.__init__(self, parent = <span class="keyword">None</span>, title = <span class="string">u'量化软件'</span>, size=(<span class="number">1500</span>,<span class="number">800</span>),   </span><br><span class="line">                      style=wx.DEFAULT_FRAME_STYLE^wx.MAXIMIZE_BOX)   </span><br><span class="line">        <span class="comment">#创建显示区面板</span></span><br><span class="line">        self.DispPanel = MPL_Panel_Base(self)</span><br><span class="line">        self.BackPanel = Loop_Panel_Base(self)</span><br><span class="line">        self.am = self.DispPanel.am</span><br><span class="line">        self.vol = self.DispPanel.vol</span><br><span class="line">        self.devol = self.DispPanel.devol</span><br><span class="line">        self.macd = self.DispPanel.macd        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建参数区面板</span></span><br><span class="line">        self.ParaPanel = wx.Panel(self,<span class="number">-1</span>)</span><br><span class="line">        </span><br><span class="line">        paraInput_Box = wx.StaticBox(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'参数输入'</span>) </span><br><span class="line">        paraInput_Sizer = wx.StaticBoxSizer(paraInput_Box, wx.VERTICAL)    </span><br><span class="line">        self.StNameCodedict = &#123;<span class="string">u"开山股份"</span>:<span class="string">"300257.SZ"</span>,<span class="string">u"浙大网新"</span>:<span class="string">"600797.SS"</span>,<span class="string">u"水晶光电"</span>:<span class="string">"002273.SZ"</span>, <span class="string">u"高鸿股份"</span>:<span class="string">"000851.SZ"</span>&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#初始化股票代码变量</span></span><br><span class="line">        self.stockName_Val = <span class="string">u"开山股份"</span></span><br><span class="line">        self.stockCode_Val = self.StNameCodedict[self.stockName_Val]</span><br><span class="line">        </span><br><span class="line">        self.stockName_CMBO = wx.ComboBox(self.ParaPanel, <span class="number">-1</span>,self.stockName_Val, choices = list(self.StNameCodedict.keys()), style = wx.CB_READONLY|wx.CB_DROPDOWN) <span class="comment">#股票名称</span></span><br><span class="line">        stockCode_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'股票名称'</span>) </span><br><span class="line"></span><br><span class="line">       <span class="comment">#策略选取</span></span><br><span class="line">        strate_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'策略名称'</span>) </span><br><span class="line">        strate_Combo_Val = [<span class="string">u"双趋势融合"</span>, <span class="string">u"阿尔法"</span>, <span class="string">u"布林带"</span>]</span><br><span class="line">        self.pickstrate_Val = <span class="string">u"双趋势融合"</span></span><br><span class="line">        self.pickstrate_CMBO = wx.ComboBox(self.ParaPanel, <span class="number">-1</span>, self.pickstrate_Val, choices = strate_Combo_Val, style = wx.CB_READONLY|wx.CB_DROPDOWN) <span class="comment">#策略名称        </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#日历控件选择数据周期</span></span><br><span class="line">        self.dpcEndTime = wx.adv.DatePickerCtrl(self.ParaPanel, <span class="number">-1</span>,style = wx.adv.DP_DROPDOWN|wx.adv.DP_SHOWCENTURY|wx.adv.DP_ALLOWNONE)<span class="comment">#结束时间</span></span><br><span class="line">        self.dpcStartTime = wx.adv.DatePickerCtrl(self.ParaPanel, <span class="number">-1</span>,style = wx.adv.DP_DROPDOWN|wx.adv.DP_SHOWCENTURY|wx.adv.DP_ALLOWNONE)<span class="comment">#起始时间</span></span><br><span class="line">        DateTimeNow = wx.DateTime.Now()<span class="comment">#wx.DateTime格式"03/03/18 00:00:00"</span></span><br><span class="line">       <span class="comment">#DateTimeNow = datetime.datetime.fromtimestamp(wx.DateTime.Now().GetTicks())</span></span><br><span class="line">       <span class="comment">#DateTimeNow = datetime.datetime.fromtimestamp(DateTimeNow)</span></span><br><span class="line">        self.dpcEndTime.SetValue(DateTimeNow)</span><br><span class="line">        DateTimeNow.SetYear(DateTimeNow.year<span class="number">-1</span>)</span><br><span class="line">        self.dpcStartTime.SetValue(DateTimeNow)</span><br><span class="line">        stockData_Text = wx.StaticText(self.ParaPanel, <span class="number">-1</span>, <span class="string">u'日期(Start-End)'</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#初始化时间变量</span></span><br><span class="line">        dateVal = self.dpcStartTime.GetValue() </span><br><span class="line">        self.stockSdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line">        dateVal = self.dpcEndTime.GetValue() </span><br><span class="line">        self.stockEdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line"></span><br><span class="line">        paraInput_Sizer.Add(stockCode_Text,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.stockName_CMBO, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(stockData_Text,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.dpcStartTime, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>) </span><br><span class="line">        paraInput_Sizer.Add(self.dpcEndTime, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>) </span><br><span class="line">        paraInput_Sizer.Add(strate_Text, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        paraInput_Sizer.Add(self.pickstrate_CMBO, <span class="number">0</span>, wx.EXPAND|wx.ALL|wx.CENTER, <span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        RadioList = [<span class="string">"不显示"</span>,<span class="string">"跳空缺口"</span>, <span class="string">"金叉/死叉"</span>, <span class="string">"N日突破"</span>] </span><br><span class="line">        self.StratInputBox = wx.RadioBox(self.ParaPanel, <span class="number">-1</span>, label=<span class="string">u'指标提示'</span>, choices=RadioList,majorDimension = <span class="number">4</span>, style = wx.RA_SPECIFY_ROWS) </span><br><span class="line">        self.StratInputBox.Bind(wx.EVT_RADIOBOX,self.OnRadioBox_Indicator) </span><br><span class="line">        <span class="comment">#初始化指标变量</span></span><br><span class="line">        self.IndicatInput_Val = self.StratInputBox.GetStringSelection()  </span><br><span class="line">        </span><br><span class="line">        self.TextAInput = wx.TextCtrl(self.ParaPanel, <span class="number">-1</span>, <span class="string">"交易信息提示:"</span>, style = wx.TE_MULTILINE|wx.TE_READONLY)<span class="comment">#多行|只读</span></span><br><span class="line"></span><br><span class="line">        vboxnetA = wx.BoxSizer(wx.VERTICAL)<span class="comment">#纵向box </span></span><br><span class="line">        vboxnetA.Add(paraInput_Sizer,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.BOTTOM,border=<span class="number">2</span>) <span class="comment">#proportion参数控制容器尺寸比例</span></span><br><span class="line">        vboxnetA.Add(self.StratInputBox,proportion=<span class="number">0</span>,flag=wx.EXPAND|wx.BOTTOM,border=<span class="number">2</span>)         </span><br><span class="line">        vboxnetA.Add(self.TextAInput,proportion=<span class="number">1</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">2</span>) </span><br><span class="line">        self.ParaPanel.SetSizer(vboxnetA)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建Right面板</span></span><br><span class="line">        self.CtrlPanel = wx.Panel(self,<span class="number">-1</span>) </span><br><span class="line">        <span class="comment">#创建FlexGridSizer布局网格</span></span><br><span class="line">        self.FlexGridSizer=wx.FlexGridSizer(rows=<span class="number">3</span>, cols=<span class="number">1</span>, vgap=<span class="number">3</span>, hgap=<span class="number">3</span>)  </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#行情按钮</span></span><br><span class="line">        self.Firmoffer = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"行情"</span>)</span><br><span class="line">        self.Firmoffer.Bind(wx.EVT_BUTTON,self.FirmEvent)<span class="comment">#绑定行情按钮事件  </span></span><br><span class="line">        <span class="comment">#选股按钮</span></span><br><span class="line">        self.Stockpick = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"选股"</span>)  </span><br><span class="line">        self.Stockpick.Bind(wx.EVT_BUTTON,self.PstockpEvent)<span class="comment">#绑定选股按钮事件</span></span><br><span class="line">        <span class="comment">#回测按钮  </span></span><br><span class="line">        self.Backtrace = wx.Button(self.CtrlPanel,<span class="number">-1</span>,<span class="string">"回测"</span>)  </span><br><span class="line">        self.Backtrace.Bind(wx.EVT_BUTTON,self.BackEvent)<span class="comment">#绑定回测按钮事件</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">#加入Sizer中  </span></span><br><span class="line">        self.FlexGridSizer.Add(self.Firmoffer,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND)  </span><br><span class="line">        self.FlexGridSizer.Add(self.Stockpick,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND)  </span><br><span class="line">        self.FlexGridSizer.Add(self.Backtrace,proportion = <span class="number">1</span>, border = <span class="number">5</span>,flag = wx.ALL | wx.EXPAND) </span><br><span class="line">        self.FlexGridSizer.SetFlexibleDirection(wx.BOTH)  </span><br><span class="line">        </span><br><span class="line">        self.CtrlPanel.SetSizer(self.FlexGridSizer)  </span><br><span class="line">        </span><br><span class="line">        self.HBoxPanel = wx.BoxSizer(wx.HORIZONTAL)</span><br><span class="line">        self.HBoxPanel.Add(self.ParaPanel,proportion = <span class="number">1.5</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL) </span><br><span class="line">        self.HBoxPanel.Add(self.DispPanel,proportion = <span class="number">8</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL )         </span><br><span class="line">        self.HBoxPanel.Add(self.CtrlPanel,proportion = <span class="number">1</span>, border = <span class="number">2</span>,flag = wx.EXPAND|wx.ALL ) </span><br><span class="line">        self.SetSizer(self.HBoxPanel)    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ProcessStock</span><span class="params">(self)</span>:</span>         </span><br><span class="line">        <span class="comment">#df_stockload = web.DataReader("600797.SS", "yahoo", datetime.datetime(2017,1,1), datetime.date.today())</span></span><br><span class="line">        df_stockload = GetStockDatPro(self.stockCode_Val,self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line"></span><br><span class="line">        <span class="string">""" 绘制移动平均线图 """</span></span><br><span class="line">        <span class="comment">#self.am.plot(self.numic[0:self.butNum],self.close[0:self.butNum],'#0f0ff0',linewidth=1.0)</span></span><br><span class="line">        </span><br><span class="line">        dispCont_List = []</span><br><span class="line"></span><br><span class="line">        examp_trade= Excave_Indic_Base()</span><br><span class="line">        <span class="keyword">if</span> self.IndicatInput_Val == <span class="string">u"金叉/死叉"</span>:  </span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Aver_Cross(df_stockload)</span><br><span class="line">            self.DispPanel.draw_avercross(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">elif</span> self.IndicatInput_Val == <span class="string">u"跳空缺口"</span>:</span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Jump_Thrd(df_stockload)</span><br><span class="line">            self.DispPanel.draw_jumpgap(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">elif</span> self.IndicatInput_Val == <span class="string">u"N日突破"</span>:</span><br><span class="line">            dispCont_pd,dispCont_List = examp_trade.plot_Ndays_Break(df_stockload)</span><br><span class="line">            self.DispPanel.draw_ndaysbreak(df_stockload,dispCont_pd)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dispCont_List = dispCont_List</span><br><span class="line">            </span><br><span class="line">        self.TextAInput.SetValue(<span class="string">u"指标提示信息如下:"</span>+<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dispCont_List:self.TextAInput.AppendText(i)</span><br><span class="line"></span><br><span class="line">        numic = np.arange(<span class="number">0</span>,len(df_stockload.index))</span><br><span class="line">        butNum = len(df_stockload.index)</span><br><span class="line">        self.DispPanel.xylabel_tick_lim(self.stockName_Val,df_stockload.index)</span><br><span class="line">        self.DispPanel.draw_subgraph(df_stockload,numic)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ProcessLoop</span><span class="params">(self)</span>:</span> </span><br><span class="line"></span><br><span class="line">        df_stockload = GetStockDatPro(self.stockCode_Val,self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line">        dispCont_List = []</span><br><span class="line">        <span class="keyword">if</span> self.pickstrate_Val == <span class="string">u"双趋势融合"</span>:  </span><br><span class="line">            <span class="comment">#多趋势融合策略执行 """</span></span><br><span class="line">            examp_trade= QuantPickTimeSys(df_stockload)</span><br><span class="line">            dispCont_List = examp_trade.run_factor_plot(self.BackPanel.trade,self.BackPanel.total,self.BackPanel.profit)           </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#执行其他策略</span></span><br><span class="line">            <span class="keyword">pass</span>    </span><br><span class="line">            </span><br><span class="line">        self.TextAInput.SetValue(<span class="string">u"策略提示信息如下:"</span>+<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dispCont_List:self.TextAInput.AppendText(i)</span><br><span class="line">        self.BackPanel.xylabel_tick_lim(self.stockName_Val)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reFlashLoop</span><span class="params">(self)</span>:</span> </span><br><span class="line">        self.BackPanel.clear_subgraph()<span class="comment">#必须清理图形才能显示下一幅图</span></span><br><span class="line">        self.ProcessLoop()</span><br><span class="line">        self.BackPanel.update_subgraph()<span class="comment">#必须刷新才能显示下一幅图 </span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reFlashFrame</span><span class="params">(self)</span>:</span> </span><br><span class="line">        self.DispPanel.clear_subgraph()<span class="comment">#必须清理图形才能显示下一幅图</span></span><br><span class="line">        self.ProcessStock()</span><br><span class="line">        self.DispPanel.update_subgraph()<span class="comment">#必须刷新才能显示下一幅图 </span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">FirmEvent</span><span class="params">(self,event)</span>:</span></span><br><span class="line">        <span class="comment">#显示行情面板</span></span><br><span class="line">        self.HBoxPanel.Hide(self.BackPanel)</span><br><span class="line">        self.HBoxPanel.Replace(self.BackPanel,self.DispPanel)</span><br><span class="line">        self.HBoxPanel.Show(self.DispPanel)</span><br><span class="line">        <span class="comment">#self.HBoxPanel.Remove(self.BackPanel)</span></span><br><span class="line">        self.SetSizer(self.HBoxPanel)  </span><br><span class="line">        self.HBoxPanel.Layout()    </span><br><span class="line">    </span><br><span class="line">        <span class="comment">#获取列表股票代码和起始时间</span></span><br><span class="line">        self.stockName_Val = self.stockName_CMBO.GetString(self.stockName_CMBO.GetSelection())</span><br><span class="line">        self.stockCode_Val = self.StNameCodedict[self.stockName_Val]</span><br><span class="line"></span><br><span class="line">        dateVal = self.dpcStartTime.GetValue() </span><br><span class="line">        self.stockSdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line">        dateVal = self.dpcEndTime.GetValue() </span><br><span class="line">        self.stockEdate_Val = datetime.datetime(dateVal.year,dateVal.month+<span class="number">1</span>,dateVal.day)</span><br><span class="line"></span><br><span class="line">        self.reFlashFrame()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BackEvent</span><span class="params">(self,event)</span>:</span>       </span><br><span class="line">        <span class="comment">#显示回测面板</span></span><br><span class="line">        self.HBoxPanel.Hide(self.DispPanel)</span><br><span class="line">        self.HBoxPanel.Replace(self.DispPanel,self.BackPanel) </span><br><span class="line">        self.HBoxPanel.Show(self.BackPanel)</span><br><span class="line">        <span class="comment">#self.HBoxPanel.Remove(self.DispPanel)</span></span><br><span class="line">        self.SetSizer(self.HBoxPanel)  </span><br><span class="line">        self.HBoxPanel.Layout()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#获取策略名称</span></span><br><span class="line">        self.pickstrate_Val = self.pickstrate_CMBO.GetString(self.pickstrate_CMBO.GetSelection())</span><br><span class="line">        self.reFlashLoop()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">PstockpEvent</span><span class="params">(self,event)</span>:</span></span><br><span class="line">        dispCont_List = []</span><br><span class="line">        <span class="string">""" 选股策略执行 """</span></span><br><span class="line">        examp_trade= FactorPickStockAng()</span><br><span class="line">        <span class="keyword">for</span> index, stockName <span class="keyword">in</span> enumerate(self.StNameCodedict.keys()) : </span><br><span class="line">            print(<span class="string">"stockName"</span>,stockName,self.StNameCodedict[stockName])</span><br><span class="line">            df_stockload = GetStockDatPro(self.StNameCodedict[stockName],self.stockSdate_Val, self.stockEdate_Val)</span><br><span class="line">            df_stockload.fillna(method=<span class="string">'bfill'</span>,inplace=<span class="keyword">True</span>)<span class="comment">#后一个数据填充NAN1</span></span><br><span class="line">            dispCont_List.append(stockName+<span class="string">'\n'</span>+examp_trade.fit_pick(df_stockload.Close)+<span class="string">'\n'</span>)</span><br><span class="line">        print(dispCont_List)</span><br><span class="line">        <span class="string">""" 选股策略执行 """</span></span><br><span class="line">        <span class="string">""" 自定义提示框 """</span></span><br><span class="line">        myPickStock = UserDialog(self,dispCont_List)    </span><br><span class="line">        <span class="keyword">if</span> myPickStock.ShowModal() == wx.ID_OK:</span><br><span class="line">            <span class="keyword">pass</span> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="string">""" 自定义提示框 """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnRadioBox_Indicator</span><span class="params">(self,event)</span>:</span>  </span><br><span class="line">        self.IndicatInput_Val = self.StratInputBox.GetStringSelection()</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(wx.App)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.frame = Frame()  </span><br><span class="line">        self.frame.ProcessStock()</span><br><span class="line">        self.frame.Show()</span><br><span class="line">        self.SetTopWindow(self.frame)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:   </span><br><span class="line">    app = App()</span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;后面几天讲的有点杂，简单记录一下知识点。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Backend" scheme="https://lruihao.cn/categories/Backend/"/>
    
      <category term="Python" scheme="https://lruihao.cn/categories/Backend/Python/"/>
    
    
      <category term="Python" scheme="https://lruihao.cn/tags/Python/"/>
    
  </entry>
  
</feed>
