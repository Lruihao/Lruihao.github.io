<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博採眾長</title>
  
  <subtitle>LRuihao&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lruihao.cn/"/>
  <updated>2019-04-24T14:21:48.972Z</updated>
  <id>https://lruihao.cn/</id>
  
  <author>
    <name>李瑞豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一次面试经历</title>
    <link href="https://lruihao.cn/posts/1thintervivew.html"/>
    <id>https://lruihao.cn/posts/1thintervivew.html</id>
    <published>2019-04-24T13:23:22.000Z</published>
    <updated>2019-04-24T14:21:48.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote class="blockquote-center"><p>时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。</p></blockquote><a id="more"></a><div class="note info"><p>富士康在学校有一个春招的机会，我和朋友抱着侥幸的心理去试了试。<br>虽然深知自己还身有很多缺点，但是不面试不知道，一面试都暴露出来了，以下记录一下自己的不足之处：</p><ul><li>php和sql的经典组合虽然有所接触了解，但是确实什么都会，得花时间学</li><li>html/css等虽然平时折腾博客这些应用的比较多，但是今天竟然紧张地忘记了margin和padding都不会写了</li><li>如上一条，公众表现能力有待加强。正如当今“酒香也怕巷子深”</li></ul><p>惊喜的事说来就来，本来知道自己这么多缺点，这么菜后，觉得这个实习的offer是没戏了，没想到下午技术主管微信发来消息，说录用了。当场懵逼，受宠若惊的感觉！非常谢谢面试官老师！<br>无论生活还是学习，希望以后的自己一定要保持一颗谦逊爱学的心，早日实现全栈工程师的梦想。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;时间过得真快，一下从大一到了大三，马上就要实习毕业等等了。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://lruihao.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="面试" scheme="https://lruihao.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="https://lruihao.cn/posts/me.html"/>
    <id>https://lruihao.cn/posts/me.html</id>
    <published>2019-04-24T05:21:49.000Z</published>
    <updated>2019-04-24T11:13:13.590Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="row"><embed src="/posts/me/lrh.pdf" width="100%" height="550" type="application/pdf"></div><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;/posts/me/lrh.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="简历" scheme="https://lruihao.cn/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>python爬取网站图片（图片链接相似）</title>
    <link href="https://lruihao.cn/posts/mmtimgpy.html"/>
    <id>https://lruihao.cn/posts/mmtimgpy.html</id>
    <published>2019-04-22T04:46:34.000Z</published>
    <updated>2019-04-24T14:23:01.092Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>以下程序对<a href="https://hw.xiezixiansheng.com/mobile.php?c=Grzkreader&amp;a=fontshowPics&amp;u=qbfRl8gPF2s-&amp;z=Kqz%2FRroVGYc-&amp;share=1&amp;from=singlemessage" rel="external nofollow noopener noreferrer" target="_blank">该网址</a>内的手写体图片进行爬取！这个手写体是我在手机上通过《手迹造字》app书写的，大概6886个字符，历时两年多，目前仍在修改中。<a href="https://lruihao.cn/posts/font-mmt.html">字体效果查看</a></p></div><a id="more"></a><h1 id="思路设计"><a href="#思路设计" class="headerlink" title="思路设计"></a>思路设计</h1><blockquote><p>通过观察目标网页中字符图片的链接，很容易发现每个字符图片的直链是由两部分组成。</p><ul><li>固定链接</li><li>图片文件编号</li></ul></blockquote><blockquote><p>其中固定连接为<code>https://image.xiezixiansheng.com/users/2010/700/unzip/579767/</code>,图片文件为<code>xxxxx.png@50q</code>，如果去掉@50q，获取到的图片就是透明背景的不然就是白色背景。然后发现编号大多是5位数的形式，但是还有一些是4位的，甚至还有2-3位的数字。仔细看看127前的编号都是一些国际符号诸如英文和数字等。比对一下发现正是ASCII码对应的命名方式。可想而知中文自然也是通过编码来命名的。一个标准的字库文件至少包含6763个汉字，也就是我书写的这个<code>GB2312-80</code>,范围： <code>0xA1A1 - 0xFEFE</code>，其中汉字范围： <code>0xB0A1 - 0xF7FE</code>。两个16进制位对应一个字节，一个汉字至少由两个字节组成，这样理解，范围自然是4个16进制位。所以转换成10进制，范围大致在65278以下。要了解更加具体一点的范围还需要去查一下汉字编码的分区等。这里暂时不必了解，因为本来就打算暴力下载。</p></blockquote><blockquote><p><strong>说了这么多，既然图片链接这么简单，所以我是想暴力遍历，搜索图片，判断链接状态码，然后下载图片。</strong></p></blockquote><h1 id="源码设计"><a href="#源码设计" class="headerlink" title="源码设计"></a>源码设计</h1><p>大致分为三个范围吧</p><ul><li>英文字符</li><li>中文符号</li><li>汉字范围</li></ul><blockquote><p>我主要分这几个区间查找</p></blockquote><ul><li>33 ~ 126</li><li>8212 ~ 8243</li><li>12289 ~ 12305</li><li>19968 ~ 40864</li><li>65281 ~ 65509</li></ul><p>磨刀不误砍柴工，分析观察了这么久，终于可以运行程序了，F5后就静静等待吧，可以去看看java，或者打一把王者hhhhh!<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">path=<span class="string">"C:\\Users\\李瑞豪\\Desktop\\MMT_images\\"</span> <span class="comment">#下载路径： 绝对或者相对路径比如./image/</span></span><br><span class="line">os.makedirs(path+<span class="string">"0\\"</span>, exist_ok=<span class="keyword">True</span>) <span class="comment"># 创建文件夹</span></span><br><span class="line">os.makedirs(path+<span class="string">"1\\"</span>, exist_ok=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urllib_download</span><span class="params">(url,num)</span>:</span>  <span class="comment"># (下载链接,图片编号)</span></span><br><span class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line">    urlretrieve(url,path+num+<span class="string">".png"</span>)     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断状态码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_status</span><span class="params">(url)</span>:</span>  </span><br><span class="line">    r = requests.get(url, allow_redirects = <span class="keyword">False</span>)  </span><br><span class="line">    <span class="keyword">return</span> r.status_code</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">BASE_URL = <span class="string">"https://image.xiezixiansheng.com/users/2010/700/unzip/579767/"</span></span><br><span class="line">n=<span class="number">33</span></span><br><span class="line">total=<span class="number">0</span></span><br><span class="line">print(<span class="string">"正在爬取第1张图片!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">65510</span>:</span><br><span class="line"><span class="comment">#分段爬取，不然会超时！！！# 33 ~ 126 # 8212 ~ 8243 # 12289 ~ 12305 # 19968 ~ 40864 # 65281 ~ 65509</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">127</span>:</span><br><span class="line">n = <span class="number">8212</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">8244</span>:</span><br><span class="line">n = <span class="number">12289</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n ==<span class="number">12306</span>:</span><br><span class="line">n = <span class="number">19968</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">40865</span>:</span><br><span class="line">n = <span class="number">65281</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for n in range(37341,40865):</span></span><br><span class="line">num = str(n)</span><br><span class="line">IMAGE_URL = BASE_URL+num+<span class="string">".png"</span> <span class="comment"># xxx.png是透明背景，xxx.png@50q是白色背景，分别存放在0，1文件夹 p是中小 w是小图</span></span><br><span class="line"><span class="keyword">if</span>(get_status(IMAGE_URL)==<span class="number">200</span>): <span class="comment"># 同时下载透明和白色背景的图片</span></span><br><span class="line">total+=<span class="number">1</span></span><br><span class="line">urllib_download(IMAGE_URL,<span class="string">"0\\"</span>+num)</span><br><span class="line">IMAGE_URL += <span class="string">"@50q"</span></span><br><span class="line">urllib_download(IMAGE_URL,<span class="string">"1\\"</span>+num)</span><br><span class="line">print(<span class="string">"Downloaded "</span>+num+<span class="string">".png"</span>)</span><br><span class="line">print(<span class="string">"正在爬取第"</span>,total+<span class="number">1</span>,<span class="string">"张图片!"</span>)</span><br><span class="line">n+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n爬取完毕！共爬取"</span>,total,<span class="string">"张图片!"</span>)</span><br><span class="line">print(<span class="string">"图片存放路径："</span>+path)</span><br><span class="line">print(<span class="string">"作者博客：lruihao.cn"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:  </span><br><span class="line">    main();</span><br></pre></td></tr></table></figure><p></p><h1 id="爬取过程及结果"><a href="#爬取过程及结果" class="headerlink" title="爬取过程及结果"></a>爬取过程及结果</h1><blockquote><p>文件夹左下角数目变化</p></blockquote><img src="/posts/mmtimgpy/mmtpy.gif" title="爬取过程"><div class="note danger"><p>说实话看着控制台不停地输出提示信息有没有很爽，对于强迫症来说真的是很治愈了！但是爬取第6042张图片的时候，我打开了一下目标网页发现无法加载图片了，就想这应该也算是一次Dos攻击了吧！打开控制台果然停了，相当于访问了近两万次！唉，还是太暴力了！！还差800多张，只好又重新接着写上次的位置爬!不慎造成目标网站服务器压力，实在对不起！</p></div><img src="/posts/mmtimgpy/error.png" title="错误提示"><blockquote><p>一个半小时左右后终于下载完了，一共是6886张；程序是同时下载了透明和白色背景的图片的！分别在0,1子文件夹！</p></blockquote><img src="/posts/mmtimgpy/jieguo.png" title="爬取完毕"><h1 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h1><p>模拟浏览器载入html文件，获取源码，查找到所有<code>&lt;img&gt;</code>标签内链接，必要时配合正则表达式，然后下载图片。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;以下程序对&lt;a href=&quot;https://hw.xiezixiansheng.com/mobile.php?c=Grzkreader&amp;amp;a=fontshowPics&amp;amp;u=qbfRl8gPF2s-&amp;amp;z=Kqz%2FRroVGYc-&amp;amp;share=1&amp;amp;from=singlemessage&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;该网址&lt;/a&gt;内的手写体图片进行爬取！这个手写体是我在手机上通过《手迹造字》app书写的，大概6886个字符，历时两年多，目前仍在修改中。&lt;a href=&quot;https://lruihao.cn/posts/font-mmt.html&quot;&gt;字体效果查看&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="脚本" scheme="https://lruihao.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python玩微信：初探wxpy</title>
    <link href="https://lruihao.cn/posts/wxpy1.html"/>
    <id>https://lruihao.cn/posts/wxpy1.html</id>
    <published>2019-04-20T07:44:57.000Z</published>
    <updated>2019-04-22T07:13:39.786Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p><strong><em>文中涉及的图片涉及个人隐私，仅做举例，请勿传播</em></strong></p><ul><li>查看微信好友男女比例</li><li>查看好友地区分布</li><li>群性别统计</li></ul></div><a id="more"></a><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li><a href="https://github.com/youfou/wxpy" rel="external nofollow noopener noreferrer" target="_blank">wxpy</a></li><li><a href="https://github.com/pyecharts/pyecharts" rel="external nofollow noopener noreferrer" target="_blank">pyecharts</a>（百度echarts）</li></ul><h1 id="查看微信好友男女比例"><a href="#查看微信好友男女比例" class="headerlink" title="查看微信好友男女比例"></a>查看微信好友男女比例</h1><figure class="highlight py"><figcaption><span>生成结果在源文件同目录在的sex.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Pie</span><br><span class="line"></span><br><span class="line">bot = Bot(cache_path = <span class="keyword">True</span>)   <span class="comment">#定义一个微信机器人</span></span><br><span class="line">friends = bot.friends(update=<span class="keyword">False</span>)   <span class="comment">#获取更新好友列表</span></span><br><span class="line">male = female = other = <span class="number">0</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> friends[<span class="number">1</span>:]:     <span class="comment">#[1:]自己是第一个，排除掉</span></span><br><span class="line">    sex = i.sex</span><br><span class="line">    <span class="keyword">if</span> sex == <span class="number">1</span>:</span><br><span class="line">        male += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> sex == <span class="number">2</span>:</span><br><span class="line">        female += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        other += <span class="number">1</span></span><br><span class="line">total = len(friends[<span class="number">1</span>:])   <span class="comment">#计算总数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下面为分析</span></span><br><span class="line">attr = [<span class="string">"男性"</span>,<span class="string">"女性"</span>,<span class="string">"其他"</span>]</span><br><span class="line">v1 = [float(male),float(female),float(other)]</span><br><span class="line">pie = Pie(<span class="string">"饼图-圆环图示例"</span>, title_pos=<span class="string">'center'</span>)</span><br><span class="line">pie.add(<span class="string">""</span>, attr, v1, radius=[<span class="number">40</span>, <span class="number">75</span>], label_text_color=<span class="keyword">None</span>, is_label_show=<span class="keyword">True</span>,</span><br><span class="line">        legend_orient=<span class="string">'vertical'</span>, legend_pos=<span class="string">'left'</span>)</span><br><span class="line">pie.render(<span class="string">"sex.html"</span>)</span><br></pre></td></tr></table></figure><img src="/posts/wxpy1/1.png" title="微信好友男女比例"><h1 id="查看好友地区分布"><a href="#查看好友地区分布" class="headerlink" title="查看好友地区分布"></a>查看好友地区分布</h1><figure class="highlight py"><figcaption><span>生成结果在源文件同目录在的city.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Map</span><br><span class="line"></span><br><span class="line"><span class="comment">#因为获取的列表城市都没有带市字，而pyecharts需要带个市字</span></span><br><span class="line">b = <span class="string">'市'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+b</span><br><span class="line"></span><br><span class="line"><span class="comment">#只提取湖南的</span></span><br><span class="line">bot = Bot(cache_path = <span class="keyword">True</span>)</span><br><span class="line">friends = bot.friends(update=<span class="keyword">False</span>).search(province = <span class="string">'湖南'</span>)</span><br><span class="line">citys = []   </span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> friends :</span><br><span class="line">    city = f.city</span><br><span class="line">    citys.append(city)</span><br><span class="line">r = map(s,citys)</span><br><span class="line">cityss = list(r)</span><br><span class="line"></span><br><span class="line"><span class="comment">#为城市计数</span></span><br><span class="line">a = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cityss:</span><br><span class="line">    a[i] = cityss.count(i)</span><br><span class="line">a.pop(<span class="string">'市'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把字典进行有序拆分为2个列表</span></span><br><span class="line">attrs = []</span><br><span class="line">values = []</span><br><span class="line"><span class="keyword">for</span> value, attr <span class="keyword">in</span> a.items():</span><br><span class="line">    values.append(attr)</span><br><span class="line">    attrs.append(value)</span><br><span class="line"><span class="comment">#开始绘图</span></span><br><span class="line">map = Map(<span class="string">"湖南地图示例"</span>, width=<span class="number">1200</span>, height=<span class="number">600</span>)</span><br><span class="line">map.add(<span class="string">""</span>, attrs, values, maptype=<span class="string">'湖南'</span>, is_visualmap=<span class="keyword">True</span>, visual_text_color=<span class="string">'#000'</span>)</span><br><span class="line">map.render(<span class="string">"city.html"</span>)</span><br></pre></td></tr></table></figure><img src="/posts/wxpy1/2.png" title="微信地区分布"><blockquote><p><strong>以上参考简书<a href="https://www.jianshu.com/p/c0baf3c6db15" rel="external nofollow noopener noreferrer" target="_blank">陈思煜</a></strong></p></blockquote><h1 id="统计所有群男女数目"><a href="#统计所有群男女数目" class="headerlink" title="统计所有群男女数目"></a>统计所有群男女数目</h1><blockquote><p>统计结果会自动发送到所有群聊<br>男女人数和不一定等于总数（有些人不显示性别）</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">removeAll</span><span class="params">(the_list, val)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [value <span class="keyword">for</span> value <span class="keyword">in</span> the_list <span class="keyword">if</span> value != val]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stats_text</span><span class="params">(target_group, group_name)</span>:</span></span><br><span class="line">    print(group_name + <span class="string">"群共有："</span> + str(len(target_group)) + <span class="string">"人，其中："</span>)</span><br><span class="line">    all_stats_text = []</span><br><span class="line">    all_dict = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 乱序先整理一份省份 + 地点的列表</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> target_group.members:</span><br><span class="line">        trimed_data = user.province.replace(<span class="string">' '</span>, <span class="string">''</span>) + user.city.replace(<span class="string">' '</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> trimed_data != <span class="string">''</span>:</span><br><span class="line">            all_stats_text.append(trimed_data)</span><br><span class="line">    <span class="comment"># 计数</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> all_stats_text:</span><br><span class="line">        <span class="keyword">if</span> all_stats_text.count(data) != <span class="number">0</span>:</span><br><span class="line">            all_dict[data] = all_stats_text.count(data)</span><br><span class="line">            all_stats_text = removeAll(all_stats_text, data)        </span><br><span class="line">    final_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sorted(all_dict.keys()):</span><br><span class="line">        final_dict[i] = all_dict[i]</span><br><span class="line">    <span class="keyword">return</span> final_dict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stats_sex</span><span class="params">(target_group)</span>:</span></span><br><span class="line">    male = <span class="number">0</span></span><br><span class="line">    female = <span class="number">0</span></span><br><span class="line">    other = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> target_group.members:</span><br><span class="line">        <span class="keyword">if</span> user.sex == <span class="number">1</span>:</span><br><span class="line">            male = male + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> user.sex == <span class="number">2</span>:</span><br><span class="line">            female = female + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            other = other + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"男的有："</span> + str(male) + <span class="string">"人"</span>)</span><br><span class="line">    print(<span class="string">"女的有："</span> + str(female) + <span class="string">"人"</span>)</span><br><span class="line">    msg = <span class="string">"男的有："</span> + str(male) + <span class="string">"人\n"</span> + <span class="string">"女的有："</span> + str(female) + <span class="string">"人\n"</span></span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line">bot = Bot()</span><br><span class="line"></span><br><span class="line">target_group = bot.groups(update=<span class="keyword">True</span>, contact_only=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> curr_group <span class="keyword">in</span> target_group:</span><br><span class="line">    <span class="comment"># 小于 10 人的群过滤掉</span></span><br><span class="line">    <span class="keyword">if</span> len(curr_group) &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    curr_group.update_group(members_details=<span class="keyword">True</span>)</span><br><span class="line">    print(curr_group.name + <span class="string">"一共有："</span> + str(len(curr_group)) + <span class="string">"人\n"</span>)</span><br><span class="line">    msg = stats_sex(curr_group)</span><br><span class="line">    curr_group.send(curr_group.name + <span class="string">"群，一共有："</span> + str(len(curr_group)) + <span class="string">"人\n"</span> + msg)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;文中涉及的图片涉及个人隐私，仅做举例，请勿传播&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;查看微信好友男女比例&lt;/li&gt;&lt;li&gt;查看好友地区分布&lt;/li&gt;&lt;li&gt;群性别统计&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="他山之石" scheme="https://lruihao.cn/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pyecharts" scheme="https://lruihao.cn/tags/pyecharts/"/>
    
      <category term="jieba" scheme="https://lruihao.cn/tags/jieba/"/>
    
  </entry>
  
  <entry>
    <title>基本python实现的爬取微信好友头像，并拼接成大图</title>
    <link href="https://lruihao.cn/posts/wximgpy.html"/>
    <id>https://lruihao.cn/posts/wximgpy.html</id>
    <published>2019-04-20T05:32:58.000Z</published>
    <updated>2019-04-22T07:17:49.187Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>Python通过wxpy登录微信网页版，爬取好友所有头像并拼接成一张大图。然后删除所有子图。(注释相关代码可以不删除)<br><strong><em>文中涉及的图片涉及个人隐私，仅做举例，请勿传播</em></strong><br><strong>文中编码由Sunbelife提供，来自他的同名微信公众号，本博仅用于学习，侵删</strong></p></div><a id="more"></a><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><img src="/posts/wximgpy/1.jpg" title="我的微信好友全家福"><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><ul><li>wxpy（Pythone登录微信）</li><li>pillow（拼接头像）</li><li>os（文件夹操作）</li><li>math（数学计算）</li></ul><blockquote><p><a href="https://github.com/youfou/wxpy" rel="external nofollow noopener noreferrer" target="_blank">wxpy</a>:<br>&ensp;&ensp;wxpy 在 itchat 的基础上，通过大量接口优化提升了模块的易用性，并进行丰富的功能扩展。<br><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320027235877860c87af5544f25a8deeb55141d60c5000" rel="external nofollow noopener noreferrer" target="_blank">PIL</a>：<br>&ensp;&ensp;Python Imaging Library，已经是Python平台事实上的图像处理标准库了。PIL功能非常强大，但API却非常简单易用。由于PIL仅支持到Python 2.7，加上年久失修，于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫Pillow，支持最新Python 3.x，又加入了许多新特性，因此，我们可以直接安装使用Pillow。</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install -U wxpy -i &quot;https://pypi.doubanio.com/simple/&quot;</span><br><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><blockquote><p>如果在Python IDE 运行出错，可能是因为微信好友的id是特殊字符，在IDE打印出错，注释掉代码36行即可。</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wxpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## 获取文件所在的绝对路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dir</span><span class="params">(sys_arg)</span>:</span></span><br><span class="line">sys_arg = sys_arg.split(<span class="string">"/"</span>)</span><br><span class="line"></span><br><span class="line">dir_str = <span class="string">""</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> cur_dir <span class="keyword">in</span> sys_arg:</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> count == len(sys_arg):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">dir_str = dir_str + cur_dir + <span class="string">"/"</span></span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> dir_str</span><br><span class="line"></span><br><span class="line">curr_dir = get_dir(sys.argv[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">bot = Bot()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 机器人账号自身</span></span><br><span class="line">myself = bot.self</span><br><span class="line">my_friends = bot.friends(update=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(curr_dir + <span class="string">"group-images/"</span>):</span><br><span class="line">os.mkdir(curr_dir + <span class="string">"group-images/"</span>)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> friend <span class="keyword">in</span> my_friends:</span><br><span class="line">print(friend.nick_name)</span><br><span class="line">friend.get_avatar(curr_dir + <span class="string">"group-images/"</span> + str(count) + <span class="string">".jpg"</span>)</span><br><span class="line">count = count + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取下载的头像文件</span></span><br><span class="line">ls = os.listdir(curr_dir + <span class="string">'group-images'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除非 .jpg 文件</span></span><br><span class="line"><span class="keyword">for</span> filter_ls <span class="keyword">in</span> ls:</span><br><span class="line"><span class="keyword">if</span> <span class="string">".jpg"</span> <span class="keyword">in</span> filter_ls:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">ls.remove(filter_ls)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">ls.sort(key=<span class="keyword">lambda</span> x:int(x[:<span class="number">-4</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像墙尺寸</span></span><br><span class="line">image_size = <span class="number">2560</span></span><br><span class="line"></span><br><span class="line">each_size = math.floor(image_size/math.floor(math.sqrt(len(ls))))</span><br><span class="line">x_lines = math.ceil(math.sqrt(len(ls)))</span><br><span class="line">y_lines = math.ceil(math.sqrt(len(ls)))</span><br><span class="line">image = Image.new(<span class="string">'RGB'</span>, (each_size * x_lines, each_size * y_lines))</span><br><span class="line"></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file_names <span class="keyword">in</span> ls:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">img = Image.open(curr_dir + <span class="string">"group-images/"</span> + file_names)</span><br><span class="line">print(<span class="string">"正在处理"</span> + file_names.split(<span class="string">'.jpg'</span>)[<span class="number">0</span>] + <span class="string">"/"</span> + str(len(ls)))</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">img = img.resize((each_size, each_size))</span><br><span class="line">image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">x += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> x == x_lines:</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">img = image.save(curr_dir + <span class="string">"all.jpg"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">shutil.rmtree(curr_dir + <span class="string">"group-images/"</span>)</span><br><span class="line">print(<span class="string">"收尾，清理临时文件"</span>)</span><br><span class="line"><span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">print(<span class="string">"没什么好删的"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"！！！\n生成完毕了，放在了目录"</span> + curr_dir + <span class="string">"，去看看吧。"</span>)</span><br><span class="line">print(<span class="string">"工具作者：@Sunbelife（新浪微博）"</span>)</span><br><span class="line">print(<span class="string">"公众号：Sunbelife"</span>)</span><br><span class="line">print(<span class="string">"感谢使用"</span>)</span><br><span class="line">print(<span class="string">"v1.2"</span>)</span><br><span class="line">print(<span class="string">"2019.4.18"</span>)</span><br></pre></td></tr></table></figure><h1 id="群友全家福"><a href="#群友全家福" class="headerlink" title="群友全家福"></a>群友全家福</h1><blockquote><p>修改11行群名称</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="keyword">False</span>)</span><br><span class="line">roomslist = itchat.get_chatrooms(update=<span class="keyword">True</span>)[<span class="number">0</span>:]</span><br><span class="line">itchat.dump_login_status() <span class="comment"># 显示所有的群聊信息，默认是返回保存到通讯录中的群聊</span></span><br><span class="line">myroom=itchat.search_chatrooms(name=<span class="string">u'绥宁一中高396班'</span>) <span class="comment">#群聊名称</span></span><br><span class="line">gsq=itchat.update_chatroom(myroom[<span class="number">0</span>][<span class="string">'UserName'</span>], detailedMember=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">"./group-images/"</span>):</span><br><span class="line">    os.mkdir(<span class="string">"./group-images/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gsq[<span class="string">'MemberList'</span>]:</span><br><span class="line">    print(i[<span class="string">"UserName"</span>])</span><br><span class="line">    img = itchat.get_head_img(userName=i[<span class="string">"UserName"</span>],chatroomUserName=myroom[<span class="number">0</span>][<span class="string">'UserName'</span>])</span><br><span class="line">    fileImage = open(<span class="string">"./group-images/"</span> + str(num) + <span class="string">".jpg"</span>,<span class="string">'wb'</span>)</span><br><span class="line">    fileImage.write(img)</span><br><span class="line">    fileImage.close()</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">ls = os.listdir(<span class="string">'./group-images'</span>)</span><br><span class="line">each_size = int(math.sqrt(float(<span class="number">640</span>*<span class="number">640</span>)/len(ls)))</span><br><span class="line">lines = int(<span class="number">640</span>/each_size)</span><br><span class="line">image = Image.new(<span class="string">'RGBA'</span>, (<span class="number">640</span>, <span class="number">640</span>))</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ls)+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        img = Image.open(<span class="string">"./group-images/"</span> + str(i) + <span class="string">".jpg"</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        print(<span class="string">"Error"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img = img.resize((each_size, each_size), Image.ANTIALIAS)</span><br><span class="line">        image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> x == lines:</span><br><span class="line">            x = <span class="number">0</span></span><br><span class="line">            y += <span class="number">1</span></span><br><span class="line">image.save(<span class="string">"all.png"</span>)</span><br><span class="line">shutil.rmtree(<span class="string">"./group-images"</span>)</span><br></pre></td></tr></table></figure><img src="/posts/wximgpy/2.png" title="绥宁一中高396班"><blockquote><p>加个列表，加个循环实现自动爬取所有群聊头像并发送</p></blockquote><figure class="highlight py"><figcaption><span>@Sunbelife</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="keyword">False</span>)</span><br><span class="line">roomslist = itchat.get_chatrooms(update=<span class="keyword">True</span>)[<span class="number">0</span>:]</span><br><span class="line">itchat.dump_login_status() <span class="comment"># 显示所有的群聊信息，默认是返回保存到通讯录中的群聊</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> room <span class="keyword">in</span> roomslist:</span><br><span class="line">    print(room[<span class="string">'UserName'</span>])</span><br><span class="line">    gsq=itchat.update_chatroom(room[<span class="string">'UserName'</span>], detailedMember=<span class="keyword">True</span>)</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">"./group-images/"</span>):</span><br><span class="line">        os.mkdir(<span class="string">"./group-images/"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> gsq[<span class="string">'MemberList'</span>]:</span><br><span class="line">        print(i[<span class="string">"UserName"</span>])</span><br><span class="line">        img = itchat.get_head_img(userName=i[<span class="string">"UserName"</span>],chatroomUserName=room[<span class="string">'UserName'</span>])</span><br><span class="line">        fileImage = open(<span class="string">"./group-images/"</span> + str(num) + <span class="string">".jpg"</span>,<span class="string">'wb'</span>)</span><br><span class="line">        fileImage.write(img)</span><br><span class="line">        fileImage.close()</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    ls = os.listdir(<span class="string">'./group-images'</span>)</span><br><span class="line">    each_size = int(math.sqrt(float(<span class="number">640</span>*<span class="number">640</span>)/len(ls)))</span><br><span class="line">    lines = int(<span class="number">640</span>/each_size)</span><br><span class="line">    image = Image.new(<span class="string">'RGB'</span>, (<span class="number">640</span>, <span class="number">640</span>))</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    y = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ls)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            img = Image.open(<span class="string">"./group-images/"</span> + str(i) + <span class="string">".jpg"</span>)</span><br><span class="line">        <span class="keyword">except</span> IOError:</span><br><span class="line">            print(<span class="string">"Error"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img = img.resize((each_size, each_size), Image.ANTIALIAS)</span><br><span class="line">            image.paste(img, (x * each_size, y * each_size))</span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> x == lines:</span><br><span class="line">                x = <span class="number">0</span></span><br><span class="line">                y += <span class="number">1</span></span><br><span class="line">    image.save(<span class="string">"all.jpg"</span>)</span><br><span class="line">    itchat.send(<span class="string">"写了个好玩的… 测试一下"</span>, room[<span class="string">'UserName'</span>])</span><br><span class="line">    itchat.send_image(<span class="string">"all.jpg"</span>, room[<span class="string">'UserName'</span>])</span><br><span class="line">    shutil.rmtree(<span class="string">"./group-images"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;Python通过wxpy登录微信网页版，爬取好友所有头像并拼接成一张大图。然后删除所有子图。(注释相关代码可以不删除)&lt;br&gt;&lt;strong&gt;&lt;em&gt;文中涉及的图片涉及个人隐私，仅做举例，请勿传播&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;文中编码由Sunbelife提供，来自他的同名微信公众号，本博仅用于学习，侵删&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="https://lruihao.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://lruihao.cn/tags/python/"/>
    
      <category term="wxpy" scheme="https://lruihao.cn/tags/wxpy/"/>
    
      <category term="pillow" scheme="https://lruihao.cn/tags/pillow/"/>
    
  </entry>
  
  <entry>
    <title>用记事本编写第一个java程序</title>
    <link href="https://lruihao.cn/posts/HelloJava.html"/>
    <id>https://lruihao.cn/posts/HelloJava.html</id>
    <published>2019-04-19T11:49:54.000Z</published>
    <updated>2019-04-19T12:18:40.322Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>之所以用记事本来写不是为了装X或者什么的。反而恰恰是返璞归真，因为在用java语言进行程序开发时，首先是以纯文本的方式编写所有的java源程序，并保存成以<code>.java</code>为后缀的文件；然后将这些源程序用<code>javac</code>编译成<code>.class</code>后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被java虚拟机（JVM）执行的代码。最后用java运行工具在JVM执行java应用程序。<br>由于JVM可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。</p><ul><li>javac</li><li>java</li></ul></div><a id="more"></a> <img src="/posts/HelloJava/2.jpg"><h1 id="编写java"><a href="#编写java" class="headerlink" title="编写java"></a>编写java</h1><p>用记事本编辑java文件，并且把后缀改成<code>.java</code>，文件名和类名要一样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="打开cmd"><a href="#打开cmd" class="headerlink" title="打开cmd"></a>打开cmd</h1><img src="/posts/HelloJava/1.png">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;之所以用记事本来写不是为了装X或者什么的。反而恰恰是返璞归真，因为在用java语言进行程序开发时，首先是以纯文本的方式编写所有的java源程序，并保存成以&lt;code&gt;.java&lt;/code&gt;为后缀的文件；然后将这些源程序用&lt;code&gt;javac&lt;/code&gt;编译成&lt;code&gt;.class&lt;/code&gt;后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被java虚拟机（JVM）执行的代码。最后用java运行工具在JVM执行java应用程序。&lt;br&gt;由于JVM可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;javac&lt;/li&gt;&lt;li&gt;java&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="HelloWorld" scheme="https://lruihao.cn/tags/HelloWorld/"/>
    
  </entry>
  
  <entry>
    <title>java正则表达式练习</title>
    <link href="https://lruihao.cn/posts/RegexDemo.html"/>
    <id>https://lruihao.cn/posts/RegexDemo.html</id>
    <published>2019-04-18T14:04:21.000Z</published>
    <updated>2019-04-18T14:15:35.682Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//       Pattern类 正则表达式的编译表示。</span></span><br><span class="line">        Pattern pattern = Pattern.compile(<span class="string">"^[a-zA-Z0-9_!#$%&amp;'*+/=?`&#123;|&#125;~^.-]+@[a-zA-Z0-9.-]+$"</span>);</span><br><span class="line">        String[] emails = &#123;<span class="string">"admin@lruihao.cn"</span>, <span class="string">"lruihao.cn"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String email :</span><br><span class="line">                emails) &#123;</span><br><span class="line"><span class="comment">//Matcher 通过解释Pattern对字符序列执行匹配操作的引擎</span></span><br><span class="line">            Matcher matcher = pattern.matcher(email);</span><br><span class="line">            System.out.println(email + <span class="string">"匹配结果："</span> + matcher.matches());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="meta">@lruihao</span>.cn匹配结果：<span class="keyword">true</span></span><br><span class="line">lruihao.cn匹配结果：<span class="keyword">false</span></span><br></pre></td></tr></table></figure><h1 id="电话"><a href="#电话" class="headerlink" title="电话"></a>电话</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Pattern patter=Pattern.compile(<span class="string">"^[1][3,4,5,7,8][0-9]&#123;9&#125;$"</span>);</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String telnum=sc.nextLine();</span><br><span class="line">sc.close();</span><br><span class="line">Matcher matcher=patter.matcher(telnum);</span><br><span class="line">System.out.println(telnum+<span class="string">"匹配结果： "</span>+matcher.matches());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前的httpSession</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpSession <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> getRequest().getSession();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机号验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 验证通过返回true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMobile</span><span class="params">(<span class="keyword">final</span> String str)</span> </span>&#123;</span><br><span class="line">  Pattern p = <span class="keyword">null</span>;</span><br><span class="line">  Matcher m = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">  p = Pattern.compile(<span class="string">"^[1][3,4,5,7,8][0-9]&#123;9&#125;$"</span>); <span class="comment">// 验证手机号</span></span><br><span class="line">  m = p.matcher(str);</span><br><span class="line">  b = m.matches();</span><br><span class="line">  <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 电话号码验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 验证通过返回true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPhone</span><span class="params">(<span class="keyword">final</span> String str)</span> </span>&#123;</span><br><span class="line">  Pattern p1 = <span class="keyword">null</span>, p2 = <span class="keyword">null</span>;</span><br><span class="line">  Matcher m = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">  p1 = Pattern.compile(<span class="string">"^[0][1-9]&#123;2,3&#125;-[0-9]&#123;5,10&#125;$"</span>); <span class="comment">// 验证带区号的</span></span><br><span class="line">  p2 = Pattern.compile(<span class="string">"^[1-9]&#123;1&#125;[0-9]&#123;5,8&#125;$"</span>);     <span class="comment">// 验证没有区号的</span></span><br><span class="line">  <span class="keyword">if</span> (str.length() &gt; <span class="number">9</span>) &#123;</span><br><span class="line">    m = p1.matcher(str);</span><br><span class="line">    b = m.matches();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    m = p2.matcher(str);</span><br><span class="line">    b = m.matches();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="身份证"><a href="#身份证" class="headerlink" title="身份证"></a>身份证</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 身份证正则表达式16或18 */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String IDCARD=<span class="string">"((11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65)[0-9]&#123;4&#125;)"</span> +</span><br><span class="line">           <span class="string">"(([1|2][0-9]&#123;3&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;"</span> +</span><br><span class="line">           <span class="string">"[Xx0-9])|([0-9]&#123;2&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;))"</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="正则表达式" scheme="https://lruihao.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>java常用类</title>
    <link href="https://lruihao.cn/posts/stringbuffer.html"/>
    <id>https://lruihao.cn/posts/stringbuffer.html</id>
    <published>2019-04-14T02:12:44.000Z</published>
    <updated>2019-04-14T03:38:42.924Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="StringBuffer-StringBuilder-掌握"><a href="#StringBuffer-StringBuilder-掌握" class="headerlink" title="StringBuffer/StringBuilder(掌握)"></a>StringBuffer/StringBuilder(掌握)</h1><h2 id="StringBuffer是线程安全的可变字符串。"><a href="#StringBuffer是线程安全的可变字符串。" class="headerlink" title="StringBuffer是线程安全的可变字符串。"></a>StringBuffer是线程安全的可变字符串。</h2><p>StringBuilder是线程不安全的可变字符串。<br>和StringBuffer的功能一样。就是效率高一些，但是不安全。</p><h2 id="构造方法："><a href="#构造方法：" class="headerlink" title="构造方法："></a>构造方法：</h2><ul><li>StringBuffer sb = new StringBuffer();</li><li>StringBuffer sb = new StringBuffer(50);</li><li>StringBuffer sb = new StringBuffer(“hello”);</li></ul><h2 id="成员方法：-自己补齐方法和意思"><a href="#成员方法：-自己补齐方法和意思" class="headerlink" title="成员方法：(自己补齐方法和意思)"></a>成员方法：(自己补齐方法和意思)</h2><ul><li>添加功能<br>public StringBuffer append(String str):追加字符串<br>public StringBuffer insert(int offset,String str):在指定位置插入字符串</li><li>删除功能<br>public StringBuffer deleteCharAt(int index):删除指定位置字符<br>public StringBuffer delete(int start,int end):删除从指定开始到结束的字符，左闭右开</li><li>替换功能<br>public StringBuffer replace(int start,int end,String str):以字符串替代从指定开始到结束的字符</li><li>反转功能<br>public StringBuffer reverse():反转</li><li>截取功能<br>public String substring(int start):从指定索引到末尾的字符串<br>public String substring(int start,int end):从指定索引开始到指定索引结束的字符串</li></ul><h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><ul><li>String和StringBuffer的相互转换,通过构造即可。</li><li>把数组转成指定的字符串格式</li><li>把字符串反转</li><li>判断一个字符串是否是对称字符串</li></ul><h1 id="数组高级部分-理解"><a href="#数组高级部分-理解" class="headerlink" title="数组高级部分(理解)"></a>数组高级部分(理解)</h1><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><ul><li>冒泡排序<blockquote><p>相邻元素，两两比较，大的往后放。</p></blockquote></li></ul><img src="/posts/stringbuffer/bubble.gif" title="冒泡排序"> <img src="/posts/stringbuffer/1.png" title="冒泡排序"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length-<span class="number">1</span>; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;arr.length-<span class="number">1</span>-x; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[y]&gt;arr[y+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">int</span> temp = arr[y];</span><br><span class="line">arr[y] = arr[y+<span class="number">1</span>];</span><br><span class="line">arr[y+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>选择排序<blockquote><p>从0开始，依次和后面的比较，小的往前放。</p></blockquote></li></ul><img src="/posts/stringbuffer/2.png" title="选择排序1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length-<span class="number">1</span>; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=x+<span class="number">1</span>; y&lt;arr.length; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[y] &lt; arr[x]) &#123;</span><br><span class="line"><span class="keyword">int</span> temp = arr[x];</span><br><span class="line">arr[x] = arr[y];</span><br><span class="line">arr[y] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/posts/stringbuffer/select.gif" title="选择排序2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>((a==<span class="keyword">null</span>)||(a.length==<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length-<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        min=i;<span class="comment">//无序区的最小数据数组下标</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>  j=i+<span class="number">1</span>;j&lt;a.length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//在无序区中找到最小数据并保存其数组下标</span></span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[min])</span><br><span class="line">            &#123;</span><br><span class="line">                min=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将最小元素放到本次循环的前端</span></span><br><span class="line">        temp=a[i];</span><br><span class="line">        a[i]=a[min];</span><br><span class="line">        a[min]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><ul><li>基本查找<br>数组无序</li><li>二分查找<br>数组有序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> max = arr.length-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (max+min)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(arr[mid] != value) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[mid] &gt; value) &#123;</span><br><span class="line">max = mid - <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid] &lt; value) &#123;</span><br><span class="line">min = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(max &lt; min) &#123;</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mid = (max+min)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Arrays工具类-掌握"><a href="#Arrays工具类-掌握" class="headerlink" title="Arrays工具类(掌握)"></a>Arrays工具类(掌握)</h1><h2 id="Arrays是针对数组进行操作的工具类，提供了排序和查找等功能"><a href="#Arrays是针对数组进行操作的工具类，提供了排序和查找等功能" class="headerlink" title="Arrays是针对数组进行操作的工具类，提供了排序和查找等功能"></a>Arrays是针对数组进行操作的工具类，提供了排序和查找等功能</h2><h2 id="成员方法：-自己补齐方法和意思-1"><a href="#成员方法：-自己补齐方法和意思-1" class="headerlink" title="成员方法：(自己补齐方法和意思)"></a>成员方法：(自己补齐方法和意思)</h2><ul><li>把数组转成字符串<br>public static String toString():将任意类型数据转换成字符串</li><li>排序<br>public static void sort()：</li><li>二分查找<br>public static int binarySearch(int[] arr,int key)</li></ul><h2 id="案例：-1"><a href="#案例：-1" class="headerlink" title="案例："></a>案例：</h2><p>把字符串中的字符进行排序</p><h1 id="基本类型包装类-掌握"><a href="#基本类型包装类-掌握" class="headerlink" title="基本类型包装类(掌握)"></a>基本类型包装类(掌握)</h1><h2 id="为了让我们对基本类型进行更多的操作，java针对每种基本类型提供了对应的包装类类型。"><a href="#为了让我们对基本类型进行更多的操作，java针对每种基本类型提供了对应的包装类类型。" class="headerlink" title="为了让我们对基本类型进行更多的操作，java针对每种基本类型提供了对应的包装类类型。"></a>为了让我们对基本类型进行更多的操作，java针对每种基本类型提供了对应的包装类类型。</h2><h2 id="分别是哪些呢"><a href="#分别是哪些呢" class="headerlink" title="分别是哪些呢?"></a>分别是哪些呢?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">byteByte</span><br><span class="line">shortShort</span><br><span class="line">intInteger</span><br><span class="line">longLong</span><br><span class="line">floatFloat</span><br><span class="line">doubleDouble</span><br><span class="line">charCharacter</span><br><span class="line">booleanBoolean</span><br><span class="line">特殊：  voidVoid</span><br></pre></td></tr></table></figure><h2 id="Integer"><a href="#Integer" class="headerlink" title="Integer"></a>Integer</h2><ul><li>构造方法<ul><li>Integer i = new Integer(100);</li><li>Integer i = new Integer(“100”);</li></ul></li><li>成员方法(自己补齐方法和意思)<ul><li>把字符串转成int类型<br>String-&gt;int: Integer.parseInt()<br>int-&gt;String: String.valueOf()或Integer.toString()</li></ul></li><li><p>JDK5的新特性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">自动装箱：</span><br><span class="line">int --&gt; Integer//Integer.valueOf()</span><br><span class="line">自动拆箱：</span><br><span class="line">Integer --&gt; int//Integer.intValue()</span><br><span class="line"></span><br><span class="line">请解释：</span><br><span class="line">Integer i = 100;</span><br><span class="line">i+=200;</span><br><span class="line">System.out.println(i);</span><br></pre></td></tr></table></figure></li><li><p>byte缓存池面试题<br>byte,short,char—&gt;小于127，否则报-6的错误(查看JDK)</p></li></ul><h2 id="Character"><a href="#Character" class="headerlink" title="Character"></a>Character</h2><ul><li>构造方法<br>Character ch = new Character(‘a’);</li><li><p>成员方法(自己补齐方法和意思)</p><ul><li>判断字符是否是大写字母<br>public boolean isUpperCase(char ch)</li><li>判断字符是否是小写字母<br>public boolean isLowerCase(Char ch)</li><li>判断字符是否是数字字符<br>public boolean isDigit(Char ch)</li><li><p>把字符转成大写<br>public Char toUpperCase(Char ch)</p></li><li><p>把字符转成小写<br>public Char toLowerCase(Char ch)</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
      <category term="排序" scheme="https://lruihao.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="StringBuffer" scheme="https://lruihao.cn/tags/StringBuffer/"/>
    
      <category term="Arrays工具类" scheme="https://lruihao.cn/tags/Arrays%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>WeX5在win8或者win10操作系统studio中新建.w向导或其他的编辑窗口显示不全问题</title>
    <link href="https://lruihao.cn/posts/wex5.html"/>
    <id>https://lruihao.cn/posts/wex5.html</id>
    <published>2019-04-13T03:15:20.000Z</published>
    <updated>2019-04-13T03:18:28.432Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>win10或者win8系统在使用起步科技WeX5这款IDE工具，在新建w文件或者新建本地应用等时候，会出现不能显示完全的问题，下面是解决办法：</p><ol><li>确认是否把操作系统的字体调整为非100%了</li><li>把<code>studio\dropins\studio-app2\plugins\plugin\lib\cef1\chromium.jar</code>这个jar包复制到<code>studio\dropins\studio-app2\plugins\plugin\lib</code>下，重启studio</li></ol></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="app" scheme="https://lruihao.cn/tags/app/"/>
    
      <category term="Wex5" scheme="https://lruihao.cn/tags/Wex5/"/>
    
  </entry>
  
  <entry>
    <title>HDU 1009 FatMouse&#39; Trade(贪心)</title>
    <link href="https://lruihao.cn/posts/hdu1009.html"/>
    <id>https://lruihao.cn/posts/hdu1009.html</id>
    <published>2019-04-12T08:43:19.000Z</published>
    <updated>2019-04-13T01:59:11.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h1><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1009" rel="external nofollow noopener noreferrer" target="_blank">题目链接</a><br>老鼠有M磅猫食 ,有N个房间 ,每个房间前有一只猫 ,房间里有老鼠最喜欢的食品 J[i] ,若要得到房间的食物 ,必须付出相应的猫食F[i] ,当然这只老鼠没必要每次都付出所有的F[i]，若它付出F[i]的a%， 则得到J[i]的a%，求老鼠能吃到的最多的食物。</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">7 2</span><br><span class="line">4 3</span><br><span class="line">5 2</span><br><span class="line">20 3</span><br><span class="line">25 18</span><br><span class="line">24 15</span><br><span class="line">15 10</span><br><span class="line">-1 -1</span><br></pre></td></tr></table></figure><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">13.333</span><br><span class="line">31.500</span><br></pre></td></tr></table></figure><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>老鼠要用最少的猫粮来换取最多的食物 ,也就是J[i]/F[i]越大越好 ,所以按照J[i]/F[i]进行降序排列 ,然后依次用猫粮来换取食物 ,当所剩下的猫粮不足以完全换取食物 ,能换多少是多少。<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> j;</span><br><span class="line"><span class="keyword">double</span> f;</span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line">&#125;a[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.s&gt;y.s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n,i;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)&amp;&amp;(m!=<span class="number">-1</span>&amp;&amp;n!=<span class="number">-1</span>))&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a[i].j,&amp;a[i].f);</span><br><span class="line">a[i].s=a[i].j/a[i].f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(a,a+n,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(m&gt;=a[i].f)&#123;</span><br><span class="line">sum+=a[i].j;</span><br><span class="line">m-=a[i].f;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">sum+=a[i].s*m;</span><br><span class="line">m=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m&lt;=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="ACM" scheme="https://lruihao.cn/categories/ACM/"/>
    
      <category term="贪心" scheme="https://lruihao.cn/categories/ACM/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="ACM" scheme="https://lruihao.cn/tags/ACM/"/>
    
      <category term="HDU" scheme="https://lruihao.cn/tags/HDU/"/>
    
      <category term="贪心" scheme="https://lruihao.cn/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>GitBook使用教程</title>
    <link href="https://lruihao.cn/posts/gitbookuse.html"/>
    <id>https://lruihao.cn/posts/gitbookuse.html</id>
    <published>2019-04-04T14:09:44.000Z</published>
    <updated>2019-04-04T15:18:26.232Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>想趴几本金庸小说的做成电子书自己阅读，在博客上尝试了一下整理了6本中短篇小说就开始感觉博客臃肿，于是找到gitbook前来一试。<br>写完这篇文章开始实际操作，我发现还不如用hexo来写小说，遂放弃！Gitbook用来写相关文档介绍还差不多。</p></div><a id="more"></a><h1 id="GitBook简介"><a href="#GitBook简介" class="headerlink" title="GitBook简介"></a>GitBook简介</h1><ul><li><a href="https://www.gitbook.com" rel="external nofollow noopener noreferrer" target="_blank">GitBook官网</a></li><li><a href="https://github.com/GitbookIO/gitbook" rel="external nofollow noopener noreferrer" target="_blank">GitBook文档</a></li></ul><div class="note default"><p>Gitbook的作用和Hexo有点像，也是把md渲染成html,也见到有人用这个来写博客的。<br>GitBook是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书，GitBook 并非关于 Git 的教程。<br>GitBook支持输出多种文档格式：</p><ul><li>静态站点：GitBook默认输出该种格式，生成的静态站点可直接托管搭载Github Pages服务上；</li><li>PDF：需要安装gitbook-pdf依赖；</li><li>eBook：需要安装ebook-convert；</li><li>单HTML网页：支持将内容输出为单页的HTML，不过一般用在将电子书格式转换为PDF或eBook的中间过程；</li><li>JSON：一般用于电子书的调试或元数据提取。<br>使用GitBook制作电子书，必备两个文件：<code>README.md</code>和<code>SUMMARY.md</code></li></ul></div><h1 id="GitBook安装步骤"><a href="#GitBook安装步骤" class="headerlink" title="GitBook安装步骤"></a>GitBook安装步骤</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>GitBook是一个基于Node.js的命令行工具，下载安装<a href="https://nodejs.org" rel="external nofollow noopener noreferrer" target="_blank">Node.js</a>(我以前搭建hexo的文章里也有介绍)，安装完成之后，你可以使用下面的命令来检验是否安装成功。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p></p><h2 id="安装GitBook"><a href="#安装GitBook" class="headerlink" title="安装GitBook"></a>安装GitBook</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-cli -g</span><br></pre></td></tr></table></figure><p>检验是否安装成功<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook -V</span><br></pre></td></tr></table></figure><p></p><p><a href="https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md" rel="external nofollow noopener noreferrer" target="_blank">参照GitBook安装文档</a></p><h2 id="gitbook初始化"><a href="#gitbook初始化" class="headerlink" title="gitbook初始化"></a>gitbook初始化</h2><p>和<code>hexo init</code>类似，GitBook准备工作做好之后，我们进入一个你要写书的目录（比如新建mybook文件夹），输入如下命令初始化<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook init</span><br></pre></td></tr></table></figure><p></p><p>初始化后可以看到他会创建<code>README.md</code>和<code>SUMMARY.md</code>这两个文件，README.md应该不陌生，就是说明文档，而SUMMARY.md其实就是书的章节目录，其默认内容如下所示：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Summary</span><br><span class="line"></span><br><span class="line">* [Introduction](README.md)</span><br></pre></td></tr></table></figure><p></p><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><p>和<code>hexo serve</code>类似，我们使用<code>gitbook serve</code>命令，然后在浏览器地址栏中输入侧<a href="http://localhost:4000便可预览书籍。" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:4000便可预览书籍。</a><br>运行该命令后会在书籍的文件夹中生成一个_book文件夹，里面的内容即为生成的html文件。<br>也可以修改端口<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook serve --port 5000</span><br></pre></td></tr></table></figure><p></p><img src="/posts/gitbookuse/1.jpg"><p>我们可以使用<code>gitbook build</code>命令来生成网页而不开启服务器。这个类似于hexo的<code>hexo g</code>命令。<br>当然，build 命令可以指定路径：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build [书籍路径] [输出路径]</span><br></pre></td></tr></table></figure><p></p><p>你还可以生成 PDF,epub,mobi 格式的电子书：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitbook pdf ./ ./mybook.pdf</span><br><span class="line">gitbook epub ./ ./mybook.epub</span><br><span class="line">gitbook mobi ./ ./mybook.mobi</span><br></pre></td></tr></table></figure><p></p><p>如果生成不了，你可能还需要安装一些工具，比如 ebook-convert。或者在 Typora 中安装 Pandoc 进行导出。</p><h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── book.json</span><br><span class="line">├── README.md</span><br><span class="line">├── SUMMARY.md</span><br><span class="line">├── chapter-1/</span><br><span class="line">|   ├── README.md</span><br><span class="line">|   └── something.md</span><br><span class="line">└── chapter-2/</span><br><span class="line">    ├── README.md</span><br><span class="line">    └── something.md</span><br></pre></td></tr></table></figure><h2 id="book-json"><a href="#book-json" class="headerlink" title="book.json"></a>book.json</h2><p>该文件主要用来存放配置信息。</p><h2 id="SUMMARY-md"><a href="#SUMMARY-md" class="headerlink" title="SUMMARY.md"></a>SUMMARY.md</h2><p>这个文件主要决定GitBook的章节目录，它通过Markdown中的列表语法来表示文件的父子关系。</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="https://www.jianshu.com/p/421cc442f06c" rel="external nofollow noopener noreferrer" target="_blank">更多详情介绍</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;想趴几本金庸小说的做成电子书自己阅读，在博客上尝试了一下整理了6本中短篇小说就开始感觉博客臃肿，于是找到gitbook前来一试。&lt;br&gt;写完这篇文章开始实际操作，我发现还不如用hexo来写小说，遂放弃！Gitbook用来写相关文档介绍还差不多。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="nodejs" scheme="https://lruihao.cn/tags/nodejs/"/>
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="gitbook" scheme="https://lruihao.cn/tags/gitbook/"/>
    
  </entry>
  
  <entry>
    <title>本地搭建网站服务器并穿透内网</title>
    <link href="https://lruihao.cn/posts/ngrok.html"/>
    <id>https://lruihao.cn/posts/ngrok.html</id>
    <published>2019-04-03T11:29:43.000Z</published>
    <updated>2019-04-04T02:13:45.131Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note"><p>一直都想在自己电脑上搭建一个网站或者把自己的电脑做成服务器，今天终于简单实现了。还有很多知识需要学习，简单记录一下。</p></div><a id="more"></a><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>我的电脑是<code>ubuntu+windows</code>双系统的，所以我先在ubuntu上面装了一个宝塔面板，方便通过web管理电脑，宝塔安装好后安装相关的环境<code>mysql,php,nginx</code>等。我们现在只能通过本地ip<code>127.0.0.1:8888</code>访问面板。</p><h1 id="ngrok穿透"><a href="#ngrok穿透" class="headerlink" title="ngrok穿透"></a>ngrok穿透</h1><p>去ngrok注册登录，购买隧道（有免费的），然后绑定端口，绑定域名，这里我们拿端口<code>8888</code>和域名<code>test.lruihao.cn</code>做实验，也就是宝塔面板的端口，这样我们就可以透过域名远程访问本地服务器，这样是不是开始有云服务器的感觉了。然后宝塔面板设置也绑定好域名<code>test.lruihao.cn</code>,dns服务商那里做好相应的解析。<br>然后在ngrok那里下载sunny客户端文件，我们是ubuntu选择<code>linux-64bits</code>版本。解压后在ubuntu打开终端进入sunny文件目录，权限给到755，运行命令<code>./sunny clientid xxxxxxx</code> 后面的你的隧道订单的id。</p><p>现在就可以通过互联网访问我的ubuntu服务器了。</p><h1 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h1><p>前面两步搞定，搭建网站就没问题了。<br>我们只要把网站的端口按第二步的在ngrok设置好就可以穿透了。</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>访问本地网站的必要条件是你的电脑得是开机状态而且有网络。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note&quot;&gt;&lt;p&gt;一直都想在自己电脑上搭建一个网站或者把自己的电脑做成服务器，今天终于简单实现了。还有很多知识需要学习，简单记录一下。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="总结" scheme="https://lruihao.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="server" scheme="https://lruihao.cn/tags/server/"/>
    
      <category term="宝塔面板" scheme="https://lruihao.cn/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="ngrok" scheme="https://lruihao.cn/tags/ngrok/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题-HTML+CSS</title>
    <link href="https://lruihao.cn/posts/ms-html-css.html"/>
    <id>https://lruihao.cn/posts/ms-html-css.html</id>
    <published>2019-03-30T14:58:39.000Z</published>
    <updated>2019-03-31T04:16:45.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p><a href="https://github.com/ltadpoles/web-document/tree/master/Other" rel="external nofollow noopener noreferrer" target="_blank">原文链接</a><br>“卓越班”到了大三突然掀起一股毕业慌，一部分人投身于考研的热潮中，一部分人选择了培训机构学习技术。而我出于种种原因既不考研也不培训，选择自学java和web相关的知识，也希望因此能在以后谋得一份心仪的工作。</p><p>如果文章中有出现纰漏、错误之处，还请看到的小伙伴多多指教，先行谢过</p></div><a id="more"></a><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="1-Doctype作用，HTML5-为什么只需要写-lt-DOCTYPE-HTML-gt"><a href="#1-Doctype作用，HTML5-为什么只需要写-lt-DOCTYPE-HTML-gt" class="headerlink" title="1. Doctype作用，HTML5 为什么只需要写 &lt;!DOCTYPE HTML&gt;"></a>1. Doctype作用，HTML5 为什么只需要写 &lt;!DOCTYPE HTML&gt;</h2><blockquote><p>doctype是一种标准通用标记语言的文档类型声明，目的是告诉标准通用标记语言解析器要使用什么样的文档类型定义（DTD）来解析文档.<code>&lt;!DOCTYPE&gt;</code>声明必须是HTML文档的第一行，位于html标签之前</p></blockquote><blockquote><p>HTML5不基于SGML，所以不需要引用DTD。在HTML5中&lt;!DOCTYPE&gt;只有一种</p></blockquote><blockquote><p>SGML: 标准通用标记语言,是现时常用的超文本格式的最高层次标准</p></blockquote><h2 id="2-行内元素有哪些，块级元素有哪些，空-void-元素有那些"><a href="#2-行内元素有哪些，块级元素有哪些，空-void-元素有那些" class="headerlink" title="2. 行内元素有哪些，块级元素有哪些，空(void)元素有那些"></a>2. 行内元素有哪些，块级元素有哪些，空(void)元素有那些</h2><p>行内元素：<code>a</code> <code>span</code> <code>i</code> <code>img</code> <code>input</code> <code>select</code> <code>b</code> 等</p><p>块级元素：<code>div</code> <code>ul</code> <code>ol</code> <code>li</code> <code>h1~h6</code> <code>p</code> <code>table</code> 等</p><p>空元素：<code>br</code> <code>hr</code> <code>link</code> 等</p><h2 id="3-简述一下你对HTML语义化的理解"><a href="#3-简述一下你对HTML语义化的理解" class="headerlink" title="3. 简述一下你对HTML语义化的理解"></a>3. 简述一下你对HTML语义化的理解</h2><p>简单来说，就是合适的标签做合适的事情，这样具有以下好处：</p><ul><li>有助于构架良好的HTML结构，有利于搜索引擎的建立索引、抓取，利于SEO</li><li>有利于不同设备的解析</li><li>有利于构建清晰的机构，有利于团队的开发、维护</li></ul><h2 id="4-常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解"><a href="#4-常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解" class="headerlink" title="4. 常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解"></a>4. 常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解</h2><blockquote><p>Trident内核：IE</p></blockquote><blockquote><p>Gecko内核：NETSCAPE6及以上版本，火狐</p></blockquote><blockquote><p>Presto内核：Opera7及以上。[Opera内核原为：Presto，现为：Blink;]</p></blockquote><blockquote><p>Webkit内核：Safari，Chrome等。[Chrome的：Blink（WebKit的分支）]</p></blockquote><p>浏览器内核又可以分成两部分：<strong>渲染引擎和JS引擎。</strong> 渲染引擎主要负责取得网页的内容、整理讯息、计算网页的显示方式等，JS引擎则是解析Javascript语言，执行javascript语言来实现网页的动态效果。</p><h2 id="5-html5有哪些新特性"><a href="#5-html5有哪些新特性" class="headerlink" title="5. html5有哪些新特性"></a>5. html5有哪些新特性</h2><ul><li>语义化标签: <code>header</code> <code>footer</code> <code>nav</code> <code>section</code> <code>article</code> <code>aside</code> 等</li><li>增强型表单：<code>date</code>(从一个日期选择器选择一个日期) <code>email</code>(包含 e-mail 地址的输入域) <code>number</code>(数值的输入域) <code>range</code>(一定范围内数字值的输入域) <code>search</code>(用于搜索域) <code>tel</code>(定义输入电话号码字段) 等</li><li>视频和音频：<code>audio</code> <code>video</code></li><li>Canvas绘图 SVG绘图</li><li>地理定位：<code>Geolocation</code></li><li>拖放API：<code>drag</code></li><li>web worker：是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能</li><li>web storage: <code>localStorage</code> <code>sessionStorage</code></li><li>WebSocket: HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议</li></ul><h2 id="6-描述一下-cookie，sessionStorage-和-localStorage-的区别"><a href="#6-描述一下-cookie，sessionStorage-和-localStorage-的区别" class="headerlink" title="6. 描述一下 cookie，sessionStorage 和 localStorage 的区别"></a>6. 描述一下 cookie，sessionStorage 和 localStorage 的区别</h2><table><thead><tr><th style="text-align:left">特性</th><th style="text-align:left">Cookie</th><th style="text-align:left">localStorage</th><th style="text-align:left">sessionStorage</th></tr></thead><tbody><tr><td style="text-align:left">生命周期</td><td style="text-align:left">可设置失效时间，没有设置的话，默认是关闭浏览器后失效</td><td style="text-align:left">除非被手动清除，否则将会永久保存</td><td style="text-align:left">仅在当前网页会话下有效，关闭页面或浏览器后就会被清除</td></tr><tr><td style="text-align:left">存放数据大小</td><td style="text-align:left">4KB左右</td><td style="text-align:left">可以保存5MB的信息</td><td style="text-align:left">可以保存5MB的信息</td></tr><tr><td style="text-align:left">http请求</td><td style="text-align:left">每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题</td><td style="text-align:left">仅在客户端（即浏览器）中保存，不参与和服务器的通信</td><td style="text-align:left">仅在客户端（即浏览器）中保存，不参与和服务器的通信</td></tr></tbody></table><h2 id="7-如何实现浏览器内多个标签页之间的通信"><a href="#7-如何实现浏览器内多个标签页之间的通信" class="headerlink" title="7. 如何实现浏览器内多个标签页之间的通信"></a>7. 如何实现浏览器内多个标签页之间的通信</h2><ul><li>使用localStorage: <code>localStorage.setItem(key,value)</code>、<code>localStorage.getItem(key)</code></li><li>websocket协议</li><li>webworker</li></ul><p><a href="https://juejin.im/post/5acdba01f265da23826e5633" rel="external nofollow noopener noreferrer" target="_blank">多个标签页之间的通信</a></p><h2 id="8-HTML5的离线存储怎么使用，解释一下工作原理"><a href="#8-HTML5的离线存储怎么使用，解释一下工作原理" class="headerlink" title="8. HTML5的离线存储怎么使用，解释一下工作原理"></a>8. HTML5的离线存储怎么使用，解释一下工作原理</h2><p><a href="https://segmentfault.com/a/1190000006984353" rel="external nofollow noopener noreferrer" target="_blank">HTML5的离线存储</a></p><h2 id="9-src与href的区别"><a href="#9-src与href的区别" class="headerlink" title="9. src与href的区别"></a>9. src与href的区别</h2><p>区别：src用于替代这个元素，而href用于建立这个标签与外部资源之间的关系</p><p><code>&lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot; /&gt;</code>浏览器加载到这里的时候，html的渲染和解析不会暂停，css文件的加载是同时进行的</p><p><code>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</code>当浏览器解析到这句代码时，页面的加载和解析都会暂停直到浏览器拿到并执行完这个js文件</p><h2 id="10-表单提交中Get和Post方式的区别"><a href="#10-表单提交中Get和Post方式的区别" class="headerlink" title="10. 表单提交中Get和Post方式的区别"></a>10. 表单提交中Get和Post方式的区别</h2><ul><li>Get一般用于从服务器上获取数据，Post向服务器传送数据</li><li>Get传输的数据是拼接在Url之后的，对用户是可见的；Post的传输数据对用户是不可见的</li><li>Get传送的数据量较小，不能大于2KB。Post传送的数据量较大，一般被默认为不受限制</li><li>Get安全性非常低，Post安全性较高</li><li>在FORM提交的时候，如果不指定Method，则默认为Get请求</li></ul><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="1-css盒子模型，box-sizing属性的理解"><a href="#1-css盒子模型，box-sizing属性的理解" class="headerlink" title="1. css盒子模型，box-sizing属性的理解"></a>1. css盒子模型，box-sizing属性的理解</h2><p>css的盒模型由content(内容)、padding(内边距)、border(边框)、margin(外边距)组成。但盒子的大小由content+padding+border这几部分决定</p><p>box-sizing是一个CSS3属性，与盒子模型有着密切联系。即决定元素的宽高如何计算，box-sizing有三个属性：<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-sizing: content-box|border-box|inherit:</span><br></pre></td></tr></table></figure><p></p><ul><li>content-box 使得元素的宽高即为内容区的宽高(默认模式)</li><li>border-box: 计算方式content + padding + border = 本身元素大小，即缩小了content大小</li><li>inherit 指定box-sizing属性的值，应该从父元素继承</li></ul><h2 id="2-清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法"><a href="#2-清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法" class="headerlink" title="2. 清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法"></a>2. 清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法</h2><p>浮动的元素是脱离文档标准流的，如果我们不清楚浮动，那么就会造成<strong>父元素高度塌陷</strong>，影响页面布局。</p><p>清除浮动的方式：</p><ul><li>为父元素设置高度</li><li>为父元素添加<code>overflow:hidden</code></li><li>伪元素<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fix</span><span class="selector-pseudo">::after</span> &#123; </span><br><span class="line">     <span class="attribute">content</span>:<span class="string">""</span>; </span><br><span class="line">     <span class="attribute">display</span>:block; </span><br><span class="line">     <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>使用伪元素的好处：不增加冗余的DOM节点，符合语义化</p><blockquote><p>overflow:hidden可以触发BFC机制。BFC：块级格式化上下文，创建了 BFC的元素就是一个独立的盒子，它规定了内部如何布局，并且与这个独立盒子里的布局不受外部影响，当然它也不会影响到外面的元素，<strong>计算BFC的高度时，浮动元素也参与计算</strong></p></blockquote><h2 id="3-如何让一个不定宽高的盒子水平垂直居中"><a href="#3-如何让一个不定宽高的盒子水平垂直居中" class="headerlink" title="3. 如何让一个不定宽高的盒子水平垂直居中"></a>3. 如何让一个不定宽高的盒子水平垂直居中</h2><blockquote><p>定位的方式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>css3属性</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flex布局</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-px和em和rem的区别"><a href="#4-px和em和rem的区别" class="headerlink" title="4. px和em和rem的区别"></a>4. px和em和rem的区别</h2><blockquote><p><code>px</code>: 像素，相对长度单位。像素<code>px</code>是相对于显示器屏幕分辨率而言的</p></blockquote><blockquote><p><code>em</code>的值并不是固定的，会继承父级元素的字体大小，代表倍数</p></blockquote><blockquote><p><code>rem</code>的值并不是固定的，始终是基于根元素 <code>&lt;html&gt;</code> 的，也代表倍数</p></blockquote><h2 id="5-position的值有哪些"><a href="#5-position的值有哪些" class="headerlink" title="5. position的值有哪些"></a>5. position的值有哪些</h2><blockquote><p>static： 默认值。没有定位，元素出现在正常的流中</p></blockquote><blockquote><p>relative（相对定位）：生成相对定位的元素,相对于其正常（原先本身）位置进行定位</p></blockquote><blockquote><p>absolute（绝对定位）：生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位</p></blockquote><blockquote><p>fixed（固定定位）：生成绝对定位的元素，相对于浏览器窗口进行定位</p></blockquote><h2 id="6-display-none与visibility：hidden的区别"><a href="#6-display-none与visibility：hidden的区别" class="headerlink" title="6. display:none与visibility：hidden的区别"></a>6. display:none与visibility：hidden的区别</h2><table><thead><tr><th>区别</th><th>display:none</th><th>visibility：hidden的</th></tr></thead><tbody><tr><td>是否占据空间</td><td>不占据任何空间，在文档渲染时，该元素如同不存在（但依然存在文档对象模型树中）</td><td>该元素空间依旧存在</td></tr><tr><td>是否渲染</td><td>会触发reflow（回流），进行渲染</td><td>只会触发repaint（重绘），因为没有发现位置变化，不进行渲染</td></tr><tr><td>是否是继承属性</td><td>不是继承属性，元素及其子元素都会消失</td><td>是继承属性，若子元素使用了visibility:visible，则不继承，这个子孙元素又会显现出</td></tr></tbody></table><h2 id="7-CSS中link-和-import的区别"><a href="#7-CSS中link-和-import的区别" class="headerlink" title="7. CSS中link 和@import的区别"></a>7. CSS中link 和@import的区别</h2><blockquote><p>link属于XHTML标签，@import完全是CSS提供的一种方式,只能加载CSS</p></blockquote><blockquote><p>加载顺序的差别，当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS 会等到页面全部被下载完再被加载</p></blockquote><blockquote><p>兼容性的差别。由于@import是CSS2.1提出的所以老的浏览器不支持，而link标签无此问题</p></blockquote><blockquote><p>当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的</p></blockquote><h2 id="8-什么是响应式设计，响应式设计的基本原理是什么"><a href="#8-什么是响应式设计，响应式设计的基本原理是什么" class="headerlink" title="8. 什么是响应式设计，响应式设计的基本原理是什么"></a>8. 什么是响应式设计，响应式设计的基本原理是什么</h2><blockquote><p>响应式网站设计是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。基本原理是通过媒体查询检测不同的设备屏幕尺寸做处理</p></blockquote><h2 id="9-为什么要初始化CSS样式"><a href="#9-为什么要初始化CSS样式" class="headerlink" title="9. 为什么要初始化CSS样式"></a>9. 为什么要初始化CSS样式</h2><blockquote><p>因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对 CSS 初始化往往会出现浏览器之间的页面显示差异</p></blockquote><blockquote><p>初始化样式会对 SEO 有一定的影响</p></blockquote><h2 id="10-CSS3有哪些新特性"><a href="#10-CSS3有哪些新特性" class="headerlink" title="10. CSS3有哪些新特性"></a>10. CSS3有哪些新特性</h2><ul><li>实现圆角<code>border-radius</code>，阴影<code>box-shadow</code>，边框图片<code>border-image</code></li><li>对文字加特效<code>text-shadow</code>，强制文本换行<code>word-wrap</code>，线性渐变<code>linear-gradient</code></li><li>实现旋转<code>transform:rotate(90deg)</code>,缩放<code>scale(0.85,0.90)</code>,<code>translate(0px,-30px)</code>定位,倾斜<code>skew(-9deg,0deg)</code>;</li><li>增加了更多的CSS选择器、多背景、<code>rgba()</code></li><li>唯一引入的伪元素是<code>::selection</code>；</li><li>实现媒体查询<code>@media</code>，多栏布局<code>flex</code></li><li>过渡<code>transition</code> 动画<code>animation</code></li></ul><h2 id="11-before-和-after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用"><a href="#11-before-和-after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用" class="headerlink" title="11. ::before 和 :after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用"></a>11. ::before 和 :after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用</h2><blockquote><p>单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）,双冒号是在当前规范中引入的，用于区分伪类和伪元素</p></blockquote><h2 id="12-CSS优化、提高性能的方法有哪些"><a href="#12-CSS优化、提高性能的方法有哪些" class="headerlink" title="12. CSS优化、提高性能的方法有哪些"></a>12. CSS优化、提高性能的方法有哪些</h2><ul><li>移除空的css规则（Remove empty rules）</li><li>正确使用display的属性</li><li>不滥用浮动、web字体</li><li>不声明过多的font-size</li><li>不在选择符中使用ID标识符</li><li>遵守盒模型规则</li><li>尽量减少页面重排、重绘</li><li>抽象提取公共样式，减少代码量</li></ul><h2 id="13-重绘和回流"><a href="#13-重绘和回流" class="headerlink" title="13. 重绘和回流"></a>13. 重绘和回流</h2><p><a href="https://juejin.im/post/5a9923e9518825558251c96a" rel="external nofollow noopener noreferrer" target="_blank">重绘和回流</a></p><h2 id="14-flex布局"><a href="#14-flex布局" class="headerlink" title="14. flex布局"></a>14. flex布局</h2><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" rel="external nofollow noopener noreferrer" target="_blank">flex布局教程–阮一峰</a></p><h2 id="15-css预处理器"><a href="#15-css预处理器" class="headerlink" title="15. css预处理器"></a>15. css预处理器</h2><p>提供了一种css的书写方式，常见的就是 <a href="http://sass.bootcss.com/docs/sass-reference/" rel="external nofollow noopener noreferrer" target="_blank">SAAS文档</a> 和 <a href="https://less.bootcss.com/" rel="external nofollow noopener noreferrer" target="_blank">LESS文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ltadpoles/web-document/tree/master/Other&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;原文链接&lt;/a&gt;&lt;br&gt;“卓越班”到了大三突然掀起一股毕业慌，一部分人投身于考研的热潮中，一部分人选择了培训机构学习技术。而我出于种种原因既不考研也不培训，选择自学java和web相关的知识，也希望因此能在以后谋得一份心仪的工作。&lt;/p&gt;&lt;p&gt;如果文章中有出现纰漏、错误之处，还请看到的小伙伴多多指教，先行谢过&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>百钱百鸡（枚举法）</title>
    <link href="https://lruihao.cn/posts/bqbj.html"/>
    <id>https://lruihao.cn/posts/bqbj.html</id>
    <published>2019-03-30T02:13:33.000Z</published>
    <updated>2019-04-13T01:39:11.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？</p></div><a id="more"></a><blockquote><p>设公鸡，母鸡，小鸡数目分别为x,y,z(x&lt;=20,y&lt;=33,z&lt;=100)</p></blockquote><h1 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h1><ul><li>x+y+z=100</li><li>5x+3y+z/3=100</li></ul><h1 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h1><blockquote><p>若依次枚举x,y,x,则至少尝试21*34*100=71400次，显然效率太低。<br>在x,y的数目确定后，z的数目也就确定下来了100-x-y，无须再进行枚举，此时约束条件只有一个5x+3y+z/3=100.只需枚举x,y，共21*34=714次。</p></blockquote><h1 id="算法设计"><a href="#算法设计" class="headerlink" title="算法设计"></a>算法设计</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">0</span>;x&lt;=<span class="number">20</span>;x++) <span class="comment">//21*34=714</span></span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">0</span>;y&lt;=<span class="number">33</span>;y++)&#123;</span><br><span class="line">        z=<span class="number">100</span>-y-x;</span><br><span class="line">        <span class="keyword">if</span>(z%<span class="number">3</span>==<span class="number">0</span> &amp;&amp; (<span class="number">5</span>*x+<span class="number">3</span>*y+z/<span class="number">3</span>)==<span class="number">100</span>)&#123;<span class="comment">//限定z能被3整除，进一步提高效率</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"cock number:%d\t"</span>,x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"hen number:%d\t"</span>,y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"chick number:%d\n"</span>,z);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>运行解</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cock number:<span class="number">0</span>   hen number:<span class="number">25</span>   chick number:<span class="number">75</span></span><br><span class="line">cock number:<span class="number">4</span>   hen number:<span class="number">18</span>   chick number:<span class="number">78</span></span><br><span class="line">cock number:<span class="number">8</span>   hen number:<span class="number">11</span>   chick number:<span class="number">81</span></span><br><span class="line">cock number:<span class="number">12</span>  hen number:<span class="number">4</span>    chick number:<span class="number">84</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="ACM" scheme="https://lruihao.cn/categories/ACM/"/>
    
    
      <category term="ACM" scheme="https://lruihao.cn/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>大数乘法</title>
    <link href="https://lruihao.cn/posts/dacheng.html"/>
    <id>https://lruihao.cn/posts/dacheng.html</id>
    <published>2019-03-28T14:50:43.000Z</published>
    <updated>2019-04-14T09:38:41.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>大数乘法c版(基础写法)</p></blockquote><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 202</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a[N] = &#123;<span class="number">0</span>&#125;, b[N] = &#123;<span class="number">0</span>&#125;, c[<span class="number">404</span>] = &#123;<span class="number">0</span>&#125;, la, lb, i, j,k, d = <span class="number">0</span>, n1, n2;<span class="comment">//202位数相乘，最长404位数</span></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> *p)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line">  la = get(a);</span><br><span class="line">  lb = get(b);</span><br><span class="line">  n1 = la &gt; lb ? la : lb;<span class="comment">//较长的数长</span></span><br><span class="line">  n2 = la &lt; lb ? la : lb;<span class="comment">//较短的数长</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (la &lt; lb)</span><br><span class="line">    change(a, b, lb);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//模拟乘法运算过程（进位等考虑）</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n2; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n1; j++) &#123;</span><br><span class="line">      c[j + i] += (b[i] * a[j] + d)%<span class="number">10</span>;</span><br><span class="line">      d = (b[i] * a[j] + d) / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (c[j+i]&gt;<span class="number">9</span>)&#123;</span><br><span class="line">        d++;</span><br><span class="line">        c[j+i]%=<span class="number">10</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (a[j+<span class="number">1</span>]==<span class="number">0</span>&amp;&amp;d!=<span class="number">0</span>)&#123;</span><br><span class="line">        k=j+i+<span class="number">1</span>;</span><br><span class="line">        c[k]=d;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    d=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  k=k&gt;(j+i<span class="number">-2</span>)?k:j+i<span class="number">-2</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = k; i &gt;= <span class="number">0</span>; i--)<span class="comment">//将倒序装入的结果打印</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, c[i]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入字符串作为数字，并返回数字去除前导0后的长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> *p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> x[N];</span><br><span class="line">  <span class="keyword">int</span> l, i, ex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>, x);</span><br><span class="line">  l = <span class="built_in">strlen</span>(x);</span><br><span class="line">  <span class="keyword">while</span> (x[ex] == <span class="string">'0'</span>)</span><br><span class="line">    ex++;</span><br><span class="line">  <span class="keyword">for</span> (i = ex; i &lt; l; i++) <span class="comment">//提取字符串数字到int数组，倒序排列</span></span><br><span class="line">    *(p + l - i - <span class="number">1</span>) = x[i] - <span class="string">'0'</span>;</span><br><span class="line">  <span class="keyword">return</span> l - ex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, t;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    t = a[i];</span><br><span class="line">    a[i] = b[i];</span><br><span class="line">    b[i] = t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1234567890123456789</span><br><span class="line">98765432109876543210</span><br><span class="line">121932631124517831023715309991126352690</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;大数乘法c版(基础写法)&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ACM" scheme="https://lruihao.cn/categories/ACM/"/>
    
    
      <category term="ACM" scheme="https://lruihao.cn/tags/ACM/"/>
    
      <category term="C" scheme="https://lruihao.cn/tags/C/"/>
    
      <category term="数学" scheme="https://lruihao.cn/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="大数运算" scheme="https://lruihao.cn/tags/%E5%A4%A7%E6%95%B0%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>vps配置ssl及https重定向</title>
    <link href="https://lruihao.cn/posts/http2https.html"/>
    <id>https://lruihao.cn/posts/http2https.html</id>
    <published>2019-03-28T11:40:54.000Z</published>
    <updated>2019-03-28T12:12:03.182Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note default"><p>记录自己在配置vps及博客SSL证书时遇到的问题。</p></div><a id="more"></a><h1 id="强制重定向https"><a href="#强制重定向https" class="headerlink" title="强制重定向https"></a>强制重定向https</h1><blockquote><p>有一种情况相信很多人都遇到过，就是虽然我们配置了ssl证书，但是https和http地址都是各自都可以单独访问。我们应该也见过类似于github的代码托管网站有强制https的开关。如果是这种情况我们还可以通过js进行301定向。</p></blockquote><figure class="highlight"><figcaption><span>http2https</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var targetProtocol = <span class="string">"https:"</span>;</span><br><span class="line">var host = <span class="string">"lruihao.cn"</span>;</span><br><span class="line"><span class="keyword">if</span> (window.location.host == host &amp;&amp; window.location.protocol != targetProtocol)&#123;</span><br><span class="line"> window.location.href = targetProtocol +</span><br><span class="line">  window.location.href.substring(window.location.protocol.length);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="腾讯云CDN配置"><a href="#腾讯云CDN配置" class="headerlink" title="腾讯云CDN配置"></a>腾讯云CDN配置</h1><blockquote><p>这个博客后来是转到了腾讯云的cos桶存储。当时在桶内静态网站设置的时候，设置强制https发现会出错。而且还接入了CDN，所以今天在CDN设置那里也看到了https的设置，打开强制https就OK了。这天在三丰云撸了一个免费的主机，搭了一个WordPress（想试试wp的感觉），然后vps的SSL问题现在也很简单了，第一步，到腾讯云申请免费证书；第二步，配置CDN，按步骤来，其中接入方式选择自有源站；第三步，强制https(可选)。</p></blockquote><img src="/posts/http2https/1.png" title="Cellvps--WordPress"> <img src="/posts/http2https/2.png" title="CDN域名管理">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;&lt;p&gt;记录自己在配置vps及博客SSL证书时遇到的问题。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="javascript" scheme="https://lruihao.cn/tags/javascript/"/>
    
      <category term="301重定向" scheme="https://lruihao.cn/tags/301%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
      <category term="VPS" scheme="https://lruihao.cn/tags/VPS/"/>
    
      <category term="SSL" scheme="https://lruihao.cn/tags/SSL/"/>
    
      <category term="CDN" scheme="https://lruihao.cn/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>hexo-theme-next @modified LRH</title>
    <link href="https://lruihao.cn/posts/hexo-theme-next.html"/>
    <id>https://lruihao.cn/posts/hexo-theme-next.html</id>
    <published>2019-03-21T08:43:19.000Z</published>
    <updated>2019-04-06T13:10:03.226Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success"><p>基于<a href="https://github.com/theme-next/hexo-theme-next" rel="external nofollow noopener noreferrer" target="_blank">hexo-theme-next 6.0+</a>的Pisces模板做的DIY扩展性设计。主要是一些custom style还有一些第三方的js。修改的地方太多也有点小乱就不提PR了。&emsp;<a href="https://github.com/Lruihao/hexo-theme-next" rel="external nofollow noopener noreferrer" target="_blank">modified</a>&emsp;官方Demo =&gt; <a href="https://theme-next.org" rel="external nofollow noopener noreferrer" target="_blank">https://theme-next.org</a><br>记录一下折腾过程，以后备份恢复博客也好方便自己。本文之前的美化修改请见<a href="/categories/posts/">hexo分类</a>。</p></div><a id="more"></a><h1 id="初步安装"><a href="#初步安装" class="headerlink" title="初步安装"></a>初步安装</h1><p>主要的几个自定义文件<br></p><figure class="highlight xml"><figcaption><span>主要修改路径及文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">config.swig#主题配置文件 相关账户信息自己注册替换</span><br><span class="line">\layout\custom\head.swig#在头部自定义加入标签</span><br><span class="line">\layout\custom\google_adsense.swig#谷歌广告模块，内有注释暂时弃用</span><br><span class="line">\layout\_layout.swig#主布局</span><br><span class="line">\layout\_macro\post.swig#文章布局</span><br><span class="line">\layout\_macro\post-copyright.swig#文章版权</span><br><span class="line">\layout\_macro\siderbar.swig#侧栏模板</span><br><span class="line">\layout\_third-party\copy-code.swig#复制按钮</span><br><span class="line">\layout\_partials\comments.swig#评论主模板</span><br><span class="line">\layout\_partials\footer.swig#底部模板</span><br><span class="line">\layout\_third-party\custom.swig#该模块在layout.swig引入用于在body自定义标签</span><br><span class="line">\source\css\_custom\customs.styl#主要用户自定义样式表</span><br><span class="line">\source\fonts\#引入了一些我的手写体及外部字体</span><br></pre></td></tr></table></figure><p></p><figure class="highlight bash"><figcaption><span>安装整个改过的主题,然后下载相应的lib资源</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Lruihao/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><img src="/posts/hexo-theme-next/lib.png" title="lib资源"><h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><h2 id="Chat-Services"><a href="#Chat-Services" class="headerlink" title="Chat Services"></a>Chat Services</h2><blockquote><p>共chatra,tidio,daovoice三个选项，三选一</p></blockquote><figure class="highlight plain"><figcaption><span>config.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Chatra Support</span><br><span class="line"># See: https://chatra.io</span><br><span class="line"># Dashboard: https://app.chatra.io/settings/general</span><br><span class="line">chatra:</span><br><span class="line">  enable: false</span><br><span class="line">  async: true</span><br><span class="line">  id: # visit Dashboard to get your ChatraID</span><br><span class="line">  #embed: # unfinished experimental feature for developers, See: https://chatra.io/help/api/#injectto</span><br><span class="line"></span><br><span class="line"># Tidio Support</span><br><span class="line"># See: https://www.tidiochat.com</span><br><span class="line"># Dashboard: https://www.tidiochat.com/panel/dashboard</span><br><span class="line">tidio:</span><br><span class="line">  enable: false</span><br><span class="line">  key: # Public Key, get it from Dashboard, See: https://www.tidiochat.com/panel/settings/developer</span><br><span class="line"></span><br><span class="line">#在线客服</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: xxxx   # http://www.daovoice.io/</span><br></pre></td></tr></table></figure><h2 id="pdf和Mermaid解析模块"><a href="#pdf和Mermaid解析模块" class="headerlink" title="pdf和Mermaid解析模块"></a>pdf和Mermaid解析模块</h2><p><a href="https://lruihao.cn/posts/next-pdf.html">pdf传送门</a><br></p><figure class="highlight plain"><figcaption><span>config.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pdf:</span><br><span class="line">  enable: false</span><br><span class="line">  # Default height</span><br><span class="line">  height: 500px</span><br><span class="line">  pdfobject:</span><br><span class="line">    cdn: //cdn.jsdelivr.net/npm/pdfobject@2/pdfobject.min.js</span><br><span class="line">    #cdn: //cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js</span><br><span class="line"></span><br><span class="line"># Mermaid tag</span><br><span class="line">mermaid:</span><br><span class="line">  enable: false</span><br><span class="line">  # Available themes: default | dark | forest | neutral</span><br><span class="line">  theme: forest</span><br><span class="line">  cdn: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js</span><br><span class="line">  #cdn: //cdnjs.cloudflare.com/ajax/libs/mermaid/8.0.0/mermaid.min.js</span><br></pre></td></tr></table></figure><p></p><h2 id="模仿csdn转发样式"><a href="#模仿csdn转发样式" class="headerlink" title="模仿csdn转发样式"></a>模仿csdn转发样式</h2><figure class="highlight diff"><figcaption><span>post.swig主要修改</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">   &lt;a class="post-title-link" href="&#123;&#123; url_for(post.path) &#125;&#125;" itemprop="url"&gt;</span><br><span class="line"><span class="addition">+    &#123;% if post.repost %&#125;</span></span><br><span class="line"><span class="addition">+      &lt;span class="repost"&gt;转&lt;/span&gt;</span></span><br><span class="line"><span class="addition">+    &#123;% endif %&#125;</span></span><br><span class="line">     &#123;&#123; post.title | default(__('post.untitled'))&#125;&#125;</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line"> &#123;% else -%&#125;</span><br><span class="line"><span class="addition">+  &#123;% if post.repost %&#125;</span></span><br><span class="line"><span class="addition">+    &lt;span class="repost"&gt;转&lt;/span&gt;</span></span><br><span class="line"><span class="addition">+  &#123;% endif %&#125;</span></span><br><span class="line">   &#123;&#123;- post.title -&#125;&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>css样式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.repost</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5acc79</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e7f4df</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><figcaption><span>post使用</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxxx</span><br><span class="line">repost: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><a href="https://lruihao.cn/tags/他山之石/">预览</a></p><h2 id="热度页面"><a href="#热度页面" class="headerlink" title="热度页面"></a>热度页面</h2><blockquote><p>打开<code>hexo\themes\next\layout</code>新建<code>top.swig</code>文件，写下如下内容保存：<br>其中第36行改成你自己的leancloud的appid和appkey,比如我的是在主题配置文件里面的valine配置下，所以我就写成<code>theme.valine.appid</code>。和我一样就不需要修改，其他自行配置。</p></blockquote><figure class="highlight xml"><figcaption><span>top.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends '_layout.swig' %&#125;</span><br><span class="line">&#123;% import '_macro/sidebar.swig' as sidebar_template %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% block title %&#125;&#123;#</span><br><span class="line">  #&#125;&#123;% set page_title_suffix = ' | ' + title %&#125;&#123;#</span><br><span class="line"></span><br><span class="line">  #&#125;&#123;% if page.type === "categories" and not page.title %&#125;&#123;#</span><br><span class="line">    #&#125;&#123;&#123; __('title.category') + page_title_suffix &#125;&#125;&#123;#</span><br><span class="line">  #&#125;&#123;% elif page.type === "tags" and not page.title %&#125;&#123;#</span><br><span class="line">    #&#125;&#123;&#123; __('title.tag') + page_title_suffix &#125;&#125;&#123;#</span><br><span class="line"></span><br><span class="line">  #&#125;&#123;% elif page.type === "photos" and not page.title %&#125;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __('title.photos') + page_title_suffix &#125;&#125;&#123;#</span><br><span class="line"></span><br><span class="line">  #&#125;&#123;% else %&#125;&#123;#</span><br><span class="line">    #&#125;&#123;&#123; page.title + page_title_suffix &#125;&#125;&#123;#</span><br><span class="line">  #&#125;&#123;% endif %&#125;&#123;#</span><br><span class="line">#&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block page_class %&#125;page-post-detail&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"posts"</span> <span class="attr">class</span>=<span class="string">"posts-expand"</span>&gt;</span></span><br><span class="line">    &#123;##################&#125;</span><br><span class="line">    &#123;### PAGE BLOCK ###&#125;</span><br><span class="line">    &#123;##################&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-block page"</span>&gt;</span></span><br><span class="line">      &#123;% include '_partials/page-header.swig' %&#125;</span><br><span class="line">      &#123;#################&#125;</span><br><span class="line">      &#123;### PAGE BODY ###&#125;</span><br><span class="line">      &#123;#################&#125;</span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">AV.initialize("&#123;&#123; theme.valine.appid &#125;&#125;", "&#123;&#123; theme.valine.appkey &#125;&#125;");</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        setTimeout(function()&#123;</span></span><br><span class="line"><span class="undefined">          var time=0</span></span><br><span class="line"><span class="undefined">          var title=""</span></span><br><span class="line"><span class="undefined">          var url=""</span></span><br><span class="line"><span class="undefined">          var query = new AV.Query('Counter');</span></span><br><span class="line"><span class="undefined">          query.notEqualTo('id',0);</span></span><br><span class="line"><span class="undefined">          query.descending('time');</span></span><br><span class="line"><span class="undefined">          query.limit(&#123;&#123; page.limit &#125;&#125;); //设置篇数</span></span><br><span class="line"><span class="undefined">          query.find().then(function (todo) &#123;</span></span><br><span class="line"><span class="undefined">            for (var i=0;i&lt;&#123;&#123; page.limit &#125;&#125;;i++)&#123;</span></span><br><span class="line"><span class="undefined">              var result=todo[i].attributes;</span></span><br><span class="line"><span class="undefined">              time=result.time;</span></span><br><span class="line"><span class="undefined">              title=result.title;</span></span><br><span class="line"><span class="undefined">              category=result.categories</span></span><br><span class="line"><span class="undefined">              url=result.url;</span></span><br><span class="line"><span class="xml">              var content="<span class="tag">&lt;<span class="name">p</span>&gt;</span>"+"【文章热度:"+time+"℃】"+"<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'"+"&#123;&#123; config.url &#125;&#125;"+""+url+"'</span>&gt;</span>"+title+"<span class="tag">&lt;/<span class="name">a</span>&gt;</span>"+"<span class="tag">&lt;/<span class="name">p</span>&gt;</span>";</span></span><br><span class="line"><span class="undefined">              document.getElementById("top").innerHTML+=content</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          &#125;, function (error) &#123;</span></span><br><span class="line"><span class="undefined">            console.log("error");</span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;,1000)</span></span><br><span class="line"><span class="undefined">      </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-body&#123;% if theme.han %&#125; han-init-context&#123;% endif %&#125;&#123;% if page.direction &amp;&amp; page.direction.toLowerCase() === 'rtl' %&#125; rtl&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      &#123;#####################&#125;</span><br><span class="line">      &#123;### END PAGE BODY ###&#125;</span><br><span class="line">      &#123;#####################&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% include '_partials/breadcrumb.swig' %&#125;</span><br><span class="line">    &#123;######################&#125;</span><br><span class="line">    &#123;### END PAGE BLOCK ###&#125;</span><br><span class="line">    &#123;######################&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block sidebar %&#125;</span><br><span class="line">  &#123;&#123; sidebar_template.render(false) &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block script_extra %&#125;</span><br><span class="line">  &#123;% include '_scripts/pages/post-details.swig' %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>然后<code>hexo n page top</code>新建一个页面文章配置写下如下内容，limit表示显示篇数：<br></p><figure class="highlight xml"><figcaption><span>top.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 热度</span><br><span class="line">layout: top</span><br><span class="line">limit: 20</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p></p><h2 id="复制按钮样式"><a href="#复制按钮样式" class="headerlink" title="复制按钮样式"></a>复制按钮样式</h2><p><img src="/posts/hexo-theme-next/lightbtn.png" style="float:left;width:25%;height:130px"><img src="/posts/hexo-theme-next/nightbtn.png" style="float:left;width:25%;height:130px"><img src="/posts/hexo-theme-next/flatbtn.png" style="float:left;width:25%;height:130px"><img src="/posts/hexo-theme-next/3dbtn.png" style="float:left;width:25%;height:130px"></p><div style="clear:both"></div><blockquote><p>本来只想简单美化一下变成night样式的，后来写完发现3dbtn也挺喜欢的。</p></blockquote><figure class="highlight java"><figcaption><span>config配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Manual define the border radius in codeblock</span><br><span class="line">  # Leave it empty for the default 1</span><br><span class="line">  border_radius: <span class="number">5</span></span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: <span class="keyword">true</span></span><br><span class="line">    # Show text copy result</span><br><span class="line">    show_result: <span class="keyword">true</span></span><br><span class="line">    # Style: 'light,night,flat,3dbtn' is currently available, leave it empty or light is default theme</span><br><span class="line">    style: night</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;&lt;p&gt;基于&lt;a href=&quot;https://github.com/theme-next/hexo-theme-next&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;hexo-theme-next 6.0+&lt;/a&gt;的Pisces模板做的DIY扩展性设计。主要是一些custom style还有一些第三方的js。修改的地方太多也有点小乱就不提PR了。&amp;emsp;&lt;a href=&quot;https://github.com/Lruihao/hexo-theme-next&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;modified&lt;/a&gt;&amp;emsp;官方Demo =&amp;gt; &lt;a href=&quot;https://theme-next.org&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://theme-next.org&lt;/a&gt;&lt;br&gt;记录一下折腾过程，以后备份恢复博客也好方便自己。本文之前的美化修改请见&lt;a href=&quot;/categories/posts/&quot;&gt;hexo分类&lt;/a&gt;。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://lruihao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://lruihao.cn/tags/hexo/"/>
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="博客日志" scheme="https://lruihao.cn/tags/%E5%8D%9A%E5%AE%A2%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Java父类子类的对象初始化过程</title>
    <link href="https://lruihao.cn/posts/substatus.html"/>
    <id>https://lruihao.cn/posts/substatus.html</id>
    <published>2019-03-21T05:36:25.000Z</published>
    <updated>2019-03-21T05:53:09.485Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>摘要: Java基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。</p></blockquote><a id="more"></a><h1 id="基本初始化过程"><a href="#基本初始化过程" class="headerlink" title="基本初始化过程"></a>基本初始化过程</h1><p>对于一个简单类的初始化过程是：<br><code>static 修饰的模块（static变量和static 块） =&gt; 按照代码顺序依次执行。</code><br>↓<br><code>实例变量 及非static模块 =&gt; 按照代码顺序依次执行。</code><br>↓<br><code>构造函数 =&gt; 执行对应的构造函数。</code></p><h1 id="子类的初始化过程"><a href="#子类的初始化过程" class="headerlink" title="子类的初始化过程"></a>子类的初始化过程</h1><p><code>父类static修饰的模块</code><br>↓<br><code>子类static修饰模块</code><br>↓<br><code>父类实例变量和非static块</code><br>↓<br><code>父类对应构造函数。当子类对应构造函数中没有显示调用时调用的是父类默认的构造函数。</code><br>↓<br><code>子类实例变量和非static块</code><br>↓<br><code>子类构造函数</code></p><figure class="highlight java"><figcaption><span>Debug demo</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> code0507;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Sub sub = <span class="keyword">new</span> Sub();</span><br><span class="line">System.out.println(sub);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Super</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Super</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test();  <span class="comment">//被子类同名函数覆盖，优先访问子类test</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">extends</span> <span class="title">Super</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Sub</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">8</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;摘要: Java基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="https://lruihao.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://lruihao.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu + windows双系统默认启动项设置</title>
    <link href="https://lruihao.cn/posts/windefault.html"/>
    <id>https://lruihao.cn/posts/windefault.html</id>
    <published>2019-03-21T04:48:30.000Z</published>
    <updated>2019-04-06T05:02:55.374Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary"><p>双系统默认启动项是Ubuntu，而日常使用最多的还是Windows，所以说很不方便，一不小心就开机到Ubuntu去了。今天来设置一下。</p></div><a id="more"></a><h1 id="修改-etc-default-grub文件"><a href="#修改-etc-default-grub文件" class="headerlink" title="修改/etc/default/grub文件"></a>修改<code>/etc/default/grub</code>文件</h1><blockquote><p>同时按住键盘上的“Ctrl Alt T”三个键（即快捷键“Ctrl+Alt+T”），打开终端窗口。在终端内输入 sudo gedit /etc/default/grub 按 Enter 键确认，提示输入用户密码，输入的用户密码是看不见的，不要管它，输入完成确认即可打开grub文件。</p></blockquote><img src="/posts/windefault/1.png"><blockquote><p>把grub文件中的 <code>GRUB_DEFAULT=0</code> 中的 0 改为 <code>saved</code>,把 <code>GRUB_TIMEOUT=10</code> 中的 10 改为 5。（这里的5表示开机时等待选择操作系统是时间是5秒）<br>在文件末尾添加 <code>GRUB_SAVEDEFAULT=true</code>后保存文件并退出。</p></blockquote><img src="/posts/windefault/2.png"><h1 id="更新启动配置文件"><a href="#更新启动配置文件" class="headerlink" title="更新启动配置文件"></a>更新启动配置文件</h1><blockquote><p>在终端输入 sudo update-grub 按 Enter 键确认</p></blockquote><img src="/posts/windefault/3.png"><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1><p><code>sudo reboot</code>或者点击重启，重启到启动菜单时，选择你要更改为默认启动项的系统，按 Enter 键确认启动即可，下次启动时刚刚选择的系统即为默认启动系统，直到你手动选择启动其他的系统为止。以后可以轻松的来回切换默认系统了。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;双系统默认启动项是Ubuntu，而日常使用最多的还是Windows，所以说很不方便，一不小心就开机到Ubuntu去了。今天来设置一下。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="linux" scheme="https://lruihao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://lruihao.cn/tags/linux/"/>
    
      <category term="Windows" scheme="https://lruihao.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>宅音乐播放器</title>
    <link href="https://lruihao.cn/posts/player.html"/>
    <id>https://lruihao.cn/posts/player.html</id>
    <published>2019-03-19T15:32:56.000Z</published>
    <updated>2019-04-24T05:24:31.042Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info"><p>宅音乐播放器，HTML5网页播放器，集成后台管理及API调用，目前正在开发中，敬请关注~<br><a href="https://github.com/lzx8589561/zhai-music" rel="external nofollow noopener noreferrer" target="_blank">原项目</a>由<a href="https://www.ilt.me" rel="external nofollow noopener noreferrer" target="_blank">IT技术宅</a>开源，使用thinkPHP开发后台。 <a href="https://github.com/Lruihao/zhai-music" rel="external nofollow noopener noreferrer" target="_blank">fork地址</a>是我个人学习模仿的库，也是相当于备份源码。<br><em>注： 插件修改于明月浩空免费版，仅用于学习交流，无商业价值，如发现商业传播，将禁止软件的免费使用。</em></p></div><a id="more"></a><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li>后端：thinkphp 5.1</li><li>前端：layui</li><li>数据库：mysql</li></ul><h2 id="演示站"><a href="#演示站" class="headerlink" title="演示站"></a>演示站</h2><div class="note danger"><p>以兼容移动端，测试账号仅供测试请勿修改密码！</p></div><figure class="highlight plain"><figcaption><span>测试账号</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test</span><br><span class="line">test123</span><br></pre></td></tr></table></figure><ul><li><a href="https://player.ilt.me/" rel="external nofollow noopener noreferrer" target="_blank">https://player.ilt.me/</a></li><li><a href="https://player.lruihao.cn/" target="_blank" rel="noopener">https://player.lruihao.cn/</a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="视频安装教程"><a href="#视频安装教程" class="headerlink" title="视频安装教程"></a>视频安装教程</h3><p><a href="https://www.bilibili.com/video/av46476706" rel="external nofollow noopener noreferrer" target="_blank">https://www.bilibili.com/video/av46476706</a></p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul><li>composer</li><li>php 5.6+</li><li>mysql 5.5+</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>安装php依赖包<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure><p></p><p>配置数据库，配置链接数据库名以及用户名密码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/config/database.php</span><br></pre></td></tr></table></figure><p></p><p>创建数据库<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">字符编码：utf8 -- UTF-8 Unicode</span><br><span class="line">导入数据库脚本，脚本位置extend/database</span><br></pre></td></tr></table></figure><p></p><h3 id="伪静态配置"><a href="#伪静态配置" class="headerlink" title="伪静态配置"></a>伪静态配置</h3><h4 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    index  index.htm index.html index.php;</span><br><span class="line">    #访问路径的文件不存在则重写URL转交给ThinkPHP处理</span><br><span class="line">    if (!-e $request_filename) &#123;</span><br><span class="line">       rewrite  ^/(.*)$  /index.php?s=$1  last;</span><br><span class="line">       break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h4><p>项目自带apache静态化无需配置</p><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><ul><li>添加public为web根目录</li><li>若为apache服务器则默认伪静态，nginx可自行配置伪静态</li></ul><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><img src="/posts/player/player.png"><h3 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h3><img src="/posts/player/index.png"><h3 id="登陆页面"><a href="#登陆页面" class="headerlink" title="登陆页面"></a>登陆页面</h3><img src="/posts/player/login.png"><h3 id="后台首页"><a href="#后台首页" class="headerlink" title="后台首页"></a>后台首页</h3><img src="/posts/player/admin_index.png"><h3 id="后台播放器管理页面"><a href="#后台播放器管理页面" class="headerlink" title="后台播放器管理页面"></a>后台播放器管理页面</h3><img src="/posts/player/admin_player.png"><h3 id="后台歌单管理页面"><a href="#后台歌单管理页面" class="headerlink" title="后台歌单管理页面"></a>后台歌单管理页面</h3><img src="/posts/player/admin_song_sheet.png">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;宅音乐播放器，HTML5网页播放器，集成后台管理及API调用，目前正在开发中，敬请关注~&lt;br&gt;&lt;a href=&quot;https://github.com/lzx8589561/zhai-music&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;原项目&lt;/a&gt;由&lt;a href=&quot;https://www.ilt.me&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;IT技术宅&lt;/a&gt;开源，使用thinkPHP开发后台。 &lt;a href=&quot;https://github.com/Lruihao/zhai-music&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;fork地址&lt;/a&gt;是我个人学习模仿的库，也是相当于备份源码。&lt;br&gt;&lt;em&gt;注： 插件修改于明月浩空免费版，仅用于学习交流，无商业价值，如发现商业传播，将禁止软件的免费使用。&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Web" scheme="https://lruihao.cn/categories/Web/"/>
    
    
      <category term="html/css" scheme="https://lruihao.cn/tags/html-css/"/>
    
      <category term="宝塔面板" scheme="https://lruihao.cn/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
      <category term="前端" scheme="https://lruihao.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="php" scheme="https://lruihao.cn/tags/php/"/>
    
  </entry>
  
</feed>
